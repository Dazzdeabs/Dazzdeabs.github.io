{"ast":null,"code":"import _defineProperty from \"/Users/darrendeabreu/Desktop/my-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/darrendeabreu/Desktop/my-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/darrendeabreu/Desktop/my-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/darrendeabreu/Desktop/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/darrendeabreu/Desktop/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/darrendeabreu/Desktop/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/darrendeabreu/Desktop/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/darrendeabreu/Desktop/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/darrendeabreu/Desktop/my-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/darrendeabreu/Desktop/my-app/src/components/transfers.js\";\nimport React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport jsSha from 'jssha';\nimport axios from 'axios';\nimport Login from './login';\n\nvar Transfers =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Transfers, _Component);\n\n  // {/* The constructor for a React Component is called before it is mounted. */}\n  function Transfers(props) {\n    var _this;\n\n    _classCallCheck(this, Transfers);\n\n    // {/* Pass props to the constructor by super. */}\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Transfers).call(this, props)); // {/* Initalise the local state by assigning objects to this.state. */}\n\n    _this.state = {\n      // {/* Passing an empty string as a value for the objects below. */}\n      amount: '',\n      ref: '',\n      dest: '',\n      src: '',\n      type: '',\n      time: '',\n      // {/* Passing an array as a value for the objects below. */}\n      accounts: [],\n      clients: [],\n      transactions: []\n    };\n    {\n      /**\n      * Bind the value of the control to the currrent value of the state.\n      * There must be a bound so that if there is a value and something that causes the control to re-render,\n      it gets the correct value out of the state.\n      */\n    }\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.Payment = _this.Payment.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // {/* Invoked immediately after a component is mounted. */}\n\n\n  _createClass(Transfers, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      {\n        /* Props is used to pass the username and password down the component tree from the parent (App.js) to child (MyAccounts.js) */\n      }\n      var user = this.props.username; //'blackfish787';\n\n      var password = this.props.password; //'lestat';\n\n      var hmac = new jsSha('SHA-256', 'TEXT');\n      hmac.setHMACKey(password, 'TEXT');\n      hmac.update(user);\n      hmac.update(Date.now().toString(36).substring(0, 4));\n      var token = \"\".concat(hmac.getHMAC('HEX'), \"%\").concat(user);\n      var api = axios.create({\n        // {/** Instantiate the network request. */}\n        baseURL: 'http://45.77.58.134:8080',\n        headers: {\n          'Authorization': 'Bearer ' + token\n        }\n      });\n\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var res, acc, transactions;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return api.get('/clients');\n\n              case 2:\n                res = _context.sent;\n\n                _this2.setState({\n                  clients: res.data\n                }); // {/*  Retrieve accounts for specified client UUID. */}\n\n\n                _context.next = 6;\n                return api.get(\"/accounts/\" + _this2.state.clients[0][\"_id\"]);\n\n              case 6:\n                acc = _context.sent;\n\n                _this2.setState({\n                  accounts: acc.data\n                }); // {/*  Retrieves all( .*) transactions for given accounts based on the clients ID. */}\n\n\n                _context.next = 10;\n                return api.get(\"/transactions/\".concat(acc.data[0]._id, \"/.*\"));\n\n              case 10:\n                transactions = _context.sent;\n\n                _this2.setState({\n                  transactions: transactions.data\n                });\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }))();\n    }\n  }, {\n    key: \"Payment\",\n    value: function Payment() {\n      {\n        /* Props is used to pass the username and password down the component tree from the parent (App.js) to child (MyAccounts.js) */\n      }\n      var user = this.props.username; //'blackfish787';\n\n      var password = this.props.password; //'lestat';\n\n      var hmac = new jsSha('SHA-256', 'TEXT');\n      hmac.setHMACKey(password, 'TEXT');\n      hmac.update(user);\n      hmac.update(Date.now().toString(36).substring(0, 4));\n      var token = \"\".concat(hmac.getHMAC('HEX'), \"%\").concat(user);\n      var api = axios.create({\n        // {/** Instantiate the network request. */}\n        baseURL: 'http://45.77.58.134:8080',\n        headers: {\n          'Authorization': 'Bearer ' + token\n        }\n      }); // {/** Post a new transaction, requires a body object as below. */}\n\n      api.post('/transactions', {\n        time: '',\n        type: 'debit',\n        src: this.state.src,\n        dest: this.state.dest,\n        amount: -this.state.amount,\n        ref: this.state.ref\n      }); // {/** Post a new transaction, requires a body object as below. */}\n\n      api.post('/transactions', {\n        time: '',\n        type: 'credit',\n        src: this.state.dest,\n        dest: this.state.src,\n        amount: this.state.amount,\n        ref: this.state.ref\n      });\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n      console.log(this.state.src);\n    } // {/* Render method returns a second navbar, textboxes and a dropdown on the screen for user to make an inter-account transfer. */}\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"navbar2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: \"/transfers\",\n        className: \"navButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \" Inter-Account Transfers \")), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"payments\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: this.h1Style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Inter-Account Transfers\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \" 1. Accounts \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \" Account From:  \"), React.createElement(\"select\", {\n        className: \"imput\",\n        name: \"src\",\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, this.state.accounts.map(function (x) {\n        return React.createElement(\"option\", {\n          value: x._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, \"\".concat(x.description));\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \" Account To:  \"), React.createElement(\"select\", {\n        className: \"imput\",\n        name: \"dest\",\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, this.state.accounts.map(function (x) {\n        return React.createElement(\"option\", {\n          value: x._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, \"\".concat(x.description));\n      })), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \" 2. Amount \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \" Enter amount to transfer: \", React.createElement(\"input\", {\n        className: \"imput\",\n        onChange: this.onChange,\n        name: \"amount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      })), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \" 3. References \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \" To Reference: \", React.createElement(\"input\", {\n        className: \"imput\",\n        onChange: this.onChange,\n        name: \"ref\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Please note\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Your transfer may take up to 24 hours to reflect in your account.\"), React.createElement(\"button\", {\n        className: \"button\",\n        onClick: this.Payment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Transfer\"))));\n    }\n  }]);\n\n  return Transfers;\n}(Component);\n\nexport default Transfers;","map":{"version":3,"sources":["/Users/darrendeabreu/Desktop/my-app/src/components/transfers.js"],"names":["React","Component","NavLink","jsSha","axios","Login","Transfers","props","state","amount","ref","dest","src","type","time","accounts","clients","transactions","onChange","bind","Payment","user","username","password","hmac","setHMACKey","update","Date","now","toString","substring","token","getHMAC","api","create","baseURL","headers","get","res","setState","data","acc","_id","post","e","target","name","value","console","log","h1Style","map","x","description"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport jsSha from 'jssha';\nimport axios from 'axios';\nimport Login from './login'\n\nclass Transfers extends Component {\n  // {/* The constructor for a React Component is called before it is mounted. */}\n  constructor(props) {\n    // {/* Pass props to the constructor by super. */}\n    super(props);\n    // {/* Initalise the local state by assigning objects to this.state. */}\n    this.state={\n      // {/* Passing an empty string as a value for the objects below. */}\n      amount: '',\n      ref: '',\n      dest: '',\n      src: '',\n      type:'',\n      time: '',\n      // {/* Passing an array as a value for the objects below. */}\n      accounts:[],\n      clients: [],\n      transactions: [],\n    }\n\n    {/**\n    * Bind the value of the control to the currrent value of the state.\n    * There must be a bound so that if there is a value and something that causes the control to re-render,\n    it gets the correct value out of the state.\n    */}\n    this.onChange=this.onChange.bind(this)\n    this.Payment=this.Payment.bind(this)\n  }\n\n\n  // {/* Invoked immediately after a component is mounted. */}\n  componentDidMount() {\n           {/* Props is used to pass the username and password down the component tree from the parent (App.js) to child (MyAccounts.js) */}\n           const user = this.props.username; //'blackfish787';\n           const password = this.props.password; //'lestat';\n           const hmac = new jsSha('SHA-256', 'TEXT');\n           hmac.setHMACKey(password, 'TEXT');\n           hmac.update(user);\n           hmac.update(Date.now().toString(36).substring(0, 4));\n           const token = `${hmac.getHMAC('HEX')}%${user}`;\n           const api = axios.create({\n             // {/** Instantiate the network request. */}\n             baseURL: 'http://45.77.58.134:8080',\n             headers: { 'Authorization': 'Bearer ' + token }\n           });\n\n           (async () => {\n             // {/* Retrieve clients for authenticated user. */}}\n             const res = await api.get('/clients');\n             {/* Calls setState() immediately in componentDidMount().\n               * setSate() updates the clients state with the client data.\n               * Passing clients object to setState().\n             */}\n             this.setState({clients: res.data});\n             // {/*  Retrieve accounts for specified client UUID. */}\n             const acc = await api.get(`/accounts/` + this.state.clients[0][\"_id\"])\n             {/* Calls setState() immediately in componentDidMount().\n               * setSate() updates the accounts state with account data.\n               * Passing accounts object to setState().\n             */}\n             this.setState({accounts: acc.data})\n             // {/*  Retrieves all( .*) transactions for given accounts based on the clients ID. */}\n             const transactions = await api.get(`/transactions/${acc.data[0]._id}/.*`)\n             {/* Calls setState() immediately in componentDidMount().\n               * setSate() updates the transactions state with transactions data.\n               * Passing transactions object to setState().\n             */}\n             this.setState({transactions: transactions.data});\n           })()\n    }\n\n\n    Payment(){\n      {/* Props is used to pass the username and password down the component tree from the parent (App.js) to child (MyAccounts.js) */}\n        const user = this.props.username; //'blackfish787';\n        const password = this.props.password; //'lestat';\n        const hmac = new jsSha('SHA-256', 'TEXT');\n        hmac.setHMACKey(password, 'TEXT');\n        hmac.update(user);\n        hmac.update(Date.now().toString(36).substring(0, 4));\n        const token = `${hmac.getHMAC('HEX')}%${user}`;\n        const api = axios.create({\n          // {/** Instantiate the network request. */}\n          baseURL: 'http://45.77.58.134:8080',\n          headers: { 'Authorization': 'Bearer ' + token }\n        });\n\n         // {/** Post a new transaction, requires a body object as below. */}\n         api.post('/transactions', {\n             time: '',\n             type: 'debit',\n             src: this.state.src,\n             dest: this.state.dest,\n             amount: -(this.state.amount),\n             ref: this.state.ref,\n             });\n\n           // {/** Post a new transaction, requires a body object as below. */}\n           api.post('/transactions', {\n              time: '',\n              type: 'credit',\n              src: this.state.dest,\n              dest: this.state.src,\n              amount: this.state.amount,\n              ref: this.state.ref,\n              })\n         };\n\n\n onChange(e){\n  this.setState({[e.target.name]: e.target.value});\n  console.log(this.state.src);\n}\n\n// {/* Render method returns a second navbar, textboxes and a dropdown on the screen for user to make an inter-account transfer. */}\n  render () {\n    return (\n      <div>\n      <div className=\"navbar2\">\n        <NavLink to=\"/transfers\" className=\"navButton\"> Inter-Account Transfers </NavLink>\n        </div>\n        <div className=\"content\">\n        <div id=\"payments\">\n          <h1 style={this.h1Style}>Inter-Account Transfers</h1>\n            <h2> 1. Accounts </h2>\n            <p> Account From:  </p>\n              <select className=\"imput\" name=\"src\"  onChange={this.onChange}>\n              {this.state.accounts.map(x =>\n                <option value={x._id}>{`${x.description}`}</option>\n              )}\n              </select>\n              <p> Account To:  </p>\n                <select className=\"imput\" name=\"dest\"  onChange={this.onChange}>\n                {this.state.accounts.map(x =>\n                  <option value={x._id}>{`${x.description}`}</option>\n                )}\n                </select>\n            <h2> 2. Amount </h2>\n            <p> Enter amount to transfer: <input className=\"imput\" onChange={this.onChange} name=\"amount\" /></p>\n            <h2> 3. References </h2>\n            <p> To Reference: <input className=\"imput\" onChange={this.onChange} name=\"ref\" /></p>\n            <p><b>Please note</b></p>\n            <p>Your transfer may take up to 24 hours to reflect in your account.</p>\n            <button className='button' onClick={this.Payment}>Transfer</button>\n      </div>\n    </div>\n    </div>\n    )\n  }\n}\n\n export default Transfers\n"]},"metadata":{},"sourceType":"module"}