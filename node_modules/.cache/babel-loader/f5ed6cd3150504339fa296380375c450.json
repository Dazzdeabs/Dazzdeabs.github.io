{"ast":null,"code":"import _defineProperty from \"/Users/darrendeabreu/Desktop/my-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/darrendeabreu/Desktop/my-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/darrendeabreu/Desktop/my-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/darrendeabreu/Desktop/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/darrendeabreu/Desktop/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/darrendeabreu/Desktop/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/darrendeabreu/Desktop/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/darrendeabreu/Desktop/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/darrendeabreu/Desktop/my-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/darrendeabreu/Desktop/my-app/src/components/payments.js\";\nimport React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport axios from 'axios';\nimport jsSha from 'jssha';\n\nvar Payments =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Payments, _Component);\n\n  // {/* The constructor for a React Component is called before it is mounted. */}\n  function Payments(props) {\n    var _this;\n\n    _classCallCheck(this, Payments);\n\n    // {/* Pass props to the constructor by super. */}\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Payments).call(this, props)); // {/* Initalise the local state by assigning objects to this.state. */}\n\n    _this.state = {\n      // {/* Passing an array as a value for the objects below. */}\n      clients: [],\n      transactions: [],\n      accounts: [],\n      // {/* Passing an empty string as a value for the objects below. */}\n      time: '',\n      type: '',\n      dest: '',\n      amount: '',\n      src: '',\n      ref: ''\n    };\n    {}\n    /**\n    * Bind the value of the control to the currrent value of the state.\n    * There must be a bound so that if there is a value and something that causes the control to re-render,\n    it gets the correct value out of the state.\n    */\n    // this.componentDidMount=this.componentDidMount.bind(this)\n\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.Payment = _this.Payment.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // {/* Invoked immediately after a component is mounted. */}\n\n\n  _createClass(Payments, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // /* Props is used to pass the username and password down the component tree from the parent (App.js) to child (MyAccounts.js) */\n      var user = this.props.username; //'blackfish787';\n\n      var password = this.props.password; //'lestat';\n\n      var hmac = new jsSha('SHA-256', 'TEXT');\n      hmac.setHMACKey(password, 'TEXT');\n      hmac.update(user);\n      hmac.update(Date.now().toString(36).substring(0, 4));\n      var token = \"\".concat(hmac.getHMAC('HEX'), \"%\").concat(user);\n      var api = axios.create({\n        // {/** Instantiate the network request. */}\n        baseURL: 'http://45.77.58.134:8080',\n        headers: {\n          'Authorization': 'Bearer ' + token\n        }\n      });\n\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var res, acc, transactions;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return api.get('/clients');\n\n              case 2:\n                res = _context.sent;\n\n                _this2.setState({\n                  clients: res.data\n                }); // {/*  Retrieve accounts for specified client UUID. */}\n\n\n                _context.next = 6;\n                return api.get(\"/accounts/\" + _this2.state.clients[0][\"_id\"]);\n\n              case 6:\n                acc = _context.sent;\n\n                _this2.setState({\n                  accounts: acc.data\n                }); // {/*  Retrieves all( .*) transactions for given accounts based on the clients ID. */}\n\n\n                _context.next = 10;\n                return api.get(\"/transactions/\".concat(acc.data[0]._id, \"/.*\"));\n\n              case 10:\n                transactions = _context.sent;\n\n                _this2.setState({\n                  transactions: transactions.data\n                }); //console.log(acc);\n                //console.log(res);\n\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }))();\n    }\n  }, {\n    key: \"Payment\",\n    value: function Payment() {\n      // /* Props is used to pass the username and password down the component tree from the parent (App.js) to child (MyAccounts.js) */\n      var user = this.props.username; //'blackfish787';\n\n      var password = this.props.password; //'lestat';\n\n      var hmac = new jsSha('SHA-256', 'TEXT');\n      hmac.setHMACKey(password, 'TEXT');\n      hmac.update(user);\n      hmac.update(Date.now().toString(36).substring(0, 4));\n      var token = \"\".concat(hmac.getHMAC('HEX'), \"%\").concat(user);\n      var api = axios.create({\n        // {/** Instantiate the network request. */}\n        baseURL: 'http://45.77.58.134:8080',\n        headers: {\n          'Authorization': 'Bearer ' + token\n        }\n      }); // {/** Post a new transaction, requires a body object as below. */}\n\n      api.post('/transactions', {\n        \"time\": '',\n        \"type\": 'debit',\n        \"src\": this.state.src,\n        \"dest\": this.state.dest,\n        \"amount\": -this.state.amount,\n        \"ref\": this.state.ref\n      }).then(function (response) {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n      console.log(this.state.src);\n    } // {/* Render method returns a second navbar, textboxes and dropdown on the screen for user to perform payments. */}\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"navbar2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: \"/payments\",\n        className: \"navButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \" Once-off Payments \"), React.createElement(NavLink, {\n        to: \"/scheduled\",\n        className: \"navButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \" Scheduled Payments \"), React.createElement(\"div\", {\n        className: \"dropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"dropbtn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \" Pay Beneficiary \", React.createElement(\"i\", {\n        className: \"fa fa-caret-down\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"dropdown-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: \"/beneficiary\",\n        className: \"navButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \" Add New Beneficiary \"), React.createElement(NavLink, {\n        to: \"/existing\",\n        className: \"navButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \" Existing Beneficiaries \"))), React.createElement(NavLink, {\n        to: \"/history\",\n        className: \"navButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \" Payment History \")), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"Once-off Payments\",\n        className: \"w3-container city\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Once-off Payments\"), React.createElement(\"div\", {\n        id: \"payments\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \" 1. Who would you like to pay? \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \" Select Destination Account:\", React.createElement(\"select\", {\n        className: \"imput\",\n        onChange: this.onChange,\n        name: \"dest\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Select:\"), React.createElement(\"option\", {\n        value: \"Savings\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Savings\"), React.createElement(\"option\", {\n        value: \"Cheque\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Cheque\"), React.createElement(\"option\", {\n        value: \"Debit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Debit\"), React.createElement(\"option\", {\n        value: \"Investment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Special Investment\"), React.createElement(\"option\", {\n        value: \"Credit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Credit\"))), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \" 2. Payment Details \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Enter amount to pay: \", React.createElement(\"input\", {\n        className: \"imput\",\n        onChange: this.onChange,\n        name: \"amount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \" Select Source Account:\", React.createElement(\"select\", {\n        className: \"imput\",\n        name: \"src\",\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, this.state.accounts.map(function (x) {\n        return React.createElement(\"option\", {\n          value: x._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, \" \", \"\".concat(x.description));\n      }))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \" Reference: \", React.createElement(\"input\", {\n        className: \"imput\",\n        onChange: this.onChange,\n        name: \"ref\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Please note\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"Your payment may take up to 24 hours to reflect on Bank of the Sun accounts, and up to 2 business days with other banks. \")), React.createElement(\"button\", {\n        className: \"button\",\n        onClick: this.Payment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Pay\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Payments;\n}(Component);\n\nexport default Payments;","map":{"version":3,"sources":["/Users/darrendeabreu/Desktop/my-app/src/components/payments.js"],"names":["React","Component","NavLink","axios","jsSha","Payments","props","state","clients","transactions","accounts","time","type","dest","amount","src","ref","onChange","bind","Payment","user","username","password","hmac","setHMACKey","update","Date","now","toString","substring","token","getHMAC","api","create","baseURL","headers","get","res","setState","data","acc","_id","post","then","response","console","log","catch","error","e","target","name","value","map","x","description"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport axios from 'axios';\nimport jsSha from 'jssha';\n\nclass Payments extends Component {\n// {/* The constructor for a React Component is called before it is mounted. */}\nconstructor(props) {\n  // {/* Pass props to the constructor by super. */}\n  super(props);\n  // {/* Initalise the local state by assigning objects to this.state. */}\n  this.state ={\n    // {/* Passing an array as a value for the objects below. */}\n    clients: [],\n    transactions: [],\n    accounts: [],\n    // {/* Passing an empty string as a value for the objects below. */}\n    time: '',\n    type: '',\n    dest: '',\n    amount: '',\n    src: '',\n    ref: '',\n  }\n\n  {/**\n  * Bind the value of the control to the currrent value of the state.\n  * There must be a bound so that if there is a value and something that causes the control to re-render,\n  it gets the correct value out of the state.\n  */}\n  // this.componentDidMount=this.componentDidMount.bind(this)\n  this.onChange = this.onChange.bind(this)\n  this.Payment = this.Payment.bind(this)\n}\n\n// {/* Invoked immediately after a component is mounted. */}\ncomponentDidMount() {\n         // /* Props is used to pass the username and password down the component tree from the parent (App.js) to child (MyAccounts.js) */\n         const user = this.props.username; //'blackfish787';\n         const password = this.props.password; //'lestat';\n         const hmac = new jsSha('SHA-256', 'TEXT');\n         hmac.setHMACKey(password, 'TEXT');\n         hmac.update(user);\n         hmac.update(Date.now().toString(36).substring(0, 4));\n         const token = `${hmac.getHMAC('HEX')}%${user}`;\n         const api = axios.create({\n           // {/** Instantiate the network request. */}\n           baseURL: 'http://45.77.58.134:8080',\n           headers: { 'Authorization': 'Bearer ' + token }\n         });\n\n         (async () => {\n           // {/* Retrieve clients for authenticated user. */}}\n           const res = await api.get('/clients');\n           {/* Calls setState() immediately in componentDidMount().\n             * setSate() updates the clients state with client data.\n             * Passing clients object to setState().\n           */}\n           this.setState({clients: res.data});\n           // {/*  Retrieve accounts for specified client UUID. */}\n           const acc = await api.get(`/accounts/` + this.state.clients[0][\"_id\"])\n           {/* Calls setState() immediately in componentDidMount().\n             * setSate() updates the accounts state with account data.\n             * Passing accounts object to setState().\n           */}\n           this.setState({accounts: acc.data})\n            // {/*  Retrieves all( .*) transactions for given accounts based on the clients ID. */}\n           const transactions = await api.get(`/transactions/${acc.data[0]._id}/.*`)\n           {/* Calls setState() immediately in componentDidMount().\n             * setSate() updates the transactions state with transactions data.\n             * Passing transactions object to setState().\n           */}\n           this.setState({transactions: transactions.data});\n           //console.log(acc);\n           //console.log(res);\n\n         })()\n  }\n\n  Payment(){\n      // /* Props is used to pass the username and password down the component tree from the parent (App.js) to child (MyAccounts.js) */\n      const user = this.props.username; //'blackfish787';\n      const password = this.props.password; //'lestat';\n      const hmac = new jsSha('SHA-256', 'TEXT');\n      hmac.setHMACKey(password, 'TEXT');\n      hmac.update(user);\n      hmac.update(Date.now().toString(36).substring(0, 4));\n      const token = `${hmac.getHMAC('HEX')}%${user}`;\n      const api = axios.create({\n        // {/** Instantiate the network request. */}\n        baseURL: 'http://45.77.58.134:8080',\n        headers: { 'Authorization': 'Bearer ' + token }\n      });\n\n        // {/** Post a new transaction, requires a body object as below. */}\n        api.post('/transactions', {\n          \"time\": '',\n          \"type\": 'debit',\n          \"src\": this.state.src,\n          \"dest\": this.state.dest,\n          \"amount\": -(this.state.amount),\n          \"ref\": this.state.ref,\n\n        }).then(function (response){\n          console.log(response);\n        }).catch(function (error){\n          console.log(error);\n        });\n\n\n        }\n\n        onChange (e) {\n          this.setState({[e.target.name]: e.target.value});\n          console.log(this.state.src)\n          }\n\n        // {/* Render method returns a second navbar, textboxes and dropdown on the screen for user to perform payments. */}\n        render () {\n          return (\n            <div>\n              <div className=\"navbar2\">\n                <NavLink to=\"/payments\" className=\"navButton\"> Once-off Payments </NavLink>\n                <NavLink to=\"/scheduled\" className=\"navButton\"> Scheduled Payments </NavLink>\n\n                <div className = \"dropdown\">\n                  <button className = \"dropbtn\"> Pay Beneficiary <i className = \"fa fa-caret-down\"></i></button>\n                <div className = \"dropdown-content\">\n                <NavLink to=\"/beneficiary\" className=\"navButton\"> Add New Beneficiary </NavLink>\n                <NavLink to=\"/existing\" className=\"navButton\"> Existing Beneficiaries </NavLink>\n              </div>\n              </div>\n                <NavLink to=\"/history\" className=\"navButton\"> Payment History </NavLink>\n              </div>\n            <div className=\"content\">\n              <div id=\"Once-off Payments\" className=\"w3-container city\">\n                <h1>Once-off Payments</h1>\n                  <div id=\"payments\">\n                    <h2> 1. Who would you like to pay? </h2>\n                    <p> Select Destination Account:\n                      <select className=\"imput\"  onChange={this.onChange} name=\"dest\">\n                        <option value=\"\">Select:</option>\n                        <option value=\"Savings\">Savings</option>\n                        <option value=\"Cheque\">Cheque</option>\n                        <option value=\"Debit\">Debit</option>\n                        <option value=\"Investment\">Special Investment</option>\n                        <option value=\"Credit\">Credit</option>\n                      </select></p>\n                    <h2> 2. Payment Details </h2>\n                     <p>Enter amount to pay: <input className=\"imput\"  onChange={this.onChange} name=\"amount\"/></p>\n                     <p> Select Source Account:\n                       <select className=\"imput\" name=\"src\" onChange={this.onChange}>\n                       {this.state.accounts.map(x =>\n                       <option value={x._id}> {`${x.description}`}</option>\n                       )}\n                       </select></p>\n                     <p> Reference: <input className=\"imput\"  onChange={this.onChange} name=\"ref\"/></p>\n              </div>\n                <div className=\"text\" >\n                  <p><b>Please note</b></p>\n                  <p>Your payment may take up to 24 hours to reflect on Bank of the Sun accounts, and up to 2 business days with other banks. </p>\n                </div>\n                <button className='button' onClick={this.Payment}>Pay</button><br/><br/>\n                  </div>\n                </div>\n            </div>\n          )\n        }\n      }\n\n      export default Payments\n"]},"metadata":{},"sourceType":"module"}