{"ast":null,"code":"import _regeneratorRuntime from \"/Users/darrendeabreu/Desktop/repo/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/darrendeabreu/Desktop/repo/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/darrendeabreu/Desktop/repo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/darrendeabreu/Desktop/repo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/darrendeabreu/Desktop/repo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/darrendeabreu/Desktop/repo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/darrendeabreu/Desktop/repo/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/darrendeabreu/Desktop/repo/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/darrendeabreu/Desktop/repo/src/components/utilities.js\";\nimport React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Footer from './footer';\nimport Airtime from './Airtime';\nimport SMS from './sms';\nimport Data from './data';\nimport jsSHA from 'jssha';\nimport axios from 'axios';\n\nvar Utilities =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Utilities, _Component);\n\n  // {/* The constructor for a React Component is called before it is mounted. */}\n  function Utilities(props) {\n    var _this;\n\n    _classCallCheck(this, Utilities);\n\n    // {/* Pass props to the constructor by super. */}\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Utilities).call(this, props)); // {/* Initalise the local state by assigning objects to this.state. */}\n\n    _this.state = {\n      // {/* Passing an empty string as a value for objects below. */}\n      src: '',\n      dest: '',\n      amount: 0,\n      ref: '',\n      // {/* Passing an array as a value for objects below. */}\n      clients: [],\n      accounts: [],\n      transactions: [],\n      // {/* Passing an empty string as a value for account. */}\n      account: '',\n      type: '' // {/**\n      // * Bind the value of the control to the currrent value of the state.\n      // * There must be a bound so that if there is a value and something that causes the control to re-render,\n      // it gets the correct value out of the state.\n      // */}\n\n    };\n    _this.componentDidMount = _this.componentDidMount.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.makePayment = _this.makePayment.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // {/* Invoked immediately after a component is mounted. */}\n\n\n  _createClass(Utilities, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      {\n        /* Props is used to pass the username and password down the component tree from the parent (App.js) to child (MyAccounts.js) */\n      }\n      var user = 'blackfish787'; //{this.props.user}\n\n      var password = 'lestat'; //{this.props.password}\n\n      var hmac = new jsSHA('SHA-256', 'TEXT');\n      hmac.setHMACKey(password, 'TEXT');\n      hmac.update(user);\n      hmac.update(Date.now().toString(36).substring(0, 4));\n      var token = \"\".concat(hmac.getHMAC('HEX'), \"%\").concat(user);\n      var api = axios.create({\n        // {/** Instantiate the network request. */}\n        baseURL: 'http://45.77.58.134:8080',\n        headers: {\n          'Authorization': 'Bearer ' + token\n        }\n      });\n\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var res, acc;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return api.get('/clients');\n\n              case 2:\n                res = _context.sent;\n\n                _this2.setState({\n                  clients: res.data\n                }); // {/*  Retrieve accounts for specified client UUID. */}\n\n\n                _context.next = 6;\n                return api.get(\"/accounts/\" + _this2.state.clients[0][\"_id\"]);\n\n              case 6:\n                acc = _context.sent;\n\n                _this2.setState({\n                  accounts: acc.data\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }))();\n    }\n  }, {\n    key: \"makePayment\",\n    value: function makePayment() {\n      var _this3 = this;\n\n      var user = 'blackfish787'; //{this.props.user}\n\n      var password = 'lestat'; //{this.props.password}\n\n      var hmac = new jsSHA('SHA-256', 'TEXT');\n      hmac.setHMACKey(password, 'TEXT');\n      hmac.update(user);\n      hmac.update(Date.now().toString(36).substring(0, 4));\n      var token = \"\".concat(hmac.getHMAC('HEX'), \"%\").concat(user);\n      var api = axios.create({\n        // {/** Instantiate the network request. */}\n        baseURL: 'http://45.77.58.134:8080',\n        headers: {\n          'Authorization': 'Bearer ' + token\n        }\n      });\n\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var res, acc, tras;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return api.get('/clients');\n\n              case 3:\n                res = _context2.sent;\n\n                // {/* Calls setState() immediately in componentDidMount().\n                //   * setSate() updates the clients state with client data.\n                //   * Passing clients object to setState().\n                // */}\n                _this3.setState({\n                  clients: res.data\n                }); // {/*  Retrieve accounts for specified client UUID. */}\n\n\n                _context2.next = 7;\n                return api.get(\"/accounts/\" + _this3.state.clients[0][\"_id\"]);\n\n              case 7:\n                acc = _context2.sent;\n\n                // /* Calls setState() immediately in componentDidMount().\n                //   * setSate() updates the accounts state accounts data.\n                //   * Passing accounts object to setState().\n                // */}\n                _this3.setState({\n                  accounts: acc.data\n                }); // {/*  Retrieves all( .*) transactions for given accounts based on the clients ID. */}\n\n\n                _context2.next = 11;\n                return api.get('/transactions');\n\n              case 11:\n                tras = _context2.sent;\n\n                // {/* Calls setState() immediately in componentDidMount().\n                //   * setSate() updates the transactions state with the transactions data.\n                //   * Passing transactions object to setState().\n                // */}\n                _this3.setState({\n                  transactions: tras.data\n                }); // {/** Post a new transaction, requires a body object as below. */}\n\n\n                api.post('/transactions', {\n                  time: _this3.state.time,\n                  type: 'credit',\n                  dest: _this3.state.src,\n                  src: _this3.state.dest,\n                  amount: -_this3.state.amount,\n                  ref: _this3.state.ref\n                }).then(function (response) {\n                  console.log(response);\n                }).catch(function (error) {\n                  console.log(error);\n                });\n                _context2.next = 20;\n                break;\n\n              case 16:\n                _context2.prev = 16;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.log('error');\n                alert('error');\n\n              case 20:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 16]]);\n      }))();\n    } // {/* Render method returns a second navbar and dropdowns for the account type and utility choice on the screen. */}\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"navbar2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: \"/utilities\",\n        className: \"navButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \" Airtime and Bundles \"), React.createElement(NavLink, {\n        to: \"/buyElectricity\",\n        className: \"navButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \" Electricity \")), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"payments\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"Airtime and Bundles\",\n        className: \"w3-container city\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Airtime and Bundles\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \" 1. Accounts \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \" Select the source account:\", React.createElement(\"select\", {\n        className: \"imput\",\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, this.state.accounts.map(function (x) {\n        return React.createElement(\"option\", {\n          key: x._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, \"\".concat(x.description));\n      }))), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \" 2. Details \"), React.createElement(NavLink, {\n        to: \"/airtime\",\n        className: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \" Airtime \"), React.createElement(NavLink, {\n        to: \"/data\",\n        className: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \" Data \"), React.createElement(NavLink, {\n        to: \"/sms\",\n        className: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \" SMS \"), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Utilities;\n}(Component);\n\nexport default Utilities;","map":{"version":3,"sources":["/Users/darrendeabreu/Desktop/repo/src/components/utilities.js"],"names":["React","Component","NavLink","Footer","Airtime","SMS","Data","jsSHA","axios","Utilities","props","state","src","dest","amount","ref","clients","accounts","transactions","account","type","componentDidMount","bind","makePayment","user","password","hmac","setHMACKey","update","Date","now","toString","substring","token","getHMAC","api","create","baseURL","headers","get","res","setState","data","acc","tras","post","time","then","response","console","log","catch","error","alert","onChange","map","x","_id","description"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Footer from './footer';\nimport Airtime from './Airtime';\nimport SMS from './sms';\nimport Data from './data';\nimport jsSHA from 'jssha';\nimport axios from 'axios';\n\n\nclass Utilities  extends Component {\n  // {/* The constructor for a React Component is called before it is mounted. */}\n  constructor(props) {\n    // {/* Pass props to the constructor by super. */}\n    super(props);\n    // {/* Initalise the local state by assigning objects to this.state. */}\n    this.state={\n      // {/* Passing an empty string as a value for objects below. */}\n      src:'',\n      dest: '',\n      amount: 0,\n      ref: '',\n      // {/* Passing an array as a value for objects below. */}\n      clients: [],\n      accounts: [],\n      transactions: [],\n      // {/* Passing an empty string as a value for account. */}\n      account: '',\n      type:'',\n    }\n    // {/**\n    // * Bind the value of the control to the currrent value of the state.\n    // * There must be a bound so that if there is a value and something that causes the control to re-render,\n    // it gets the correct value out of the state.\n    // */}\n    this.componentDidMount=this.componentDidMount.bind(this)\n    this.makePayment = this.makePayment.bind(this)\n\n  }\n\n  // {/* Invoked immediately after a component is mounted. */}\n   componentDidMount() {\n         {/* Props is used to pass the username and password down the component tree from the parent (App.js) to child (MyAccounts.js) */}\n\n         const user ='blackfish787'//{this.props.user}\n         const password ='lestat'//{this.props.password}\n         const hmac = new jsSHA('SHA-256', 'TEXT');\n         hmac.setHMACKey(password, 'TEXT');\n         hmac.update(user);\n         hmac.update(Date.now().toString(36).substring(0, 4));\n         const token = `${hmac.getHMAC('HEX')}%${user}`;\n         const api = axios.create({\n           // {/** Instantiate the network request. */}\n           baseURL: 'http://45.77.58.134:8080',\n           headers: { 'Authorization': 'Bearer ' + token }\n         });\n\n         (async () => {\n           // {/* Retrieve clients for authenticated user. */}}\n           const res = await api.get('/clients');\n           this.setState({clients: res.data});\n           // {/*  Retrieve accounts for specified client UUID. */}\n           const acc = await api.get(`/accounts/` + this.state.clients[0][\"_id\"])\n           this.setState({accounts: acc.data})\n         })()\n       }\n\n         makePayment(){\n           const user ='blackfish787'//{this.props.user}\n           const password ='lestat'//{this.props.password}\n           const hmac = new jsSHA('SHA-256', 'TEXT');\n           hmac.setHMACKey(password, 'TEXT');\n           hmac.update(user);\n           hmac.update(Date.now().toString(36).substring(0, 4));\n           const token = `${hmac.getHMAC('HEX')}%${user}`;\n           const api = axios.create({\n             // {/** Instantiate the network request. */}\n             baseURL: 'http://45.77.58.134:8080',\n             headers: { 'Authorization': 'Bearer ' + token }});\n\n\n             (async () => {\n             try {\n               // {/* Retrieve clients for authenticated user. */}}\n               const res = await api.get('/clients');\n               // {/* Calls setState() immediately in componentDidMount().\n               //   * setSate() updates the clients state with client data.\n               //   * Passing clients object to setState().\n               // */}\n               this.setState({clients: res.data});\n               // {/*  Retrieve accounts for specified client UUID. */}\n               const acc = await api.get(`/accounts/` + this.state.clients[0][\"_id\"])\n               // /* Calls setState() immediately in componentDidMount().\n               //   * setSate() updates the accounts state accounts data.\n               //   * Passing accounts object to setState().\n               // */}\n               this.setState({accounts: acc.data})\n               // {/*  Retrieves all( .*) transactions for given accounts based on the clients ID. */}\n               const tras = await api.get('/transactions');\n               // {/* Calls setState() immediately in componentDidMount().\n               //   * setSate() updates the transactions state with the transactions data.\n               //   * Passing transactions object to setState().\n               // */}\n               this.setState({transactions: tras.data})\n\n               // {/** Post a new transaction, requires a body object as below. */}\n             api.post('/transactions', {\n               time: this.state.time,\n               type: 'credit',\n               dest: this.state.src,\n               src: this.state.dest,\n               amount: -(this.state.amount),\n               ref: this.state.ref,\n             }).then(function (response){\n               console.log(response);\n             }).catch(function (error){\n               console.log(error);\n             });\n           }\n\n\n         catch {\n           console.log('error')\n           alert('error')\n         }\n       })()\n\n       }\n\n// {/* Render method returns a second navbar and dropdowns for the account type and utility choice on the screen. */}\n  render () {\n    return (\n      <div>\n\n      <div className=\"navbar2\">\n        <NavLink to=\"/utilities\" className=\"navButton\"> Airtime and Bundles </NavLink>\n        <NavLink to=\"/buyElectricity\" className=\"navButton\"> Electricity </NavLink>\n        </div>\n          <div className=\"content\">\n              <div id=\"payments\">\n                <div id=\"Airtime and Bundles\" className=\"w3-container city\" >\n                  <h1>Airtime and Bundles</h1>\n                    <h2> 1. Accounts </h2>\n                    <p> Select the source account:\n                      <select className ='imput' onChange={this.onChange}>\n                         {this.state.accounts.map(x =>\n                         <option key={x._id}>{`${x.description}`}</option>\n                       )}\n                       </select></p>\n                     <h2> 2. Details </h2>\n                    <NavLink to=\"/airtime\" className=\"button\"> Airtime </NavLink>\n                    <NavLink to=\"/data\" className=\"button\"> Data </NavLink>\n                    <NavLink to=\"/sms\" className=\"button\"> SMS </NavLink> <br/><br/>\n          </div>\n          </div>\n          </div>\n          </div>\n    )\n  }\n  }\nexport default Utilities\n"]},"metadata":{},"sourceType":"module"}