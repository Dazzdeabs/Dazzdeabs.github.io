{"version":3,"sources":["components/logo.jpg","components/mountain.png","components/info.png","components/contact.jpg","components/login.js","components/welcome.js","components/home.js","components/forgotpassword.js","components/support.js","components/error.js","components/navigation.js","components/payments.js","components/transfers.js","components/footer.js","components/sms.js","components/data.js","components/Airtime.js","components/utilities.js","components/MyAccounts.js","components/newacc.js","components/accInfo.js","components/Statements.js","components/history.js","components/beneficiary.js","components/scheduled.js","components/existing.js","components/downloadStatements.js","components/printStatements.js","components/buyElectricity.js","components/legal.js","components/faq.js","components/contact.js","components/register1.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","items","text","username","password","subbmitted","showMe","handleChange","bind","assertThisInitialized","handleSubmit","forgot","doLogin","e","prompt","_this2","react_default","a","createElement","style","display","src","logo","className","logStyle","id","onChange","setState","target","value","trim","type","onClick","textAlign","NavLink","to","login","_this3","user","hmac","jsSHA","setHMACKey","update","Date","now","toString","substring","token","concat","getHMAC","api","axios","create","baseURL","headers","Authorization","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","get","sent","store","t0","console","log","setToken","refresh","setInterval","alert","abrupt","stop","usrename","preventDefault","length","newItem","Component","Welcome","popUp","document","getElementById","classList","toggle","background","contact","icon","Home","welcome","Support","Error","Payments","clients","transactions","accounts","time","dest","amount","ref","componentDidMount","Payment","jsSha","acc","data","_id","post","then","response","catch","error","defineProperty","name","map","x","description","Transfers","h1Style","Footer","href","class","SMS","selectFrom","trans","event","utilities","Data","Airtime","Utilities","account","makePayment","_callee2","tras","_context2","key","MyAccounts","Intl","NumberFormat","currency","format","balance","Newacc","client","onChangeAcc","AccInfo","cheque","savings","credit","inv","handleCheque","handleSave","handleCredit","handleSpec","Statements","match","params","accid","DateTimeFormat","year","month","day","hour","minute","second","window","print","History","payments","push","Beneficiary","Scheduled","payAmount","payName","accNum","onChangeType","unixDate","moment","unix","transfers","Existing","amount1","amount2","amount3","amount4","ref1","ref2","ref3","ref4","ThomasPay","HaroldPay","DarrylPay","PhoebePay","downloadStatements","printStatements","Electricity","action","Legal","Faq","Contact","Register1","App","loginstateimport","BrowserRouter","Switch","Route","path","component","exact","render","components_payments","buyElectricity","components_MyAccounts","components_newacc","beneficiary","scheduled","existing","components_history","components_Airtime","sms","register1","footer","Boolean","location","hostname","ReactDOM","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sZC6KzBC,cArKb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAElBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,MAAQ,CAAEC,MAAO,GAAIC,KAAM,IAChCT,EAAKO,MAAQ,CAEXG,SAAU,IACVC,SAAU,IAEVC,YAAY,EAEZC,QAAO,GAQTb,EAAKc,aAAed,EAAKc,aAAaC,KAAlBd,OAAAe,EAAA,EAAAf,QAAAe,EAAA,EAAAf,CAAAD,KACpBA,EAAKiB,aAAejB,EAAKiB,aAAaF,KAAlBd,OAAAe,EAAA,EAAAf,QAAAe,EAAA,EAAAf,CAAAD,KACpBA,EAAKkB,OAASlB,EAAKkB,OAAOH,KAAZd,OAAAe,EAAA,EAAAf,QAAAe,EAAA,EAAAf,CAAAD,KACdA,EAAKmB,QAAUnB,EAAKmB,QAAQJ,KAAbd,OAAAe,EAAA,EAAAf,QAAAe,EAAA,EAAAf,CAAAD,KAvBGA,sEA0BboB,GACHC,OAAO,gFAID,IAAAC,EAAAnB,KACP,OACJoB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,MAAS,CAACC,QAAU,iBACvBJ,EAAAC,EAAAC,cAAA,OAAKG,IAAKC,IAAMC,UAAU,UAG1B3B,KAAKI,MAAMM,OACPU,EAAAC,EAAAC,cAAA,OAAKK,UAAU,kBAAkBJ,MAAOvB,KAAK4B,UACvCR,EAAAC,EAAAC,cAAA,SACEO,GAAG,WACHC,SAAU,SAAAb,GAAC,OAAGE,EAAKY,SAAS,CAACxB,SAAUU,EAAEe,OAAOC,MAAMC,UACtDD,MAAOjC,KAAKI,MAAMG,WAEpBa,EAAAC,EAAAC,cAAA,SACEO,GAAG,WACHC,SAAU,SAAAb,GAAC,OAAGE,EAAKY,SAAS,CAACvB,SAAUS,EAAEe,OAAOC,MAAMC,UACtDD,MAAOjC,KAAKI,MAAMI,SAAU2B,KAAK,aAEnCf,EAAAC,EAAAC,cAAA,UAAQK,UAAU,SAASS,QAASpC,KAAKgB,SAAzC,WACAI,EAAAC,EAAAC,cAAA,OAAKK,UAAW,kBAAkBJ,MAAO,CAACc,UAAW,UACnDjB,EAAAC,EAAAC,cAAA,UAAQK,UAAU,SAASS,QAASpC,KAAKe,QAAzC,mBACAK,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,aAAaZ,UAAU,UAAnC,gBAGP,KAIA3B,KAAKI,MAAMM,OAIb,KAHCU,EAAAC,EAAAC,cAAA,OAAKK,UAAW,kBAAkBJ,MAAO,CAACc,UAAW,UACnDjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,IAAIZ,UAAU,SAASS,SAAUpC,KAAKwC,OAAlD,cAKJpB,EAAAC,EAAAC,cAAA,OAAKK,UAAW,UACfP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,IAAIZ,UAAU,aAA1B,UACAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,WAAWZ,UAAU,aAAjC,oBAEG3B,KAAKI,MAAMM,OAOV,KANFU,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,YAAYZ,UAAU,aAAlC,cACAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,aAAaZ,UAAU,aAAnC,eACAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,aAAaZ,UAAU,aAAnC,eACAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,cAAcZ,UAAU,aAApC,iDAWCV,GAAE,IAAAwB,EAAAzC,KAEF0C,EAAO1C,KAAKI,MAAMG,SAClBC,EAAWR,KAAKI,MAAMI,SACtBmC,EAAO,IAAIC,IAAM,UAAW,QAClCD,EAAKE,WAAWrC,EAAU,QAC1BmC,EAAKG,OAAOJ,GACZC,EAAKG,OAAOC,KAAKC,MAAMC,SAAS,IAAIC,UAAU,EAAG,IACjD,IAAMC,EAAK,GAAAC,OAAMT,EAAKU,QAAQ,OAAnB,KAAAD,OAA6BV,GAClCY,EAAMC,IAAMC,OAAO,CAEvBC,QAAS,2BACTC,QAAS,CAAEC,cAAiB,UAAYR,KAE1CrD,OAAA8D,EAAA,EAAA9D,CAAA+D,EAAAxC,EAAAyC,KAAC,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAxC,EAAA4C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAKed,EAAIe,IAAI,YALvB,OAKGL,EALHE,EAAAI,KAOG7B,EAAK7C,MAAM2E,MAAM,CAAChE,SAAUkC,EAAKrC,MAAMG,SAAUC,SAAUiC,EAAKrC,MAAMI,WAPzE0D,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAUGF,GAAM,EAVT,eAYCS,QAAQC,IAAIV,GAEF,GAAPA,GACDvB,EAAKkC,WACLlC,EAAKmC,QAAUC,YAAY,kBAAKpC,EAAKkC,YAAW,KAC5ClC,EAAKV,SAAS,CAACrB,QAAO,IAC1BoE,MAAM,WAAapC,IAInBoC,MAAM,oDAtBTZ,EAAAa,OAAA,SAyBG3D,EAAAC,EAAAC,cAAA,iBAzBH,yBAAA4C,EAAAc,SAAAjB,EAAA/D,KAAA,WAADF,sCAgCA,IAAM6C,EAAO,IAAIC,IAAM,UAAW,QAClCD,EAAKE,WAAW7C,KAAKI,MAAMI,SAAU,QACrCmC,EAAKG,OAAO9C,KAAKI,MAAMG,UACvBoC,EAAKG,OAAOC,KAAKC,MAAMC,SAAS,IAAIC,UAAU,EAAG,IACjD,IAAMC,EAAK,GAAAC,OAAMT,EAAKU,QAAQ,OAAnB,KAAAD,OAA6BpD,KAAKI,MAAM6E,UAChDjF,KAAKI,MAAM+C,QAASA,IACrBnD,KAAK+B,SAAS,CAACoB,MAAOA,IACtBsB,QAAQC,IAAI,sDAKHzD,GACXjB,KAAK+B,SAAS,CAAEzB,KAAMW,EAAEe,OAAOC,6CAGpBhB,GAEX,GADAA,EAAEiE,iBACGlF,KAAKI,MAAME,KAAK6E,OAArB,CAGA,IAAMC,EAAU,CACd9E,KAAMN,KAAKI,MAAME,MAGnBN,KAAK+B,SAAS,SAAA3B,GAAK,MAAK,CACtBC,MAAOD,EAAMC,MAAM+C,OAAOgC,GAC1B9E,KAAM,cAlKQ+E,aC0CLC,qBAtCb,SAAAA,EAAY1F,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsF,IAChBzF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwF,GAAAnF,KAAAH,KAAMJ,KACD2F,MAAQ1F,EAAK0F,MAAM3E,KAAXd,OAAAe,EAAA,EAAAf,QAAAe,EAAA,EAAAf,CAAAD,KAFGA,qEAKZoB,GACQuE,SAASC,eAAe,WAC1BC,UAAUC,OAAO,yCAK3B,OACEvE,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAMG,IAAKmE,IAAYjE,UAAU,QACjCP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,UACbP,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,4CAAwCF,EAAAC,EAAAC,cAAA,WACxCF,EAAAC,EAAAC,cAAA,4CACOF,EAAAC,EAAAC,cAAA,WACTF,EAAAC,EAAAC,cAAA,cACAF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,QAAQS,QAASpC,KAAKuF,OAAOnE,EAAAC,EAAAC,cAAA,OAAKO,GAAG,UAAUF,UAAU,OAAOF,IAAKoE,MAClFzE,EAAAC,EAAAC,cAAA,QAAMK,UAAU,YAAYE,GAAG,WAA/B,4BAAkET,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WAAvE,iCAA0GF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WAA/G,uBAEJF,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,YAAWnB,EAAAC,EAAAC,cAAA,OAAKK,UAAU,QAAQE,GAAG,OAAOJ,IAAKqE,kBA3BjDT,cCQPU,GCfSV,6LDOpB,OACEjE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC0E,EAAD,cALaX,cEqEJY,mLArEX,OACE7E,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACfP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,WAAWZ,UAAU,aAAjC,yBACAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,SAASZ,UAAU,aAA/B,WACAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,OAAOZ,UAAU,aAA7B,SACAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,WAAWZ,UAAU,aAAjC,iBAEMP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,uCACbP,EAAAC,EAAAC,cAAA,iCADF,yDAEwDF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WAF7D,gJAG+IF,EAAAC,EAAAC,cAAA,WAH/I,8IAI6IF,EAAAC,EAAAC,cAAA,WAJ7I,6EAK4EF,EAAAC,EAAAC,cAAA,WAL5E,yIAMwIF,EAAAC,EAAAC,cAAA,WANxI,kJAOiJF,EAAAC,EAAAC,cAAA,WAPjJ,8IAQ6IF,EAAAC,EAAAC,cAAA,WAR7I,yIASwIF,EAAAC,EAAAC,cAAA,WATxI,0IAUyIF,EAAAC,EAAAC,cAAA,WAVzI,iIAWgIF,EAAAC,EAAAC,cAAA,WAXhI,yBAYwBF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WAZ7B,kJAaiJF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WAbtJ,uBAcsBF,EAAAC,EAAAC,cAAA,WAdtB,4IAe2IF,EAAAC,EAAAC,cAAA,WAf3I,8IAgB6IF,EAAAC,EAAAC,cAAA,WAhB7I,8IAiB6IF,EAAAC,EAAAC,cAAA,WAjB7I,sIAkBqIF,EAAAC,EAAAC,cAAA,WAlBrI,mIAmBkIF,EAAAC,EAAAC,cAAA,WAnBlI,oBAoBmBF,EAAAC,EAAAC,cAAA,WApBnB,4IAqB2IF,EAAAC,EAAAC,cAAA,WArB3I,0EAsByEF,EAAAC,EAAAC,cAAA,WAtBzE,4IAuB2IF,EAAAC,EAAAC,cAAA,WAvB3I,4IAwB2IF,EAAAC,EAAAC,cAAA,WAxB3I,yIAyBwIF,EAAAC,EAAAC,cAAA,WAzBxI,2IA0B0IF,EAAAC,EAAAC,cAAA,WA1B1I,iEA2BgEF,EAAAC,EAAAC,cAAA,WA3BhE,4IA4B2IF,EAAAC,EAAAC,cAAA,WA5B3I,8IA6B6IF,EAAAC,EAAAC,cAAA,WA7B7I,+IA8B8IF,EAAAC,EAAAC,cAAA,WA9B9I,gJA+B+IF,EAAAC,EAAAC,cAAA,WA/B/I,0GAgCyGF,EAAAC,EAAAC,cAAA,WAhCzG,eAiCcF,EAAAC,EAAAC,cAAA,WAjCd,wIAkCuIF,EAAAC,EAAAC,cAAA,WAlCvI,4IAmC2IF,EAAAC,EAAAC,cAAA,WAnC3I,2IAoC0IF,EAAAC,EAAAC,cAAA,WApC1I,uGAqCsGF,EAAAC,EAAAC,cAAA,WArCtG,yIAsCwIF,EAAAC,EAAAC,cAAA,WAtCxI,0IAuCyIF,EAAAC,EAAAC,cAAA,WAvCzI,mJAwCkJF,EAAAC,EAAAC,cAAA,WAxClJ,iJAyCgJF,EAAAC,EAAAC,cAAA,WAzChJ,kFA0CiFF,EAAAC,EAAAC,cAAA,WA1CjF,mJA2CkJF,EAAAC,EAAAC,cAAA,WA3ClJ,sIA4CqIF,EAAAC,EAAAC,cAAA,WA5CrI,SA6CQF,EAAAC,EAAAC,cAAA,WA7CR,mJA8CkJF,EAAAC,EAAAC,cAAA,WA9ClJ,qJA+CoJF,EAAAC,EAAAC,cAAA,WA/CpJ,6GAgD4GF,EAAAC,EAAAC,cAAA,WAhD5G,gBAiDeF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WAjDpB,iGAkDgGF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WAlDrG,qJAmDoJF,EAAAC,EAAAC,cAAA,WAnDpJ,eAoDcF,EAAAC,EAAAC,cAAA,qBAhEN+D,aCUPa,mLARX,OACE9E,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,yDAJc+D,gBCCKA,mBCsKJc,cAnKrB,SAAAA,EAAYvG,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmG,IAEjBtG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqG,GAAAhG,KAAAH,KAAMJ,KAEDQ,MAAO,CAEVgG,QAAS,GACTC,aAAc,GACdC,SAAU,GAEVC,KAAM,GACNpE,KAAM,GACNqE,KAAM,GACNC,OAAQ,GACRhF,IAAK,GACLiF,IAAK,IAQP7G,EAAK8G,kBAAkB9G,EAAK8G,kBAAkB/F,KAAvBd,OAAAe,EAAA,EAAAf,QAAAe,EAAA,EAAAf,CAAAD,KACvBA,EAAKiC,SAAWjC,EAAKiC,SAASlB,KAAdd,OAAAe,EAAA,EAAAf,QAAAe,EAAA,EAAAf,CAAAD,KAChBA,EAAK+G,QAAU/G,EAAK+G,QAAQhG,KAAbd,OAAAe,EAAA,EAAAf,QAAAe,EAAA,EAAAf,CAAAD,KAzBEA,mFA6BC,IAAAsB,EAAAnB,KAEL0C,EAAO1C,KAAKJ,MAAMW,SAClBC,EAAWR,KAAKJ,MAAMY,SACtBmC,EAAO,IAAIkE,IAAM,UAAW,QAClClE,EAAKE,WAAWrC,EAAU,QAC1BmC,EAAKG,OAAOJ,GACZC,EAAKG,OAAOC,KAAKC,MAAMC,SAAS,IAAIC,UAAU,EAAG,IACjD,IAAMC,EAAK,GAAAC,OAAMT,EAAKU,QAAQ,OAAnB,KAAAD,OAA6BV,GAClCY,EAAMC,IAAMC,OAAO,CAEvBC,QAAS,2BACTC,QAAS,CAAEC,cAAiB,UAAYR,KAG1CrD,OAAA8D,EAAA,EAAA9D,CAAA+D,EAAAxC,EAAAyC,KAAC,SAAAC,IAAA,IAAAC,EAAA8C,EAAAT,EAAA,OAAAxC,EAAAxC,EAAA4C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEmBd,EAAIe,IAAI,YAF3B,cAEOL,EAFPE,EAAAI,KAOCnD,EAAKY,SAAS,CAACqE,QAASpC,EAAI+C,OAP7B7C,EAAAE,KAAA,EASmBd,EAAIe,IAAI,aAAelD,EAAKf,MAAMgG,QAAQ,GAAnB,KAT1C,cASOU,EATP5C,EAAAI,KAcCnD,EAAKY,SAAS,CAACuE,SAAUQ,EAAIC,OAd9B7C,EAAAE,KAAA,GAgB4Bd,EAAIe,IAAJ,iBAAAjB,OAAyB0D,EAAIC,KAAK,GAAGC,IAArC,QAhB5B,QAgBOX,EAhBPnC,EAAAI,KAqBCnD,EAAKY,SAAS,CAACsE,aAAcA,EAAaU,OArB3C,yBAAA7C,EAAAc,SAAAjB,EAAA/D,QAADF,qCA8BH,IAAM4C,EAAO1C,KAAKJ,MAAMW,SAClBC,EAAWR,KAAKJ,MAAMY,SACtBmC,EAAO,IAAIkE,IAAM,UAAW,QAClClE,EAAKE,WAAWrC,EAAU,QAC1BmC,EAAKG,OAAOJ,GACZC,EAAKG,OAAOC,KAAKC,MAAMC,SAAS,IAAIC,UAAU,EAAG,IACjD,IAAMC,EAAK,GAAAC,OAAMT,EAAKU,QAAQ,OAAnB,KAAAD,OAA6BV,GAC5Ba,IAAMC,OAAO,CAEvBC,QAAS,2BACTC,QAAS,CAAEC,cAAiB,UAAYR,KAIpC8D,KAAK,gBAAiB,CACxBV,KAAQ,GACRpE,KAAQ,QACRV,IAAOzB,KAAKI,MAAMqB,IAClB+E,KAAQxG,KAAKI,MAAMoG,KACnBC,QAAYzG,KAAKI,MAAMqG,OACvBC,IAAO1G,KAAKI,MAAMsG,MAEjBQ,KAAK,SAAUC,GAChB1C,QAAQC,IAAIyC,KACXC,MAAM,SAAUC,GACjB5C,QAAQC,IAAI2C,sCAMJpG,GACRjB,KAAK+B,SAALjC,OAAAwH,EAAA,EAAAxH,CAAA,GAAgBmB,EAAEe,OAAOuF,KAAOtG,EAAEe,OAAOC,QACzCwC,QAAQC,IAAI1E,KAAKI,MAAMqB,sCAKvB,OACEL,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACbP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,YAAYZ,UAAU,aAAlC,uBACAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,aAAaZ,UAAU,aAAnC,wBAEAP,EAAAC,EAAAC,cAAA,OAAKK,UAAY,YACfP,EAAAC,EAAAC,cAAA,UAAQK,UAAY,WAApB,oBAA+CP,EAAAC,EAAAC,cAAA,KAAGK,UAAY,sBAChEP,EAAAC,EAAAC,cAAA,OAAKK,UAAY,oBACjBP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,eAAeZ,UAAU,aAArC,yBACAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,YAAYZ,UAAU,aAAlC,8BAGAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,WAAWZ,UAAU,aAAjC,sBAEJP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACbP,EAAAC,EAAAC,cAAA,OAAKO,GAAG,oBAAoBF,UAAU,qBACpCP,EAAAC,EAAAC,cAAA,+BACEF,EAAAC,EAAAC,cAAA,OAAKO,GAAG,YACNT,EAAAC,EAAAC,cAAA,6CACAF,EAAAC,EAAAC,cAAA,wCACEF,EAAAC,EAAAC,cAAA,UAAQK,UAAU,QAASG,SAAU9B,KAAK8B,SAAUyF,KAAK,QACvDnG,EAAAC,EAAAC,cAAA,UAAQW,MAAM,IAAd,WACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,WAAd,WACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,UAAd,UACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,SAAd,SACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,cAAd,sBACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,UAAd,YAEJb,EAAAC,EAAAC,cAAA,kCACCF,EAAAC,EAAAC,cAAA,iCAAwBF,EAAAC,EAAAC,cAAA,SAAOK,UAAU,QAASG,SAAU9B,KAAK8B,SAAUyF,KAAK,YAChFnG,EAAAC,EAAAC,cAAA,mCACEF,EAAAC,EAAAC,cAAA,UAAQK,UAAU,QAAQ4F,KAAK,MAAMzF,SAAU9B,KAAK8B,UACnD9B,KAAKI,MAAMkG,SAASkB,IAAI,SAAAC,GAAC,OAC1BrG,EAAAC,EAAAC,cAAA,UAAQW,MAAOwF,EAAET,KAAjB,OAAA5D,OAA2BqE,EAAEC,kBAG/BtG,EAAAC,EAAAC,cAAA,wBAAeF,EAAAC,EAAAC,cAAA,SAAOK,UAAU,QAASG,SAAU9B,KAAK8B,SAAUyF,KAAK,UAE5EnG,EAAAC,EAAAC,cAAA,OAAKK,UAAU,QACbP,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,yBACHF,EAAAC,EAAAC,cAAA,uIAEFF,EAAAC,EAAAC,cAAA,UAAQK,UAAU,SAASS,QAASpC,KAAK4G,SAAzC,OAA8DxF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,qBA7J5D+D,aCwJPsC,cArJd,SAAAA,EAAY/H,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2H,IAEjB9H,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6H,GAAAxH,KAAAH,KAAMJ,KAEDQ,MAAM,CAETqG,OAAQ,GACRC,IAAK,GACLF,KAAM,GACN/E,IAAK,GACLU,KAAK,GACLoE,KAAM,GAEND,SAAS,GACTF,QAAS,GACTC,aAAc,IAQhBxG,EAAKiC,SAASjC,EAAKiC,SAASlB,KAAdd,OAAAe,EAAA,EAAAf,QAAAe,EAAA,EAAAf,CAAAD,KACdA,EAAK+G,QAAQ/G,EAAK+G,QAAQhG,KAAbd,OAAAe,EAAA,EAAAf,QAAAe,EAAA,EAAAf,CAAAD,KAxBIA,mFA6BC,IAAAsB,EAAAnB,KAEL0C,EAAO1C,KAAKJ,MAAMW,SAClBC,EAAWR,KAAKJ,MAAMY,SACtBmC,EAAO,IAAIkE,IAAM,UAAW,QAClClE,EAAKE,WAAWrC,EAAU,QAC1BmC,EAAKG,OAAOJ,GACZC,EAAKG,OAAOC,KAAKC,MAAMC,SAAS,IAAIC,UAAU,EAAG,IACjD,IAAMC,EAAK,GAAAC,OAAMT,EAAKU,QAAQ,OAAnB,KAAAD,OAA6BV,GAClCY,EAAMC,IAAMC,OAAO,CAEvBC,QAAS,2BACTC,QAAS,CAAEC,cAAiB,UAAYR,KAG1CrD,OAAA8D,EAAA,EAAA9D,CAAA+D,EAAAxC,EAAAyC,KAAC,SAAAC,IAAA,IAAAC,EAAA8C,EAAAT,EAAA,OAAAxC,EAAAxC,EAAA4C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEmBd,EAAIe,IAAI,YAF3B,cAEOL,EAFPE,EAAAI,KAOCnD,EAAKY,SAAS,CAACqE,QAASpC,EAAI+C,OAP7B7C,EAAAE,KAAA,EASmBd,EAAIe,IAAI,aAAelD,EAAKf,MAAMgG,QAAQ,GAAnB,KAT1C,cASOU,EATP5C,EAAAI,KAcCnD,EAAKY,SAAS,CAACuE,SAAUQ,EAAIC,OAd9B7C,EAAAE,KAAA,GAgB4Bd,EAAIe,IAAJ,iBAAAjB,OAAyB0D,EAAIC,KAAK,GAAGC,IAArC,QAhB5B,QAgBOX,EAhBPnC,EAAAI,KAqBCnD,EAAKY,SAAS,CAACsE,aAAcA,EAAaU,OArB3C,yBAAA7C,EAAAc,SAAAjB,EAAA/D,QAADF,qCA4BH,IAAM4C,EAAO1C,KAAKJ,MAAMW,SAClBC,EAAWR,KAAKJ,MAAMY,SACtBmC,EAAO,IAAIkE,IAAM,UAAW,QAClClE,EAAKE,WAAWrC,EAAU,QAC1BmC,EAAKG,OAAOJ,GACZC,EAAKG,OAAOC,KAAKC,MAAMC,SAAS,IAAIC,UAAU,EAAG,IACjD,IAAMC,EAAK,GAAAC,OAAMT,EAAKU,QAAQ,OAAnB,KAAAD,OAA6BV,GAClCY,EAAMC,IAAMC,OAAO,CAEvBC,QAAS,2BACTC,QAAS,CAAEC,cAAiB,UAAYR,KAIzCG,EAAI2D,KAAK,gBAAiB,CACtBV,KAAM,GACNpE,KAAM,QACNV,IAAKzB,KAAKI,MAAMqB,IAChB+E,KAAMxG,KAAKI,MAAMoG,KACjBC,QAAUzG,KAAKI,MAAMqG,OACrBC,IAAK1G,KAAKI,MAAMsG,MAIlBpD,EAAI2D,KAAK,gBAAiB,CACvBV,KAAM,GACNpE,KAAM,SACNV,IAAKzB,KAAKI,MAAMoG,KAChBA,KAAMxG,KAAKI,MAAMqB,IACjBgF,OAAQzG,KAAKI,MAAMqG,OACnBC,IAAK1G,KAAKI,MAAMsG,uCAKpBzF,GACRjB,KAAK+B,SAALjC,OAAAwH,EAAA,EAAAxH,CAAA,GAAgBmB,EAAEe,OAAOuF,KAAOtG,EAAEe,OAAOC,QACzCwC,QAAQC,IAAI1E,KAAKI,MAAMqB,sCAKrB,OACEL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACbP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,aAAaZ,UAAU,aAAnC,8BAEAP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACfP,EAAAC,EAAAC,cAAA,OAAKO,GAAG,YACNT,EAAAC,EAAAC,cAAA,MAAIC,MAAOvB,KAAK4H,SAAhB,2BACExG,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,6BACEF,EAAAC,EAAAC,cAAA,UAAQK,UAAU,QAAQ4F,KAAK,MAAOzF,SAAU9B,KAAK8B,UACpD9B,KAAKI,MAAMkG,SAASkB,IAAI,SAAAC,GAAC,OACxBrG,EAAAC,EAAAC,cAAA,UAAQW,MAAOwF,EAAET,KAAjB,GAAA5D,OAA0BqE,EAAEC,iBAG9BtG,EAAAC,EAAAC,cAAA,2BACEF,EAAAC,EAAAC,cAAA,UAAQK,UAAU,QAAQ4F,KAAK,OAAQzF,SAAU9B,KAAK8B,UACrD9B,KAAKI,MAAMkG,SAASkB,IAAI,SAAAC,GAAC,OACxBrG,EAAAC,EAAAC,cAAA,UAAQW,MAAOwF,EAAET,KAAjB,GAAA5D,OAA0BqE,EAAEC,iBAGlCtG,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,uCAA8BF,EAAAC,EAAAC,cAAA,SAAOK,UAAU,QAAQG,SAAU9B,KAAK8B,SAAUyF,KAAK,YACrFnG,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,2BAAkBF,EAAAC,EAAAC,cAAA,SAAOK,UAAU,QAAQG,SAAU9B,KAAK8B,SAAUyF,KAAK,SACzEnG,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,yBACHF,EAAAC,EAAAC,cAAA,8EACAF,EAAAC,EAAAC,cAAA,UAAQK,UAAU,SAASS,QAASpC,KAAK4G,SAAzC,YAAmExF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,qBA/I5D+D,aCcTwC,mLAbX,OACEzG,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,KAAGwG,KAAM,gBAAT,uBAAH,MAAqD1G,EAAAC,EAAAC,cAAA,KAAGwG,KAAM,qBAAT,SAArD,OAA+F1G,EAAAC,EAAAC,cAAA,KAAGwG,KAAM,mBAAT,OAA/F,OAAqI1G,EAAAC,EAAAC,cAAA,KAAGwG,KAAM,uBAAT,eACrI1G,EAAAC,EAAAC,cAAA,2EACAF,EAAAC,EAAAC,cAAA,KAAGwG,KAAK,4BAA2B1G,EAAAC,EAAAC,cAAA,KAAGO,GAAG,QAAQkG,MAAM,6BACvD3G,EAAAC,EAAAC,cAAA,KAAGwG,KAAK,uBAAsB1G,EAAAC,EAAAC,cAAA,KAAGO,GAAG,QAASkG,MAAM,0BACnD3G,EAAAC,EAAAC,cAAA,KAAGwG,KAAK,oCAAmC1G,EAAAC,EAAAC,cAAA,KAAGO,GAAG,QAASkG,MAAM,qCAVrD1C,aC0GN2C,cAnGb,SAAAA,EAAYpI,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgI,IAEjBnI,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkI,GAAA7H,KAAAH,KAAMJ,KAEDQ,MAAM,CAETqG,OAAQ,GAQV5G,EAAKoI,WAAapI,EAAKoI,WAAWrH,KAAhBd,OAAAe,EAAA,EAAAf,QAAAe,EAAA,EAAAf,CAAAD,KAClBA,EAAK8G,kBAAoB9G,EAAK8G,kBAAkB/F,KAAvBd,OAAAe,EAAA,EAAAf,QAAAe,EAAA,EAAAf,CAAAD,KAfRA,mFAmBC,IAAAsB,EAAAnB,KAEP0C,EAAO1C,KAAKJ,MAAMW,SAClBC,EAAWR,KAAKJ,MAAMY,SACtBmC,EAAO,IAAIC,IAAM,UAAW,QAClCD,EAAKE,WAAWrC,EAAU,QAC1BmC,EAAKG,OAAOJ,GACZC,EAAKG,OAAOC,KAAKC,MAAMC,SAAS,IAAIC,UAAU,EAAG,IACjD,IAAMC,EAAK,GAAAC,OAAMT,EAAKU,QAAQ,OAAnB,KAAAD,OAA6BV,GAClCY,EAAMC,IAAMC,OAAO,CAEvBC,QAAS,2BACTC,QAAS,CAAEC,cAAiB,UAAYR,KAG1CrD,OAAA8D,EAAA,EAAA9D,CAAA+D,EAAAxC,EAAAyC,KAAC,SAAAC,IAAA,IAAAC,EAAA8C,EAAAoB,EAAA,OAAArE,EAAAxC,EAAA4C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEmBd,EAAIe,IAAI,YAF3B,cAEOL,EAFPE,EAAAI,KAAAJ,EAAAE,KAAA,EAImBd,EAAIe,IAAJ,aAAAjB,OAAqBY,EAAI+C,KAAK,GAAGC,MAJpD,cAIOF,EAJP5C,EAAAI,KAAAJ,EAAAE,KAAA,EAMmBd,EAAIe,IAAJ,iBAAAjB,OAAyB0D,EAAIC,KAAK,GAAGC,IAArC,QANnB,cAMKkB,EANLhE,EAAAI,KAAAJ,EAAAE,KAAA,GASOd,EAAI2D,KAAK,gBAAiB,CAC9B9E,KAAQ,MACRV,IAAOqF,EAAIC,KAAK,GAAGC,IACnBR,KAAQM,EAAIC,KAAK,GAAGC,IACpBP,QAAYtF,EAAKf,MAAMqG,OACvBC,IAAO,QAdV,eAAAxC,EAAAE,KAAA,GAkBed,EAAIe,IAAJ,iBAAAjB,OAAyB0D,EAAIC,KAAK,GAAGC,IAArC,QAlBf,QAkBCkB,EAlBDhE,EAAAI,KAmBCG,QAAQC,IAAIwD,GAnBb,yBAAAhE,EAAAc,SAAAjB,EAAA/D,QAADF,sCAuBUqI,GACVnI,KAAK+B,SAAU,CACb0E,OAAQ0B,EAAMnG,OAAOC,yCAKvBhB,GACPjB,KAAK+B,SAALjC,OAAAwH,EAAA,EAAAxH,CAAA,GAAgBmB,EAAEe,OAAOuF,KAAOtG,EAAEe,OAAOC,QACzCwC,QAAQC,IAAI1E,KAAKI,MAAMqB,sCAKrB,OACEL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC8G,EAAD,MACUhH,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACfP,EAAAC,EAAAC,cAAA,OAAKO,GAAG,YACJT,EAAAC,EAAAC,cAAA,OAAKK,UAAU,YACbP,EAAAC,EAAAC,cAAA,sCACEF,EAAAC,EAAAC,cAAA,UAAQK,UAAU,QAAQM,MAAOjC,KAAKI,MAAMqG,OAAQ3E,SAAU9B,KAAKiI,YACjE7G,EAAAC,EAAAC,cAAA,UAAQW,MAAM,IAAd,WACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,MAAd,qBACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,MAAd,qBACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,MAAd,sBACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,MAAd,sBACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,MAAd,sBACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,OAAd,uBACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,OAAd,2BAKNb,EAAAC,EAAAC,cAAA,UAAQK,UAAU,SAASS,QAASpC,KAAK2G,mBAAzC,OAAwEvF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,qBA7F9E+D,aCoGJgD,cAlGb,SAAAA,EAAYzI,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqI,IAEjBxI,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuI,GAAAlI,KAAAH,KAAMJ,KAEDQ,MAAM,CAETqG,OAAQ,GAQV5G,EAAKoI,WAAapI,EAAKoI,WAAWrH,KAAhBd,OAAAe,EAAA,EAAAf,QAAAe,EAAA,EAAAf,CAAAD,KAClBA,EAAK8G,kBAAoB9G,EAAK8G,kBAAkB/F,KAAvBd,OAAAe,EAAA,EAAAf,QAAAe,EAAA,EAAAf,CAAAD,KAfRA,mFAmBC,IAAAsB,EAAAnB,KAEP0C,EAAO1C,KAAKJ,MAAMW,SAClBC,EAAWR,KAAKJ,MAAMY,SACtBmC,EAAO,IAAIC,IAAM,UAAW,QAClCD,EAAKE,WAAWrC,EAAU,QAC1BmC,EAAKG,OAAOJ,GACZC,EAAKG,OAAOC,KAAKC,MAAMC,SAAS,IAAIC,UAAU,EAAG,IACjD,IAAMC,EAAK,GAAAC,OAAMT,EAAKU,QAAQ,OAAnB,KAAAD,OAA6BV,GAClCY,EAAMC,IAAMC,OAAO,CAEvBC,QAAS,2BACTC,QAAS,CAAEC,cAAiB,UAAYR,KAG1CrD,OAAA8D,EAAA,EAAA9D,CAAA+D,EAAAxC,EAAAyC,KAAC,SAAAC,IAAA,IAAAC,EAAA8C,EAAAoB,EAAA,OAAArE,EAAAxC,EAAA4C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEmBd,EAAIe,IAAI,YAF3B,cAEOL,EAFPE,EAAAI,KAAAJ,EAAAE,KAAA,EAImBd,EAAIe,IAAJ,aAAAjB,OAAqBY,EAAI+C,KAAK,GAAGC,MAJpD,cAIOF,EAJP5C,EAAAI,KAAAJ,EAAAE,KAAA,EAMmBd,EAAIe,IAAJ,iBAAAjB,OAAyB0D,EAAIC,KAAK,GAAGC,IAArC,QANnB,cAMKkB,EANLhE,EAAAI,KAAAJ,EAAAE,KAAA,GASOd,EAAI2D,KAAK,gBAAiB,CAC9B9E,KAAQ,OACRV,IAAOqF,EAAIC,KAAK,GAAGC,IACnBR,KAAQM,EAAIC,KAAK,GAAGC,IACpBP,QAAYtF,EAAKf,MAAMqG,OACvBC,IAAO,SAdV,eAAAxC,EAAAE,KAAA,GAkBed,EAAIe,IAAJ,iBAAAjB,OAAyB0D,EAAIC,KAAK,GAAGC,IAArC,QAlBf,QAkBCkB,EAlBDhE,EAAAI,KAmBCG,QAAQC,IAAIwD,GAnBb,yBAAAhE,EAAAc,SAAAjB,EAAA/D,QAADF,sCAuBUqI,GACVnI,KAAK+B,SAAU,CACb0E,OAAQ0B,EAAMnG,OAAOC,yCAIhBhB,GACRjB,KAAK+B,SAALjC,OAAAwH,EAAA,EAAAxH,CAAA,GAAgBmB,EAAEe,OAAOuF,KAAOtG,EAAEe,OAAOC,QACzCwC,QAAQC,IAAI1E,KAAKI,MAAMqB,sCAK3B,OACEL,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8G,EAAD,MACQhH,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACbP,EAAAC,EAAAC,cAAA,OAAKO,GAAG,YACNT,EAAAC,EAAAC,cAAA,OAAKK,UAAU,aACZP,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,UAAQK,UAAU,QAAQM,MAAOjC,KAAKI,MAAMqG,OAAQ3E,SAAU9B,KAAKiI,YAChE7G,EAAAC,EAAAC,cAAA,UAAQW,MAAM,IAAd,WACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,MAAd,qBACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,MAAd,qBACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,MAAd,sBACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,MAAd,sBACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,MAAd,sBACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,OAAd,uBACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,OAAd,2BAKNb,EAAAC,EAAAC,cAAA,UAAQK,UAAU,SAASS,QAASpC,KAAK2G,mBAAzC,OAAwEvF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,qBA5F7E+D,aCsGDiD,cApGjB,SAAAA,EAAY1I,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsI,IAEjBzI,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwI,GAAAnI,KAAAH,KAAMJ,KAEDQ,MAAM,CAETqG,OAAQ,GAQV5G,EAAKoI,WAAapI,EAAKoI,WAAWrH,KAAhBd,OAAAe,EAAA,EAAAf,QAAAe,EAAA,EAAAf,CAAAD,KAClBA,EAAK8G,kBAAoB9G,EAAK8G,kBAAkB/F,KAAvBd,OAAAe,EAAA,EAAAf,QAAAe,EAAA,EAAAf,CAAAD,KAfRA,mFAmBC,IAAAsB,EAAAnB,KAEP0C,EAAO1C,KAAKJ,MAAMW,SAClBC,EAAWR,KAAKJ,MAAMY,SACtBmC,EAAO,IAAIC,IAAM,UAAW,QAClCD,EAAKE,WAAWrC,EAAU,QAC1BmC,EAAKG,OAAOJ,GACZC,EAAKG,OAAOC,KAAKC,MAAMC,SAAS,IAAIC,UAAU,EAAG,IACjD,IAAMC,EAAK,GAAAC,OAAMT,EAAKU,QAAQ,OAAnB,KAAAD,OAA6BV,GAClCY,EAAMC,IAAMC,OAAO,CAEvBC,QAAS,2BACTC,QAAS,CAAEC,cAAiB,UAAYR,KAG1CrD,OAAA8D,EAAA,EAAA9D,CAAA+D,EAAAxC,EAAAyC,KAAC,SAAAC,IAAA,IAAAC,EAAA8C,EAAAoB,EAAA,OAAArE,EAAAxC,EAAA4C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEmBd,EAAIe,IAAI,YAF3B,cAEOL,EAFPE,EAAAI,KAAAJ,EAAAE,KAAA,EAImBd,EAAIe,IAAJ,aAAAjB,OAAqBY,EAAI+C,KAAK,GAAGC,MAJpD,cAIOF,EAJP5C,EAAAI,KAAAJ,EAAAE,KAAA,EAMmBd,EAAIe,IAAJ,iBAAAjB,OAAyB0D,EAAIC,KAAK,GAAGC,IAArC,QANnB,cAMKkB,EANLhE,EAAAI,KAAAJ,EAAAE,KAAA,GASOd,EAAI2D,KAAK,gBAAiB,CAC9B9E,KAAQ,UACRV,IAAOqF,EAAIC,KAAK,GAAGC,IACnBR,KAAQM,EAAIC,KAAK,GAAGC,IACpBP,QAAYtF,EAAKf,MAAMqG,OACvBC,IAAO,YAdV,eAAAxC,EAAAE,KAAA,GAkBed,EAAIe,IAAJ,iBAAAjB,OAAyB0D,EAAIC,KAAK,GAAGC,IAArC,QAlBf,QAkBCkB,EAlBDhE,EAAAI,KAmBCG,QAAQC,IAAIwD,GAnBb,yBAAAhE,EAAAc,SAAAjB,EAAA/D,QAADF,sCAwBUqI,GACVnI,KAAK+B,SAAU,CAEb0E,OAAQ0B,EAAMnG,OAAOC,yCAKjBhB,GACPjB,KAAK+B,SAALjC,OAAAwH,EAAA,EAAAxH,CAAA,GAAgBmB,EAAEe,OAAOuF,KAAOtG,EAAEe,OAAOC,QACzCwC,QAAQC,IAAI1E,KAAKI,MAAMqB,sCAKvB,OACEL,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8G,EAAD,MACAhH,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACbP,EAAAC,EAAAC,cAAA,OAAKO,GAAG,YACNT,EAAAC,EAAAC,cAAA,OAAKyG,MAAM,WACP3G,EAAAC,EAAAC,cAAA,sCAEAF,EAAAC,EAAAC,cAAA,UAAQK,UAAU,QAAQM,MAAOjC,KAAKI,MAAMqG,OAAQ3E,SAAU9B,KAAKiI,YACjE7G,EAAAC,EAAAC,cAAA,UAAQW,MAAM,IAAd,WACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,KAAd,SACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,MAAd,UACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,MAAd,UACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,MAAd,UACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,OAAd,cAKJb,EAAAC,EAAAC,cAAA,UAAQK,UAAU,SAASS,QAASpC,KAAK2G,mBAAzC,OAAwEvF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,qBA9FxE+D,aCuJRkD,cApJb,SAAAA,EAAY3I,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuI,IAEjB1I,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyI,GAAApI,KAAAH,KAAMJ,KAEDQ,MAAM,CAETqB,IAAI,GACJ+E,KAAM,GACNC,OAAQ,EACRC,IAAK,GAELN,QAAS,GACTE,SAAU,GACVD,aAAc,GAEdmC,QAAS,GACTrG,KAAK,IAOPtC,EAAK8G,kBAAkB9G,EAAK8G,kBAAkB/F,KAAvBd,OAAAe,EAAA,EAAAf,QAAAe,EAAA,EAAAf,CAAAD,KACvBA,EAAK4I,YAAc5I,EAAK4I,YAAY7H,KAAjBd,OAAAe,EAAA,EAAAf,QAAAe,EAAA,EAAAf,CAAAD,KAxBFA,mFA6BE,IAAAsB,EAAAnB,KAKR2C,EAAO,IAAIC,IAAM,UAAW,QAClCD,EAAKE,WAFW,SAEU,QAC1BF,EAAKG,OAJO,gBAKZH,EAAKG,OAAOC,KAAKC,MAAMC,SAAS,IAAIC,UAAU,EAAG,IACjD,IAAMC,EAAK,GAAAC,OAAMT,EAAKU,QAAQ,OAAnB,KAAAD,OANC,gBAONE,EAAMC,IAAMC,OAAO,CAEvBC,QAAS,2BACTC,QAAS,CAAEC,cAAiB,UAAYR,KAG1CrD,OAAA8D,EAAA,EAAA9D,CAAA+D,EAAAxC,EAAAyC,KAAC,SAAAC,IAAA,IAAAC,EAAA8C,EAAA,OAAAjD,EAAAxC,EAAA4C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEmBd,EAAIe,IAAI,YAF3B,cAEOL,EAFPE,EAAAI,KAGCnD,EAAKY,SAAS,CAACqE,QAASpC,EAAI+C,OAH7B7C,EAAAE,KAAA,EAKmBd,EAAIe,IAAI,aAAelD,EAAKf,MAAMgG,QAAQ,GAAnB,KAL1C,OAKOU,EALP5C,EAAAI,KAMCnD,EAAKY,SAAS,CAACuE,SAAUQ,EAAIC,OAN9B,wBAAA7C,EAAAc,SAAAjB,EAAA/D,QAADF,yCAUa,IAAA2C,EAAAzC,KAGL2C,EAAO,IAAIC,IAAM,UAAW,QAClCD,EAAKE,WAFW,SAEU,QAC1BF,EAAKG,OAJO,gBAKZH,EAAKG,OAAOC,KAAKC,MAAMC,SAAS,IAAIC,UAAU,EAAG,IACjD,IAAMC,EAAK,GAAAC,OAAMT,EAAKU,QAAQ,OAAnB,KAAAD,OANC,gBAONE,EAAMC,IAAMC,OAAO,CAEvBC,QAAS,2BACTC,QAAS,CAAEC,cAAiB,UAAYR,KAGxCrD,OAAA8D,EAAA,EAAA9D,CAAA+D,EAAAxC,EAAAyC,KAAC,SAAA4E,IAAA,IAAA1E,EAAA8C,EAAA6B,EAAA,OAAA9E,EAAAxC,EAAA4C,KAAA,SAAA2E,GAAA,cAAAA,EAAAzE,KAAAyE,EAAAxE,MAAA,cAAAwE,EAAAzE,KAAA,EAAAyE,EAAAxE,KAAA,EAGmBd,EAAIe,IAAI,YAH3B,cAGOL,EAHP4E,EAAAtE,KAQC7B,EAAKV,SAAS,CAACqE,QAASpC,EAAI+C,OAR7B6B,EAAAxE,KAAA,EAUmBd,EAAIe,IAAI,aAAe5B,EAAKrC,MAAMgG,QAAQ,GAAnB,KAV1C,cAUOU,EAVP8B,EAAAtE,KAeC7B,EAAKV,SAAS,CAACuE,SAAUQ,EAAIC,OAf9B6B,EAAAxE,KAAA,GAiBoBd,EAAIe,IAAI,iBAjB5B,QAiBOsE,EAjBPC,EAAAtE,KAsBC7B,EAAKV,SAAS,CAACsE,aAAcsC,EAAK5B,OAGpCzD,EAAI2D,KAAK,gBAAiB,CACxBV,KAAM9D,EAAKrC,MAAMmG,KACjBpE,KAAM,SACNqE,KAAM/D,EAAKrC,MAAMqB,IACjBA,IAAKgB,EAAKrC,MAAMoG,KAChBC,QAAUhE,EAAKrC,MAAMqG,OACrBC,IAAKjE,EAAKrC,MAAMsG,MACfQ,KAAK,SAAUC,GAChB1C,QAAQC,IAAIyC,KACXC,MAAM,SAAUC,GACjB5C,QAAQC,IAAI2C,KAnCbuB,EAAAxE,KAAA,iBAAAwE,EAAAzE,KAAA,GAAAyE,EAAApE,GAAAoE,EAAA,SAyCHnE,QAAQC,IAAI,SACZI,MAAM,SA1CH,yBAAA8D,EAAA5D,SAAA0D,EAAA1I,KAAA,YAADF,oCAkDT,OACEsB,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACbP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,aAAaZ,UAAU,aAAnC,yBACAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,kBAAkBZ,UAAU,aAAxC,kBAEEP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACXP,EAAAC,EAAAC,cAAA,OAAKO,GAAG,YACNT,EAAAC,EAAAC,cAAA,OAAKO,GAAG,sBAAsBF,UAAU,qBACtCP,EAAAC,EAAAC,cAAA,iCACEF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,uCACEF,EAAAC,EAAAC,cAAA,UAAQK,UAAW,QAAQG,SAAU9B,KAAK8B,UACtC9B,KAAKI,MAAMkG,SAASkB,IAAI,SAAAC,GAAC,OAC1BrG,EAAAC,EAAAC,cAAA,UAAQuH,IAAKpB,EAAET,KAAf,GAAA5D,OAAwBqE,EAAEC,kBAG9BtG,EAAAC,EAAAC,cAAA,0BACDF,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,WAAWZ,UAAU,UAAjC,aACAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,QAAQZ,UAAU,UAA9B,UACAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,OAAOZ,UAAU,UAA7B,SAZJ,IAY0DP,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,sBA9ItD+D,aCiFRyD,cApFf,SAAAA,EAAYlJ,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8I,IAEjBjJ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgJ,GAAA3I,KAAAH,QAGKI,MAAQ,CAAEkG,SAAU,IALRzG,mFASC,IAAAsB,EAAAnB,KAGZ0C,EAAO1C,KAAKJ,MAAMW,SAClBC,EAAWR,KAAKJ,MAAMY,SACtBmC,EAAO,IAAIC,IAAM,UAAW,QAClCD,EAAKE,WAAWrC,EAAU,QAC1BmC,EAAKG,OAAOJ,GACZC,EAAKG,OAAOC,KAAKC,MAAMC,SAAS,IAAIC,UAAU,EAAG,IACjD,IAAMC,EAAK,GAAAC,OAAMT,EAAKU,QAAQ,OAAnB,KAAAD,OAA6BV,GAClCY,EAAMC,IAAMC,OAAO,CAEvBC,QAAS,2BACTC,QAAS,CAAEC,cAAiB,UAAYR,KAG1CrD,OAAA8D,EAAA,EAAA9D,CAAA+D,EAAAxC,EAAAyC,KAAC,SAAAC,IAAA,IAAAC,EAAAsC,EAAA,OAAAzC,EAAAxC,EAAA4C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEmBd,EAAIe,IAAI,YAF3B,cAEOL,EAFPE,EAAAI,KAAAJ,EAAAE,KAAA,EAIwBd,EAAIe,IAAJ,aAAAjB,OAAqBY,EAAI+C,KAAK,GAAGC,MAJzD,OAIOV,EAJPpC,EAAAI,KASGnD,EAAKY,SAAS,CAACuE,SAAUA,EAASS,OATrC,wBAAA7C,EAAAc,SAAAjB,EAAA/D,QAADF,oCAgBE,OACEsB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKK,UAAY,WACjBP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,cAAcZ,UAAY,aAAtC,iBACAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,UAAUZ,UAAY,aAAlC,kBACAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,WAAWZ,UAAY,aAAnC,0BAEAP,EAAAC,EAAAC,cAAA,OAAKK,UAAY,WACjBP,EAAAC,EAAAC,cAAA,OAAKO,GAAG,YACRT,EAAAC,EAAAC,cAAA,sBAEAF,EAAAC,EAAAC,cAAA,UAAKtB,KAAKI,MAAMkG,SAASoB,aACzBtG,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,YAEAF,EAAAC,EAAAC,cAAA,aAECtB,KAAKI,MAAMkG,SAASkB,IAAI,SAAAC,GAAC,OACxBrG,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAAA,UAAKmG,EAAEC,aACPtG,EAAAC,EAAAC,cAAA,UAAKmG,EAAEtF,MAEPf,EAAAC,EAAAC,cAAA,UAAKyH,KAAKC,aAAa,QAAS,CAC9BzH,MAAO,WACP0H,SAAU,QACTC,OAAOzB,EAAE0B,UAEZ/H,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAI,eAAiBkF,EAAET,IAAKrF,UAAY,UAAjD,sBAIEP,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,qBA9EI+D,aC+GV+D,cA7Gf,SAAAA,EAAYxJ,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoJ,IAEjBvJ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsJ,GAAAjJ,KAAAH,KAAMJ,KAEDQ,MAAM,CAET+I,QAAS,EAETnC,IAAK,GACLqC,OAAQ,GACR3B,YAAa,GACbvF,KAAM,IAQRtC,EAAKyJ,YAAYzJ,EAAKyJ,YAAY1I,KAAjBd,OAAAe,EAAA,EAAAf,QAAAe,EAAA,EAAAf,CAAAD,KACjBA,EAAK8G,kBAAkB9G,EAAK8G,kBAAkB/F,KAAvBd,OAAAe,EAAA,EAAAf,QAAAe,EAAA,EAAAf,CAAAD,KApBNA,mFAwBC,IAAAsB,EAAAnB,KAEJ0C,EAAO1C,KAAKJ,MAAMW,SAClBC,EAAWR,KAAKJ,MAAMY,SACtBmC,EAAO,IAAIC,IAAM,UAAW,QAClCD,EAAKE,WAAWrC,EAAU,QAC1BmC,EAAKG,OAAOJ,GACZC,EAAKG,OAAOC,KAAKC,MAAMC,SAAS,IAAIC,UAAU,EAAG,IACjD,IAAMC,EAAK,GAAAC,OAAMT,EAAKU,QAAQ,OAAnB,KAAAD,OAA6BV,GAClCY,EAAMC,IAAMC,OAAO,CAEvBC,QAAS,2BACTC,QAAS,CAAEC,cAAiB,UAAYR,KAG1CrD,OAAA8D,EAAA,EAAA9D,CAAA+D,EAAAxC,EAAAyC,KAAC,SAAAC,IAAA,IAAAC,EAAA8C,EAAA,OAAAjD,EAAAxC,EAAA4C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEmBd,EAAIe,IAAI,YAF3B,cAEOL,EAFPE,EAAAI,KAAAJ,EAAAE,KAAA,EAImBd,EAAIe,IAAJ,aAAAjB,OAAqBY,EAAI+C,KAAK,GAAGC,MAJpD,cAIOF,EAJP5C,EAAAI,KAAAJ,EAAAE,KAAA,EAOsBd,EAAI2D,KAAK,SAAU,CACtCD,IAAOF,EAAIC,KAAK,GAAGC,IACnBmC,QAAWrC,EAAIC,KAAK,GAAGoC,QACvBE,OAAUvC,EAAIC,KAAK,GAAGsC,OACtB3B,YAAeZ,EAAIC,KAAK,GAAGW,YAC3BvF,KAAQhB,EAAKf,MAAM+B,OAZtB,OAAA+B,EAAAI,KAeCG,QAAQC,IAAIoC,GAfb,yBAAA5C,EAAAc,SAAAjB,EAAA/D,QAADF,uCAoBEqI,GACVnI,KAAK+B,SAAS,CACZI,KAAMgG,EAAMnG,OAAOC,yCAanB,OACEb,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACfP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,cAAcZ,UAAY,aAAtC,iBACAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,UAAUZ,UAAY,aAAlC,iBACAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,WAAWZ,UAAY,aAAnC,0BAEAP,EAAAC,EAAAC,cAAA,OAAKK,UAAY,WACfP,EAAAC,EAAAC,cAAA,OAAKO,GAAG,YACNT,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,UACbP,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,UAAQK,UAAU,QAAQM,MAAOjC,KAAKI,MAAM+B,KAAML,SAAU9B,KAAKsJ,aAC/DlI,EAAAC,EAAAC,cAAA,UAAQW,MAAM,IAAd,kBACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,UAAd,UACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,WAAd,WACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,UAAd,UACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,sBAAd,wBAGJb,EAAAC,EAAAC,cAAA,OAAKK,UAAU,cAGjBP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,QAEbP,EAAAC,EAAAC,cAAA,UAAQK,UAAU,SAASS,QAASpC,KAAK2G,mBAAzC,sBAAuFvF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,sBAtGnF+D,aCkFNkE,cAlFb,SAAAA,EAAY3J,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuJ,IAEjB1J,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyJ,GAAApJ,KAAAH,KAAMJ,KAIDQ,MAAM,CAEToJ,OAAQ,GACRC,QAAS,GACTC,OAAQ,GACRC,IAAK,IASP9J,EAAK+J,aAAe/J,EAAK+J,aAAahJ,KAAlBd,OAAAe,EAAA,EAAAf,QAAAe,EAAA,EAAAf,CAAAD,KACpBA,EAAKgK,WAAahK,EAAKgK,WAAWjJ,KAAhBd,OAAAe,EAAA,EAAAf,QAAAe,EAAA,EAAAf,CAAAD,KAClBA,EAAKiK,aAAejK,EAAKiK,aAAalJ,KAAlBd,OAAAe,EAAA,EAAAf,QAAAe,EAAA,EAAAf,CAAAD,KACpBA,EAAKkK,WAAalK,EAAKkK,WAAWnJ,KAAhBd,OAAAe,EAAA,EAAAf,QAAAe,EAAA,EAAAf,CAAAD,KAvBDA,8EA4BlBG,KAAK+B,SAAS,SAAA3B,GAAK,MAAK,CAEjBoJ,OAAQ1E,MAAM,+FAMrB9E,KAAK+B,SAAS,SAAA3B,GAAK,MAAK,CAEjBqJ,QAAS3E,MAAM,kGAMtB9E,KAAK+B,SAAS,SAAA3B,GAAK,MAAK,CAEjBsJ,OAAQ5E,MAAM,+FAMrB9E,KAAK+B,SAAS,SAAA3B,GAAK,MAAK,CAEjBuJ,IAAK7E,MAAM,uGAMjB,OACE1D,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACfP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,cAAcZ,UAAY,aAAtC,iBACAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,UAAUZ,UAAY,aAAlC,iBACAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,WAAWZ,UAAY,aAAnC,0BAEEP,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,QAEbP,EAAAC,EAAAC,cAAA,UAAQO,GAAG,UAAUF,UAAW,SAAQQ,KAAK,SAASC,QAASpC,KAAK4J,cAApE,UACAxI,EAAAC,EAAAC,cAAA,UAAQO,GAAG,UAAUF,UAAW,SAAQQ,KAAK,SAASC,QAASpC,KAAK6J,YAApE,WACAzI,EAAAC,EAAAC,cAAA,UAAQO,GAAG,UAAUF,UAAW,SAAQQ,KAAK,SAASC,QAASpC,KAAK8J,cAApE,UACA1I,EAAAC,EAAAC,cAAA,UAAQO,GAAG,UAAUF,UAAW,SAAQQ,KAAK,SAASC,QAASpC,KAAK+J,YAApE,sBAA2G3I,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,qBA5EtG+D,aCsHH2E,cAlHjB,SAAAA,IAAc,IAAAnK,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgK,IAEZnK,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkK,GAAA7J,KAAAH,QAEKI,MAAQ,CAAEoI,QAAS,GAAInC,aAAc,IAJ9BxG,mFAQM,IAAAsB,EAAAnB,KAEZ0C,EAAO,gBAEPC,EAAO,IAAIC,IAAM,UAAW,QAClCD,EAAKE,WAFY,SAES,QAC1BF,EAAKG,OAAOJ,GACZC,EAAKG,OAAOC,KAAKC,MAAMC,SAAS,IAAIC,UAAU,EAAG,IACjD,IAAMC,EAAK,GAAAC,OAAMT,EAAKU,QAAQ,OAAnB,KAAAD,OAA6BV,GAClCY,EAAMC,IAAMC,OAAO,CAEvBC,QAAS,2BACTC,QAAS,CAAEC,cAAiB,UAAYR,KAG1CrD,OAAA8D,EAAA,EAAA9D,CAAA+D,EAAAxC,EAAAyC,KAAC,SAAAC,IAAA,IAAAlC,EAAAmC,EAAAsC,EAAAD,EAAAoB,EAAA,OAAA5D,EAAAxC,EAAA4C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACOvC,EAAKV,EAAKvB,MAAMqK,MAAMC,OAAOC,MADpCjG,EAAAE,KAAA,EAImBd,EAAIe,IAAI,YAJ3B,cAIOL,EAJPE,EAAAI,KAAAJ,EAAAE,KAAA,EAMwBd,EAAIe,IAAJ,aAAAjB,OAAqBY,EAAI+C,KAAK,GAAGC,MANzD,cAMOV,EANPpC,EAAAI,KAAAJ,EAAAE,KAAA,EAQ4Bd,EAAIe,IAAJ,iBAAAjB,OAAyBvB,EAAzB,QAR5B,OAQOwE,EARPnC,EAAAI,KASUmD,EAAI,EATd,aASiBA,EAAInB,EAASS,KAAK5B,QATnC,CAAAjB,EAAAE,KAAA,YAYOkC,EAASS,KAAKU,GAAGT,MAAQnF,EAZhC,CAAAqC,EAAAE,KAAA,gBAiBOjD,EAAKY,SAAS,CAACyG,QAASlC,EAASS,KAAKU,KAjB7CvD,EAAAa,OAAA,oBAS2C0C,IAT3CvD,EAAAE,KAAA,iBA0BKjD,EAAKY,SAAS,CAACsE,aAAcA,EAAaU,OA1B/C,yBAAA7C,EAAAc,SAAAjB,EAAA/D,QAADF,oCAiCI,OACEsB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKK,UAAY,WACjBP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,cAAcZ,UAAY,aAAtC,iBACAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,UAAUZ,UAAY,aAAlC,kBACAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,WAAWZ,UAAY,aAAnC,0BAEAP,EAAAC,EAAAC,cAAA,OAAKK,UAAY,WACjBP,EAAAC,EAAAC,cAAA,OAAKO,GAAG,YACRT,EAAAC,EAAAC,cAAA,wBAEAF,EAAAC,EAAAC,cAAA,UAAKtB,KAAKI,MAAMoI,QAAQd,aACxBtG,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,YAEAF,EAAAC,EAAAC,cAAA,aAECtB,KAAKI,MAAMiG,aAAamB,IAAI,SAAAC,GAAC,OAE5BrG,EAAAC,EAAAC,cAAA,MAAIuH,IAAOpB,EAAET,KAEb5F,EAAAC,EAAAC,cAAA,UAAKyH,KAAKqB,eAAe,QAAS,CAChCC,KAAM,UACNC,MAAO,OACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,UACRC,OAAQ,YACPxB,OAAOzB,EAAElB,OACZnF,EAAAC,EAAAC,cAAA,UAAKmG,EAAEf,KAEPtF,EAAAC,EAAAC,cAAA,UAAKyH,KAAKC,aAAa,QAAS,CAC9BzH,MAAO,WACP0H,SAAU,QACTC,OAAOzB,EAAEhB,SAEZrF,EAAAC,EAAAC,cAAA,UAAKyH,KAAKC,aAAa,QAAS,CAC9BzH,MAAO,WACP0H,SAAU,QACTC,OAAOzB,EAAE0B,eAMd/H,EAAAC,EAAAC,cAAA,UAAQK,UAAY,SAASS,QAAS,kBAAMuI,OAAOC,UAAnD,mBA5GevF,aCqHVwF,cAnHb,SAAAA,IAAc,IAAAhL,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6K,IAEdhL,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+K,GAAA1K,KAAAH,QAEKI,MAAQ,CACboI,QAAS,GAETnC,aAAc,IAPAxG,mFAWM,IAAAsB,EAAAnB,KAGZ0C,EAAO1C,KAAKJ,MAAMW,SAClBC,EAAWR,KAAKJ,MAAMY,SACtBmC,EAAO,IAAIC,IAAM,UAAW,QAClCD,EAAKE,WAAWrC,EAAU,QAC1BmC,EAAKG,OAAOJ,GACZC,EAAKG,OAAOC,KAAKC,MAAMC,SAAS,IAAIC,UAAU,EAAG,IACjD,IAAMC,EAAK,GAAAC,OAAMT,EAAKU,QAAQ,OAAnB,KAAAD,OAA6BV,GAClCY,EAAMC,IAAMC,OAAO,CAEzBC,QAAS,2BACTC,QAAS,CAAEC,cAAiB,UAAYR,KAGxCrD,OAAA8D,EAAA,EAAA9D,CAAA+D,EAAAxC,EAAAyC,KAAC,SAAAC,IAAA,IAAAC,EAAAsC,EAAAD,EAAAyE,EAAA,OAAAjH,EAAAxC,EAAA4C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEmBd,EAAIe,IAAI,YAF3B,cAEOL,EAFPE,EAAAI,KAAAJ,EAAAE,KAAA,EAIwBd,EAAIe,IAAJ,aAAAjB,OAAqBY,EAAI+C,KAAK,GAAGC,MAJzD,cAIOV,EAJPpC,EAAAI,KAAAJ,EAAAE,KAAA,EAM4Bd,EAAIe,IAAJ,iBAAAjB,OAAyBkD,EAASS,KAAK,GAAGC,IAA1C,QAN5B,cAMOX,EANPnC,EAAAI,KAQOwG,EAAW,GARlB5G,EAAAE,KAAA,GASOiC,EAAaU,KAAKS,IAAI,SAAAC,GAEb,YAAXA,EAAEtF,MACH2I,EAASC,KAAKtD,KAZlB,QAqBCtG,EAAKY,SAAS,CACZyG,QAASlC,EAASS,KAAK,GACvBV,aAAcyE,IACdrG,QAAQC,IAAI2B,GAxBf,yBAAAnC,EAAAc,SAAAjB,EAAA/D,QAADF,oCA8BG,OACEsB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACXP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,YAAYZ,UAAU,aAAlC,uBACAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,aAAaZ,UAAU,aAAnC,wBACFP,EAAAC,EAAAC,cAAA,OAAKK,UAAY,YAChBP,EAAAC,EAAAC,cAAA,UAAQK,UAAY,WAApB,oBAA+CP,EAAAC,EAAAC,cAAA,KAAGK,UAAY,sBAC/DP,EAAAC,EAAAC,cAAA,OAAKK,UAAY,oBACfP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,eAAeZ,UAAU,aAArC,yBACAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,YAAYZ,UAAU,aAAlC,8BAGFP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,WAAWZ,UAAU,aAAjC,sBAEFP,EAAAC,EAAAC,cAAA,OAAKO,GAAG,kBAAkBF,UAAU,qBACnCP,EAAAC,EAAAC,cAAA,6BACEF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,kBACDF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,kBAEHF,EAAAC,EAAAC,cAAA,aAEGtB,KAAKI,MAAMiG,aAAamB,IAAI,SAAAC,GAAC,OAE5BrG,EAAAC,EAAAC,cAAA,MAAIuH,IAAOpB,EAAET,KAEX5F,EAAAC,EAAAC,cAAA,UAAKyH,KAAKqB,eAAe,QAAS,CAChCC,KAAM,UACNC,MAAO,OACPC,IAAK,YACFrB,OAAOzB,EAAElB,OAEdnF,EAAAC,EAAAC,cAAA,UAAKyH,KAAKqB,eAAe,QAAS,CAChCI,KAAM,UACNC,OAAQ,UACRC,OAAQ,YACLxB,OAAOzB,EAAElB,OAChBnF,EAAAC,EAAAC,cAAA,UAAKmG,EAAEtF,MAEPf,EAAAC,EAAAC,cAAA,UAAKyH,KAAKC,aAAa,QAAS,CAC5BzH,MAAO,WACP0H,SAAU,QACPC,OAAOzB,EAAEhB,SAClBrF,EAAAC,EAAAC,cAAA,UAAKmG,EAAEf,WAKTtF,EAAAC,EAAAC,cAAA,mBA/GQ+D,aC4JD2F,cAxJnB,SAAAA,EAAYpL,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgL,IAEjBnL,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkL,GAAA7K,KAAAH,KAAMJ,KAEDQ,MAAO,CAEVgG,QAAS,GACTC,aAAc,GACdC,SAAU,GAEVnE,KAAM,GACNqE,KAAM,GACNC,OAAQ,GACRhF,IAAK,GACLiF,IAAK,IAQP7G,EAAKiC,SAAWjC,EAAKiC,SAASlB,KAAdd,OAAAe,EAAA,EAAAf,QAAAe,EAAA,EAAAf,CAAAD,KAChBA,EAAK+G,QAAU/G,EAAK+G,QAAQhG,KAAbd,OAAAe,EAAA,EAAAf,QAAAe,EAAA,EAAAf,CAAAD,KAvBEA,wEA0BPoB,GACRjB,KAAK+B,SAALjC,OAAAwH,EAAA,EAAAxH,CAAA,GAAgBmB,EAAEe,OAAOuF,KAAOtG,EAAEe,OAAOC,QACzCwC,QAAQC,IAAI1E,KAAKI,MAAMqB,iDAIP,IAAAN,EAAAnB,KAEL0C,EAAO1C,KAAKJ,MAAMW,SAClBC,EAAWR,KAAKJ,MAAMY,SACtBmC,EAAO,IAAIkE,IAAM,UAAW,QAClClE,EAAKE,WAAWrC,EAAU,QAC1BmC,EAAKG,OAAOJ,GACZC,EAAKG,OAAOC,KAAKC,MAAMC,SAAS,IAAIC,UAAU,EAAG,IACjD,IAAMC,EAAK,GAAAC,OAAMT,EAAKU,QAAQ,OAAnB,KAAAD,OAA6BV,GAClCY,EAAMC,IAAMC,OAAO,CAEvBC,QAAS,2BACTC,QAAS,CAAEC,cAAiB,UAAYR,KAG1CrD,OAAA8D,EAAA,EAAA9D,CAAA+D,EAAAxC,EAAAyC,KAAC,SAAAC,IAAA,IAAAC,EAAA8C,EAAAT,EAAA,OAAAxC,EAAAxC,EAAA4C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEmBd,EAAIe,IAAI,YAF3B,cAEOL,EAFPE,EAAAI,KAOCnD,EAAKY,SAAS,CAACqE,QAASpC,EAAI+C,OAP7B7C,EAAAE,KAAA,EASmBd,EAAIe,IAAI,aAAelD,EAAKf,MAAMgG,QAAQ,GAAnB,KAT1C,cASOU,EATP5C,EAAAI,KAcCnD,EAAKY,SAAS,CAACuE,SAAUQ,EAAIC,OAd9B7C,EAAAE,KAAA,GAgB4Bd,EAAIe,IAAJ,iBAAAjB,OAAyB0D,EAAIC,KAAK,GAAGC,IAArC,QAhB5B,QAgBOX,EAhBPnC,EAAAI,KAqBCnD,EAAKY,SAAS,CAACsE,aAAcA,EAAaU,OArB3C,yBAAA7C,EAAAc,SAAAjB,EAAA/D,QAADF,qCA4BH,IAAM4C,EAAO1C,KAAKJ,MAAMW,SAClBC,EAAWR,KAAKJ,MAAMY,SACtBmC,EAAO,IAAIkE,IAAM,UAAW,QAClClE,EAAKE,WAAWrC,EAAU,QAC1BmC,EAAKG,OAAOJ,GACZC,EAAKG,OAAOC,KAAKC,MAAMC,SAAS,IAAIC,UAAU,EAAG,IACjD,IAAMC,EAAK,GAAAC,OAAMT,EAAKU,QAAQ,OAAnB,KAAAD,OAA6BV,GAC5Ba,IAAMC,OAAO,CAEvBC,QAAS,2BACTC,QAAS,CAAEC,cAAiB,UAAYR,KAIpC8D,KAAK,gBAAiB,CACxBV,KAAQ,GACRpE,KAAQ,QACRV,IAAOzB,KAAKI,MAAMqB,IAClB+E,KAAQxG,KAAKI,MAAMoG,KACnBC,QAAYzG,KAAKI,MAAMqG,OACvBC,IAAO1G,KAAKI,MAAMsG,uCAKlB,OACEtF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACbP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,YAAYZ,UAAU,aAAlC,uBACAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,aAAaZ,UAAU,aAAnC,wBACAP,EAAAC,EAAAC,cAAA,OAAKK,UAAY,YACfP,EAAAC,EAAAC,cAAA,UAAQK,UAAY,WAApB,oBAA+CP,EAAAC,EAAAC,cAAA,KAAGK,UAAY,sBAChEP,EAAAC,EAAAC,cAAA,OAAKK,UAAY,oBACjBP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,eAAeZ,UAAU,aAArC,yBACAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,YAAYZ,UAAU,aAAlC,8BAGAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,WAAWZ,UAAU,aAAjC,sBAEAP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACbP,EAAAC,EAAAC,cAAA,OAAKO,GAAG,oBAAoBF,UAAU,qBACpCP,EAAAC,EAAAC,cAAA,+BACJF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,UAAQK,UAAU,QAAQ4F,KAAK,OAAOzF,SAAU9B,KAAK8B,UACrDV,EAAAC,EAAAC,cAAA,UAAQW,MAAM,IAAd,WACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,WAAd,WACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,UAAd,UACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,SAAd,SACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,cAAd,sBACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,UAAd,YAEAb,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,iCAAwBF,EAAAC,EAAAC,cAAA,SAAOK,UAAU,QAASG,SAAU9B,KAAK8B,SAAUyF,KAAK,YAChFnG,EAAAC,EAAAC,cAAA,mCACIF,EAAAC,EAAAC,cAAA,UAAQK,UAAU,QAAQ4F,KAAK,MAAMzF,SAAU9B,KAAK8B,UACnD9B,KAAKI,MAAMkG,SAASkB,IAAI,SAAAC,GAAC,OAC1BrG,EAAAC,EAAAC,cAAA,UAAQW,MAAOwF,EAAET,KAAjB,OAAA5D,OAA2BqE,EAAEC,kBAGhCtG,EAAAC,EAAAC,cAAA,uBAAcF,EAAAC,EAAAC,cAAA,SAAOK,UAAU,QAAQ4F,KAAK,MAAMzF,SAAU9B,KAAK8B,YAChEV,EAAAC,EAAAC,cAAA,WACFF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,yBACHF,EAAAC,EAAAC,cAAA,sIACMF,EAAAC,EAAAC,cAAA,UAAQK,UAAU,SAASS,QAASpC,KAAK4G,SAAzC,OAA8DxF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,wBA/InE+D,8BCyKX4F,cAtKb,SAAAA,EAAYrL,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiL,IAEjBpL,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmL,GAAA9K,KAAAH,KAAMJ,KAEDQ,MAAO,CAEV8K,UAAW,GACXC,QAAS,GACT3E,KAAM,GACN4E,OAAQ,GACR1E,IAAK,GACLH,KAAM,IAQR1G,EAAKwL,aAAexL,EAAKwL,aAAazK,KAAlBd,OAAAe,EAAA,EAAAf,QAAAe,EAAA,EAAAf,CAAAD,KAnBHA,4EAuBNsI,GACXnI,KAAK+B,SAAU,CACbI,KAAMgG,EAAMnG,OAAOC,6CAKvB,IAAIqJ,EAAWC,IAAOvL,KAAKJ,MAAM2G,KAAM,cAAciF,OACrD/G,QAAQC,IAAI4G,+CAIQ,IAAAnK,EAAAnB,KAEL0C,EAAO,iBAEPC,EAAO,IAAIkE,IAAM,UAAW,QAClClE,EAAKE,WAFY,UAES,QAC1BF,EAAKG,OAAOJ,GACZC,EAAKG,OAAOC,KAAKC,MAAMC,SAAS,IAAIC,UAAU,EAAG,IACjD,IAAMC,EAAK,GAAAC,OAAMT,EAAKU,QAAQ,OAAnB,KAAAD,OAA6BV,GAClCY,EAAMC,IAAMC,OAAO,CAEvBC,QAAS,2BACTC,QAAS,CAAEC,cAAiB,UAAYR,IAH9BI,CAAAzD,OAAA8D,EAAA,EAAA9D,CAAA+D,EAAAxC,EAAAyC,KAOV,SAAAC,IAAA,IAAAC,EAAAsC,EAAAD,EAAA,OAAAxC,EAAAxC,EAAA4C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEkBd,EAAIe,IAAI,YAF1B,cAEML,EAFNE,EAAAI,KAOAnD,EAAKY,SAAS,CAACqE,QAASpC,EAAI+C,OAP5B7C,EAAAE,KAAA,EASwBd,EAAIe,IAAI,aAAelD,EAAKf,MAAMgG,QAAQ,GAAnB,KAT/C,cASOE,EATPpC,EAAAI,KAcAnD,EAAKY,SAAS,CAACuE,SAAUA,EAASS,OAdlC7C,EAAAE,KAAA,GAe2Bd,EAAIe,IAAJ,iBAAAjB,OAAyBkD,EAASS,KAAK,GAAGC,IAA1C,QAf3B,QAeMX,EAfNnC,EAAAI,KAoBAnD,EAAKY,SAAS,CAAC0J,UAAWpF,EAAaU,OAKvC5F,EAAKY,SAAS,CAACwE,KAAMgF,IAAOpK,EAAKf,MAAMmG,QAzBvC,yBAAArC,EAAAc,SAAAjB,EAAA/D,gDAkCD,IAAM0C,EAAO1C,KAAKJ,MAAMW,SAClBC,EAAWR,KAAKJ,MAAMY,SACtBmC,EAAO,IAAIkE,IAAM,UAAW,QAClClE,EAAKE,WAAWrC,EAAU,QAC1BmC,EAAKG,OAAOJ,GACZC,EAAKG,OAAOC,KAAKC,MAAMC,SAAS,IAAIC,UAAU,EAAG,IACjD,IAAMC,EAAK,GAAAC,OAAMT,EAAKU,QAAQ,OAAnB,KAAAD,OAA6BV,GAC5Ba,IAAMC,OAAO,CAEvBC,QAAS,2BACTC,QAAS,CAAEC,cAAiB,UAAYR,KAGrC8D,KAAK,gBAAiB,CACzBV,KAAMvG,KAAKI,MAAMmG,KAChBpE,KAAMnC,KAAKI,MAAM+B,KAEjBqE,KAAMxG,KAAKI,MAAMoG,KACjBC,OAAOzG,KAAKI,MAAMqG,OAClBC,IAAI1G,KAAKI,MAAMsG,MACdQ,KAAK,SAAUC,GAChB1C,QAAQC,IAAIyC,sCAKf,IAAA1E,EAAAzC,KACR,OACEoB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACbP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,YAAYZ,UAAU,aAAlC,uBACAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,aAAaZ,UAAU,aAAnC,wBACAP,EAAAC,EAAAC,cAAA,OAAKK,UAAY,YACfP,EAAAC,EAAAC,cAAA,UAAQK,UAAY,WAApB,oBAA+CP,EAAAC,EAAAC,cAAA,KAAGK,UAAY,sBAChEP,EAAAC,EAAAC,cAAA,OAAKK,UAAY,oBACjBP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,eAAeZ,UAAU,aAArC,yBACAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,YAAYZ,UAAU,aAAlC,8BAGAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,WAAWZ,UAAU,aAAjC,sBAGFP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACbP,EAAAC,EAAAC,cAAA,OAAKO,GAAG,qBAAqBF,UAAU,qBACrCP,EAAAC,EAAAC,cAAA,gCAEAF,EAAAC,EAAAC,cAAA,OAAKO,GAAG,YACRT,EAAAC,EAAAC,cAAA,4CADA,mBAEmBF,EAAAC,EAAAC,cAAA,SAAOK,UAAU,QAAQG,SAAU,SAAAb,GAAIwB,EAAKV,SAAS,CAACmJ,UAAWjK,EAAEe,OAAOC,MAAMC,UAAWD,MAAOjC,KAAKI,MAAM8K,YAC9H9J,EAAAC,EAAAC,cAAA,qCAA4BF,EAAAC,EAAAC,cAAA,SAAOK,UAAU,QAAQG,SAAU,SAAAb,GAAIwB,EAAKV,SAAS,CAACoJ,QAASlK,EAAEe,OAAOC,MAAMC,UAAWD,MAAOjC,KAAKI,MAAM+K,WACzI/J,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,yBAAgBF,EAAAC,EAAAC,cAAA,SAAOK,UAAU,QAAQG,SAAU,SAAAb,GAAIwB,EAAKV,SAAS,CAACyE,KAAMvF,EAAEe,OAAOC,MAAMC,UAAWD,MAAOjC,KAAKI,MAAMoG,QACxHpF,EAAAC,EAAAC,cAAA,0BACEF,EAAAC,EAAAC,cAAA,UAAQK,UAAU,QAAQM,MAAOjC,KAAKI,MAAM+B,KAAML,SAAU9B,KAAKqL,cAC/DjK,EAAAC,EAAAC,cAAA,UAAQW,MAAM,IAAd,WACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,WAAd,WACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,UAAd,UACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,SAAd,SACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,cAAd,sBACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,UAAd,YAEFb,EAAAC,EAAAC,cAAA,6BAAoBF,EAAAC,EAAAC,cAAA,SAAOK,UAAU,QAAQG,SAAU,SAAAb,GAAIwB,EAAKV,SAAS,CAACqJ,OAAQnK,EAAEe,OAAOC,MAAMC,UAAWD,MAAOjC,KAAKI,MAAMgL,UAC9HhK,EAAAC,EAAAC,cAAA,wBAAeF,EAAAC,EAAAC,cAAA,SAAOK,UAAU,QAASG,SAAU,SAAAb,GAAIwB,EAAKV,SAAS,CAAC2E,IAAKzF,EAAEe,OAAOC,MAAMC,UAAWD,MAAOjC,KAAKI,MAAMsG,OACvHtF,EAAAC,EAAAC,cAAA,0CACAF,EAAAC,EAAAC,cAAA,sBAAaF,EAAAC,EAAAC,cAAA,SAAOK,UAAU,QAAQQ,KAAK,OAAOL,SAAU,SAAAb,GAAIwB,EAAKV,SAAS,CAACwE,KAAMtF,EAAEe,OAAOC,SAAUA,MAAOjC,KAAKI,MAAMmG,SAG5HnF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,QACbP,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,yBACHF,EAAAC,EAAAC,cAAA,sIACMF,EAAAC,EAAAC,cAAA,UAAQK,UAAU,SAASS,QAAS,SAAAnB,GAAC,OAAEwD,QAAQC,IAAIjC,EAAKrC,SAAxD,OAA4EgB,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,sBA7J7E+D,aCoRTqG,eAnRP,SAAAA,EAAY9L,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0L,IAEjB7L,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4L,GAAAvL,KAAAH,KAAMJ,KAEDQ,MAAO,CAEVgG,QAAS,GACTC,aAAc,GACdC,SAAU,GACV7E,IAAK,GACL+E,KAAM,GACNC,OAAQ,GACRC,IAAK,GACLH,KAAM,GACNoF,QAAS,GACTC,QAAS,GACTC,QAAS,GACTC,QAAS,GACTC,KAAM,GACNC,KAAM,GACNC,KAAM,GACNC,KAAM,IASRrM,EAAKiC,SAAWjC,EAAKiC,SAASlB,KAAdd,OAAAe,EAAA,EAAAf,QAAAe,EAAA,EAAAf,CAAAD,KAChBA,EAAKsM,UAAYtM,EAAKsM,UAAUvL,KAAfd,OAAAe,EAAA,EAAAf,QAAAe,EAAA,EAAAf,CAAAD,KACjBA,EAAKuM,UAAYvM,EAAKuM,UAAUxL,KAAfd,OAAAe,EAAA,EAAAf,QAAAe,EAAA,EAAAf,CAAAD,KACjBA,EAAKwM,UAAYxM,EAAKwM,UAAUzL,KAAfd,OAAAe,EAAA,EAAAf,QAAAe,EAAA,EAAAf,CAAAD,KACjBA,EAAKyM,UAAYzM,EAAKyM,UAAU1L,KAAfd,OAAAe,EAAA,EAAAf,QAAAe,EAAA,EAAAf,CAAAD,KAlCAA,mFAsCC,IAAAsB,EAAAnB,KACL0C,EAAO1C,KAAKJ,MAAMW,SAClBC,EAAWR,KAAKJ,MAAMY,SACtBmC,EAAO,IAAIkE,IAAM,UAAW,QAClClE,EAAKE,WAAWrC,EAAU,QAC1BmC,EAAKG,OAAOJ,GACZC,EAAKG,OAAOC,KAAKC,MAAMC,SAAS,IAAIC,UAAU,EAAG,IACjD,IAAMC,EAAK,GAAAC,OAAMT,EAAKU,QAAQ,OAAnB,KAAAD,OAA6BV,GAClCY,EAAMC,IAAMC,OAAO,CACvBC,QAAS,2BACTC,QAAS,CAAEC,cAAiB,UAAYR,KAG1CrD,OAAA8D,EAAA,EAAA9D,CAAA+D,EAAAxC,EAAAyC,KAAC,SAAAC,IAAA,IAAAC,EAAA8C,EAAAT,EAAA,OAAAxC,EAAAxC,EAAA4C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACmBd,EAAIe,IAAI,YAD3B,cACOL,EADPE,EAAAI,KAECnD,EAAKY,SAAS,CAACqE,QAASpC,EAAI+C,OAF7B7C,EAAAE,KAAA,EAGmBd,EAAIe,IAAI,aAAelD,EAAKf,MAAMgG,QAAQ,GAAnB,KAH1C,cAGOU,EAHP5C,EAAAI,KAICnD,EAAKY,SAAS,CAACuE,SAAUQ,EAAIC,OAJ9B7C,EAAAE,KAAA,GAK4Bd,EAAIe,IAAJ,iBAAAjB,OAAyB0D,EAAIC,KAAK,GAAGC,IAArC,QAL5B,QAKOX,EALPnC,EAAAI,KAMCnD,EAAKY,SAAS,CAACsE,aAAcA,EAAaU,OAN3C,yBAAA7C,EAAAc,SAAAjB,EAAA/D,QAADF,uCAUI,IAAA2C,EAAAzC,KACD0C,EAAO1C,KAAKJ,MAAMW,SAClBC,EAAWR,KAAKJ,MAAMY,SACtBmC,EAAO,IAAIkE,IAAM,UAAW,QAClClE,EAAKE,WAAWrC,EAAU,QAC1BmC,EAAKG,OAAOJ,GACZC,EAAKG,OAAOC,KAAKC,MAAMC,SAAS,IAAIC,UAAU,EAAG,IACjD,IAAMC,EAAK,GAAAC,OAAMT,EAAKU,QAAQ,OAAnB,KAAAD,OAA6BV,GAClCY,EAAMC,IAAMC,OAAO,CACvBC,QAAS,2BACTC,QAAS,CAAEC,cAAiB,UAAYR,KAE1CrD,OAAA8D,EAAA,EAAA9D,CAAA+D,EAAAxC,EAAAyC,KAAC,SAAA4E,IAAA,IAAA1E,EAAA8C,EAAAT,EAAA,OAAAxC,EAAAxC,EAAA4C,KAAA,SAAA2E,GAAA,cAAAA,EAAAzE,KAAAyE,EAAAxE,MAAA,cAAAwE,EAAAxE,KAAA,EACmBd,EAAIe,IAAI,YAD3B,cACOL,EADP4E,EAAAtE,KAEC7B,EAAKV,SAAS,CAACqE,QAASpC,EAAI+C,OAF7B6B,EAAAxE,KAAA,EAGmBd,EAAIe,IAAI,aAAe5B,EAAKrC,MAAMgG,QAAQ,GAAnB,KAH1C,cAGOU,EAHP8B,EAAAtE,KAIC7B,EAAKV,SAAS,CAACuE,SAAUQ,EAAIC,OAJ9B6B,EAAAxE,KAAA,GAK4Bd,EAAIe,IAAJ,iBAAAjB,OAAyB0D,EAAIC,KAAK,GAAGC,IAArC,QAL5B,QAKOX,EALPuC,EAAAtE,KAMC7B,EAAKV,SAAS,CAACsE,aAAcA,EAAaU,OAN3C,yBAAA6B,EAAA5D,SAAA0D,EAAA1I,QAADF,GASEwD,EAAI2D,KAAK,gBAAiB,CAExBV,KAAQ,GACRpE,KAAQ,QACRV,IAAOzB,KAAKI,MAAMqB,IAClB+E,KAAQ,uCACRC,QAAYzG,KAAKI,MAAMuL,QACvBjF,IAAO1G,KAAKI,MAAM2L,OAGxBzI,EAAI2D,KAAK,gBAAiB,CAExBV,KAAQ,GACRpE,KAAQ,SACRV,IAAO,uCACP+E,KAAQxG,KAAKI,MAAMqB,IACnBgF,OAAUzG,KAAKI,MAAMuL,QACrBjF,IAAO1G,KAAKI,MAAM2L,2CAMlB,IAAMrJ,EAAO1C,KAAKJ,MAAMW,SAClBC,EAAWR,KAAKJ,MAAMY,SACtBmC,EAAO,IAAIkE,IAAM,UAAW,QAClClE,EAAKE,WAAWrC,EAAU,QAC1BmC,EAAKG,OAAOJ,GACZC,EAAKG,OAAOC,KAAKC,MAAMC,SAAS,IAAIC,UAAU,EAAG,IACjD,IAAMC,EAAK,GAAAC,OAAMT,EAAKU,QAAQ,OAAnB,KAAAD,OAA6BV,GAClCY,EAAMC,IAAMC,OAAO,CACvBC,QAAS,2BACTC,QAAS,CAAEC,cAAiB,UAAYR,KAGxCG,EAAI2D,KAAK,gBAAiB,CAExBV,KAAQ,GACRpE,KAAQ,QACRV,IAAOzB,KAAKI,MAAMqB,IAClB+E,KAAQ,uCACRC,QAAYzG,KAAKI,MAAMwL,QACvBlF,IAAO1G,KAAKI,MAAM4L,OAGxB1I,EAAI2D,KAAK,gBAAiB,CAExBV,KAAQ,GACRpE,KAAQ,SACRV,IAAO,uCACP+E,KAAQxG,KAAKI,MAAMqB,IACnBgF,OAAUzG,KAAKI,MAAMuL,QACrBjF,IAAO1G,KAAKI,MAAM2L,2CAKlB,IAAMrJ,EAAO1C,KAAKJ,MAAMW,SAClBC,EAAWR,KAAKJ,MAAMY,SACtBmC,EAAO,IAAIkE,IAAM,UAAW,QAClClE,EAAKE,WAAWrC,EAAU,QAC1BmC,EAAKG,OAAOJ,GACZC,EAAKG,OAAOC,KAAKC,MAAMC,SAAS,IAAIC,UAAU,EAAG,IACjD,IAAMC,EAAK,GAAAC,OAAMT,EAAKU,QAAQ,OAAnB,KAAAD,OAA6BV,GAClCY,EAAMC,IAAMC,OAAO,CACvBC,QAAS,2BACTC,QAAS,CAAEC,cAAiB,UAAYR,KAGxCG,EAAI2D,KAAK,gBAAiB,CAExBV,KAAQ,GACRpE,KAAQ,QACRV,IAAOzB,KAAKI,MAAMqB,IAClB+E,KAAQ,uCACRC,QAAYzG,KAAKI,MAAMyL,QACvBnF,IAAO1G,KAAKI,MAAM6L,OAGxB3I,EAAI2D,KAAK,gBAAiB,CAExBV,KAAQ,GACRpE,KAAQ,SACRV,IAAO,uCACP+E,KAAQxG,KAAKI,MAAMqB,IACnBgF,OAAUzG,KAAKI,MAAMuL,QACrBjF,IAAO1G,KAAKI,MAAM2L,2CAKlB,IAAMrJ,EAAO1C,KAAKJ,MAAMW,SAClBC,EAAWR,KAAKJ,MAAMY,SACtBmC,EAAO,IAAIkE,IAAM,UAAW,QAClClE,EAAKE,WAAWrC,EAAU,QAC1BmC,EAAKG,OAAOJ,GACZC,EAAKG,OAAOC,KAAKC,MAAMC,SAAS,IAAIC,UAAU,EAAG,IACjD,IAAMC,EAAK,GAAAC,OAAMT,EAAKU,QAAQ,OAAnB,KAAAD,OAA6BV,GAClCY,EAAMC,IAAMC,OAAO,CACvBC,QAAS,2BACTC,QAAS,CAAEC,cAAiB,UAAYR,KAGxCG,EAAI2D,KAAK,gBAAiB,CAExBV,KAAQ,GACRpE,KAAQ,QACRV,IAAOzB,KAAKI,MAAMqB,IAClB+E,KAAQ,uCACRC,QAAYzG,KAAKI,MAAM0L,QACvBpF,IAAO1G,KAAKI,MAAM8L,OAGxB5I,EAAI2D,KAAK,gBAAiB,CAExBV,KAAQ,GACRpE,KAAQ,SACRV,IAAO,uCACP+E,KAAQxG,KAAKI,MAAMqB,IACnBgF,OAAUzG,KAAKI,MAAMuL,QACrBjF,IAAO1G,KAAKI,MAAM2L,wCAKZ9K,GACEjB,KAAK+B,SAALjC,OAAAwH,EAAA,EAAAxH,CAAA,GAAgBmB,EAAEe,OAAOuF,KAAOtG,EAAEe,OAAOC,QACzCwC,QAAQC,IAAI1E,KAAKI,MAAMqB,sCAOrC,OACEL,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACbP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,YAAYZ,UAAU,aAAlC,uBACAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,aAAaZ,UAAU,aAAnC,wBAEAP,EAAAC,EAAAC,cAAA,OAAKK,UAAY,YACfP,EAAAC,EAAAC,cAAA,UAAQK,UAAY,WAApB,oBAA+CP,EAAAC,EAAAC,cAAA,KAAGK,UAAY,sBAChEP,EAAAC,EAAAC,cAAA,OAAKK,UAAY,oBACjBP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,eAAeZ,UAAU,aAArC,yBACAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,YAAYZ,UAAU,aAAlC,8BAGAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,WAAWZ,UAAU,aAAjC,sBAEUP,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,qBAEFF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,SAAOK,UAAU,QAAQ4F,KAAK,UAAUzF,SAAU9B,KAAK8B,YAC3DV,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,SAAOK,UAAU,QAAQ4F,KAAK,OAAOzF,SAAU9B,KAAK8B,YACxDV,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQK,UAAU,SAASS,QAASpC,KAAKmM,WAAzC,eAEN/K,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,SAAOK,UAAU,QAAQ4F,KAAK,UAAUzF,SAAU9B,KAAK8B,YAC3DV,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,SAAOK,UAAU,QAAQ4F,KAAK,OAAOzF,SAAU9B,KAAK8B,YACxDV,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQK,UAAU,SAASS,QAASpC,KAAKoM,WAAzC,eAENhL,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,SAAOK,UAAU,QAAQ4F,KAAK,UAAUzF,SAAU9B,KAAK8B,YAC3DV,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,SAAOK,UAAU,QAAQ4F,KAAK,OAAOzF,SAAU9B,KAAK8B,YACxDV,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQK,UAAU,SAASS,QAASpC,KAAKqM,WAAzC,eAENjL,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,SAAOK,UAAU,QAAQ4F,KAAK,UAAUzF,SAAU9B,KAAK8B,YAC3DV,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,SAAOK,UAAU,QAAQ4F,KAAK,OAAOzF,SAAU9B,KAAK8B,YACxDV,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQK,UAAU,SAASS,QAASpC,KAAKsM,WAAzC,gBAGZlL,EAAAC,EAAAC,cAAA,mBA/QC+D,aCsDPkH,eArDb,SAAAA,EAAY3M,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuM,IAEjB1M,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyM,GAAApM,KAAAH,KAAMJ,KAEDQ,MAAM,GAJMP,mFAaX,IAAM6C,EAAO,oBAEPC,EAAO,IAAIC,IAAM,UAAW,QAClCD,EAAKE,WAFY,WAES,QAC1BF,EAAKG,OAAOJ,GACZC,EAAKG,OAAOC,KAAKC,MAAMC,SAAS,IAAIC,UAAU,EAAG,IACjD,IAAMC,EAAK,GAAAC,OAAMT,EAAKU,QAAQ,OAAnB,KAAAD,OAA6BV,GAC5Ba,IAAMC,OAAO,CAEzBC,QAAS,2BACTC,QAAS,CAAEC,cAAiB,UAAYR,sCAM9C,OACE/B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACbP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,cAAcZ,UAAY,aAAtC,iBACAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,UAAUZ,UAAY,aAAlC,kBACAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,WAAWZ,UAAY,aAAnC,cACAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,WAAWZ,UAAY,aAAnC,0BAEAP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACfP,EAAAC,EAAAC,cAAA,OAAKO,GAAG,YACNT,EAAAC,EAAAC,cAAA,MAAIC,MAAOvB,KAAK4H,SAAhB,uBAEAxG,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,cAAcZ,UAAU,UAApC,YACAP,EAAAC,EAAAC,cAAA,YAGAF,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,IAAIZ,UAAU,UAA1B,sBA/CuB0D,aC2ClBmH,sMAvCP,IAAM9J,EAAO,oBAEPC,EAAO,IAAIC,IAAM,UAAW,QAClCD,EAAKE,WAFY,WAES,QAC1BF,EAAKG,OAAOJ,GACZC,EAAKG,OAAOC,KAAKC,MAAMC,SAAS,IAAIC,UAAU,EAAG,IACjD,IAAMC,EAAK,GAAAC,OAAMT,EAAKU,QAAQ,OAAnB,KAAAD,OAA6BV,GAC5Ba,IAAMC,OAAO,CAEzBC,QAAS,2BACTC,QAAS,CAAEC,cAAiB,UAAYR,sCAM5C,OACE/B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACbP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,cAAcZ,UAAY,aAAtC,iBACAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,UAAUZ,UAAY,aAAlC,kBACAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,WAAWZ,UAAY,aAAnC,cACAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,WAAWZ,UAAY,aAAnC,0BAEAP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACfP,EAAAC,EAAAC,cAAA,OAAKO,GAAG,YACNT,EAAAC,EAAAC,cAAA,MAAIC,MAAOvB,KAAK4H,SAAhB,oBACAxG,EAAAC,EAAAC,cAAA,UAAQK,UAAY,SAASS,QAAS,kBAAMuI,OAAOC,UAAnD,SAEAxJ,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,cAAcZ,UAAU,UAApC,YAEAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,IAAIZ,UAAU,UAA1B,sBAlCoB0D,cCkGhBoH,eAlGb,SAAAA,EAAY7M,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyM,IAEjB5M,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2M,GAAAtM,KAAAH,KAAMJ,KAEDQ,MAAM,CAETqG,OAAQ,GAQV5G,EAAKoI,WAAapI,EAAKoI,WAAWrH,KAAhBd,OAAAe,EAAA,EAAAf,QAAAe,EAAA,EAAAf,CAAAD,KAClBA,EAAK8G,kBAAoB9G,EAAK8G,kBAAkB/F,KAAvBd,OAAAe,EAAA,EAAAf,QAAAe,EAAA,EAAAf,CAAAD,KAfRA,mFAmBC,IAAAsB,EAAAnB,KACP0C,EAAO1C,KAAKJ,MAAMW,SAClBC,EAAWR,KAAKJ,MAAMY,SACtBmC,EAAO,IAAIC,IAAM,UAAW,QAClCD,EAAKE,WAAWrC,EAAU,QAC1BmC,EAAKG,OAAOJ,GACZC,EAAKG,OAAOC,KAAKC,MAAMC,SAAS,IAAIC,UAAU,EAAG,IACjD,IAAMC,EAAK,GAAAC,OAAMT,EAAKU,QAAQ,OAAnB,KAAAD,OAA6BV,GAClCY,EAAMC,IAAMC,OAAO,CAEvBC,QAAS,2BACTC,QAAS,CAAEC,cAAiB,UAAYR,KAG1CrD,OAAA8D,EAAA,EAAA9D,CAAA+D,EAAAxC,EAAAyC,KAAC,SAAAC,IAAA,IAAAC,EAAA8C,EAAAoB,EAAA,OAAArE,EAAAxC,EAAA4C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEmBd,EAAIe,IAAI,YAF3B,cAEOL,EAFPE,EAAAI,KAAAJ,EAAAE,KAAA,EAImBd,EAAIe,IAAJ,aAAAjB,OAAqBY,EAAI+C,KAAK,GAAGC,MAJpD,cAIOF,EAJP5C,EAAAI,KAAAJ,EAAAE,KAAA,EAMmBd,EAAIe,IAAJ,iBAAAjB,OAAyB0D,EAAIC,KAAK,GAAGC,IAArC,QANnB,cAMKkB,EANLhE,EAAAI,KAAAJ,EAAAE,KAAA,GASOd,EAAI2D,KAAK,gBAAiB,CAC9B9E,KAAQ,cACRV,IAAOqF,EAAIC,KAAK,GAAGC,IACnBR,KAAQM,EAAIC,KAAK,GAAGC,IACpBP,OAAUtF,EAAKf,MAAMqG,OACrBC,IAAO,gBAdV,eAAAxC,EAAAE,KAAA,GAiBed,EAAIe,IAAJ,iBAAAjB,OAAyB0D,EAAIC,KAAK,GAAGC,IAArC,QAjBf,QAiBCkB,EAjBDhE,EAAAI,KAkBCG,QAAQC,IAAIwD,GAlBb,yBAAAhE,EAAAc,SAAAjB,EAAA/D,QAADF,sCAsBUqI,GACVnI,KAAK+B,SAAU,CACb0E,OAAQ0B,EAAMnG,OAAOC,yCAQ5B,OACEb,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACbP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,aAAaZ,UAAU,aAAnC,yBACAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,kBAAkBZ,UAAU,aAAxC,kBAEFP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACbP,EAAAC,EAAAC,cAAA,OAAKO,GAAG,YACNT,EAAAC,EAAAC,cAAA,OAAKO,GAAG,cAAcF,UAAU,qBAC9BP,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,QAAMoL,OAAO,oBACXtL,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,oCACEF,EAAAC,EAAAC,cAAA,UAAQK,UAAU,QAAQM,MAAOjC,KAAKI,MAAMqG,OAAQ3E,SAAU9B,KAAKiI,YACjE7G,EAAAC,EAAAC,cAAA,UAAQW,MAAM,IAAd,WACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,mBAAd,UACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,mBAAd,UACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,mBAAd,WACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,oBAAd,WACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,mBAAd,WACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,oBAAd,WACAb,EAAAC,EAAAC,cAAA,UAAQW,MAAM,mBAAd,eAGNb,EAAAC,EAAAC,cAAA,UAAQK,UAAU,SAASS,QAASpC,KAAK2G,mBAAzC,OAAwEvF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,sBA3F/D+D,aCyBXsH,oLAxBX,OACEvL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACfP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,WAAWZ,UAAU,aAAjC,yBACAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,SAASZ,UAAU,aAA/B,WACAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,OAAOZ,UAAU,aAA7B,SACAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,WAAWZ,UAAU,aAAjC,iBAGAP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACbP,EAAAC,EAAAC,cAAA,OAAMK,UAAU,wCACdP,EAAAC,EAAAC,cAAA,MAAIK,UAAU,SAAd,SADF,oDAEmDP,EAAAC,EAAAC,cAAA,WAFnD,6GAEkKF,EAAAC,EAAAC,cAAA,WAFlK,+KAG8KF,EAAAC,EAAAC,cAAA,WAH9K,uLAIsLF,EAAAC,EAAAC,cAAA,WAJtL,2LAK0LF,EAAAC,EAAAC,cAAA,WAL1L,uJAMsJF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,aAEvJF,EAAAC,EAAAC,cAAA,mBArBQ+D,aCwCLuH,oLArCX,OACExL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACfP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,WAAWZ,UAAU,aAAjC,yBACAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,SAASZ,UAAU,aAA/B,WACAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,OAAOZ,UAAU,aAA7B,SACAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,WAAWZ,UAAU,aAAjC,iBAGAP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,uCACbP,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,WAFF,2BAG0BF,EAAAC,EAAAC,cAAA,WAH1B,iHAIgHF,EAAAC,EAAAC,cAAA,WAJhH,qDAKoDF,EAAAC,EAAAC,cAAA,WALpD,iGAMgGF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WANrG,8BAQ6BF,EAAAC,EAAAC,cAAA,WAR7B,gIAS+HF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WATpI,2CAW0CF,EAAAC,EAAAC,cAAA,WAX1C,2GAY0GF,EAAAC,EAAAC,cAAA,WAZ1G,2GAa0GF,EAAAC,EAAAC,cAAA,WAb1G,8GAc6GF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WAdlH,oDAgBmDF,EAAAC,EAAAC,cAAA,WAhBnD,wHAiBkHF,EAAAC,EAAAC,cAAA,WAjBlH,gFAmB+EF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,aAEhFF,EAAAC,EAAAC,cAAA,mBAlCM+D,aC4BHwH,oLAzBX,OACEzL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACfP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,WAAWZ,UAAU,aAAjC,yBACAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,SAASZ,UAAU,aAA/B,WACAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,OAAOZ,UAAU,aAA7B,SACAP,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASC,GAAG,WAAWZ,UAAU,aAAjC,iBAEAP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,qCACbP,EAAAC,EAAAC,cAAA,MAAIK,UAAU,QAAd,cADF,aAEYP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,SAAf,kBACVP,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAJF,WAKUF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,SAAf,oCACRP,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAPF,YAQWF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,SAAQP,EAAAC,EAAAC,cAAA,KAAGwG,KAAK,2BAAR,eAE9B1G,EAAAC,EAAAC,cAAA,mBAtBU+D,aCyELyH,eAnEf,SAAAA,EAAYlN,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8M,IAEjBjN,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgN,GAAA3M,KAAAH,KAAMJ,KAEDQ,MAAM,CAETG,SAAU,GACVC,SAAU,IAQVX,EAAK8G,kBAAkB9G,EAAK8G,kBAAkB/F,KAAvBd,OAAAe,EAAA,EAAAf,QAAAe,EAAA,EAAAf,CAAAD,KAfRA,mFAmBG,IAAAsB,EAAAnB,KAEZ0C,EAAO1C,KAAKI,MAAMG,SAClBC,EAAUR,KAAKI,MAAMI,SAC3BiE,QAAQC,IAAI,WAAYhC,GACxB+B,QAAQC,IAAI,WAAYlE,GACxB,IAAMmC,EAAO,IAAIC,IAAM,UAAW,QAClCD,EAAKE,WAAWrC,EAAU,QAC1BmC,EAAKG,OAAOJ,GACZC,EAAKG,OAAOC,KAAKC,MAAMC,SAAS,IAAIC,UAAU,EAAG,IACjD,IAAMC,EAAK,GAAAC,OAAMT,EAAKU,QAAQ,OAAnB,KAAAD,OAA6BV,GAClCY,EAAMC,IAAMC,OAAO,CACvBC,QAAS,2BACTC,QAAS,CAAEC,cAAiB,UAAYR,KAG1CrD,OAAA8D,EAAA,EAAA9D,CAAA+D,EAAAxC,EAAAyC,KAAC,SAAAC,IAAA,OAAAF,EAAAxC,EAAA4C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEOd,EAAI2D,KAAK,QAAS,CACtB1G,SAAYY,EAAKf,MAAMG,SACvBC,SAAYW,EAAKf,MAAMI,WAJ1B,OAMCiE,QAAQC,IAAI,iBANb,wBAAAR,EAAAc,SAAAjB,EAAA/D,QAADF,oCAWQ,IAAA2C,EAAAzC,KACR,OACEoB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACbP,EAAAC,EAAAC,cAAA,OAAKO,GAAG,YACNT,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,iDACFF,EAAAC,EAAAC,cAAA,OAAKO,GAAG,UACNT,EAAAC,EAAAC,cAAA,uBAAcF,EAAAC,EAAAC,cAAA,SAAOK,UAAU,QAAQG,SAAU,SAAAb,GAAIwB,EAAKV,SAAS,CAACxB,SAAUU,EAAEe,OAAOC,MAAMC,UAAWD,MAAOjC,KAAKI,MAAMG,SAAU4B,KAAK,OAAOoF,KAAK,YACrJnG,EAAAC,EAAAC,cAAA,uBAAcF,EAAAC,EAAAC,cAAA,SAAOK,UAAU,QAAQG,SAAU,SAAAb,GAAIwB,EAAKV,SAAS,CAACvB,SAAUS,EAAEe,OAAOC,MAAMC,UAAWD,MAAOjC,KAAKI,MAAMI,SAAU2B,KAAK,OAAOoF,KAAK,aAEvJnG,EAAAC,EAAAC,cAAA,OAAKK,UAAU,QACbP,EAAAC,EAAAC,cAAA,UAAQK,UAAU,SAASS,QAASpC,KAAK2G,mBAAzC,uBAAwFvF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,sBA5DnF+D,aCyFT0H,eA9Db,SAAAA,EAAYnN,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+M,IAElBlN,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiN,GAAA5M,KAAAH,KAAMJ,KAMDoN,iBAAmBnN,EAAKmN,iBAAiBpM,KAAtBd,OAAAe,EAAA,EAAAf,QAAAe,EAAA,EAAAf,CAAAD,KAExBA,EAAKO,MAAQ,CAEXG,SAAU,IACVC,SAAU,KAbMX,gFAkBHkH,GACf/G,KAAK+B,SAAS,CAACxB,SAAUwG,EAAKxG,SAAUC,SAAUuG,EAAKvG,WACvDiE,QAAQC,IAAIqC,oCAIJ,IAAA5F,EAAAnB,KACP,OACEoB,EAAAC,EAAAC,cAAC2L,EAAA,EAAD,KACA7L,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACkB,EAAD,CAAO+B,MAAOvE,KAAKgN,mBACnB5L,EAAAC,EAAAC,cAAC4L,EAAA,EAAD,KACE9L,EAAAC,EAAAC,cAAC6L,EAAA,EAAD,CAAOC,KAAK,IAAIC,UAAWtH,EAAMuH,OAAK,IACtClM,EAAAC,EAAAC,cAAC6L,EAAA,EAAD,CAAOC,KAAK,WAAWC,UAAWpH,IAClC7E,EAAAC,EAAAC,cAAC6L,EAAA,EAAD,CAAOC,KAAK,YAAaG,OAAQ,SAAA3N,GAAK,OAAGwB,EAAAC,EAAAC,cAACkM,EAAD,CAAUjN,SAAUY,EAAKf,MAAMG,SAAUC,SAAUW,EAAKf,MAAMI,cAHzG,gBAGqI2F,EAHrI,KAIE/E,EAAAC,EAAAC,cAAC6L,EAAA,EAAD,CAAOC,KAAK,aAAaG,OAAQ,SAAA3N,GAAK,OAAIwB,EAAAC,EAAAC,cAACmK,EAAD,CAAWlL,SAAUY,EAAKf,MAAMG,SAAUC,SAAUW,EAAKf,MAAMI,cAJ3G,eAIsImH,EAJtI,KAKEvG,EAAAC,EAAAC,cAAC6L,EAAA,EAAD,CAAOC,KAAK,aAAaG,OAAQ,SAAA3N,GAAK,OAAIwB,EAAAC,EAAAC,cAAC8G,EAAD,CAAW7H,SAAUY,EAAKf,MAAMG,SAAUC,SAAUW,EAAKf,MAAMI,cAL3G,gBAKuI+H,EACrInH,EAAAC,EAAAC,cAAC6L,EAAA,EAAD,CAAOC,KAAK,kBAAkBG,OAAQ,SAAA3N,GAAK,OAAIwB,EAAAC,EAAAC,cAACmM,GAAD,CAAalN,SAAUY,EAAKf,MAAMG,SAAUC,SAAUW,EAAKf,MAAMI,cANlH,gBAM8IiM,GAN9I,MAOErL,EAAAC,EAAAC,cAAC6L,EAAA,EAAD,CAAOC,KAAK,cAAcG,OAAQ,SAAA3N,GAAK,OAAIwB,EAAAC,EAAAC,cAACoM,EAAD,CAAYnN,SAAUY,EAAKf,MAAMG,SAAUC,SAAUW,EAAKf,MAAMI,cAC3GY,EAAAC,EAAAC,cAAC6L,EAAA,EAAD,CAAOC,KAAK,UAAYG,OAAQ,SAAA3N,GAAK,OAAGwB,EAAAC,EAAAC,cAACqM,EAAD,CAAQpN,SAAUY,EAAKf,MAAMG,SAAUC,SAAUW,EAAKf,MAAMI,cARtG,eAQiI4I,EARjI,KASEhI,EAAAC,EAAAC,cAAC6L,EAAA,EAAD,CAAOC,KAAK,WAAWC,UAAW9D,IAClCnI,EAAAC,EAAAC,cAAC6L,EAAA,EAAD,CAAOC,KAAK,qBAAqBC,UAAWrD,IAC5C5I,EAAAC,EAAAC,cAAC6L,EAAA,EAAD,CAAOC,KAAK,eAAeG,OAAQ,SAAA3N,GAAK,OAAGwB,EAAAC,EAAAC,cAACsM,EAAD,CAAarN,SAAUY,EAAKf,MAAMG,SAAUC,SAAUW,EAAKf,MAAMI,cAC5GY,EAAAC,EAAAC,cAAC6L,EAAA,EAAD,CAAOC,KAAK,aAAaG,OAAQ,SAAA3N,GAAK,OAAGwB,EAAAC,EAAAC,cAACuM,EAAD,CAAWtN,SAAUY,EAAKf,MAAMG,SAAUC,SAAUW,EAAKf,MAAMI,cACxGY,EAAAC,EAAAC,cAAC6L,EAAA,EAAD,CAAOC,KAAK,YAAaG,OAAQ,SAAA3N,GAAK,OAAGwB,EAAAC,EAAAC,cAACwM,GAAD,CAAUvN,SAAUY,EAAKf,MAAMG,SAAUC,SAAUW,EAAKf,MAAMI,cACvGY,EAAAC,EAAAC,cAAC6L,EAAA,EAAD,CAAOC,KAAK,sBAAsBC,UAAWd,KAC7CnL,EAAAC,EAAAC,cAAC6L,EAAA,EAAD,CAAOC,KAAK,mBAAmBC,UAAWb,KAC1CpL,EAAAC,EAAAC,cAAC6L,EAAA,EAAD,CAAOC,KAAK,WAAWG,OAAQ,SAAA3N,GAAK,OAAGwB,EAAAC,EAAAC,cAACyM,EAAD,CAASxN,SAAUY,EAAKf,MAAMG,SAAUC,SAAUW,EAAKf,MAAMI,cAhBtG,eAgBiI4I,EAhBjI,KAiBEhI,EAAAC,EAAAC,cAAC6L,EAAA,EAAD,CAAOC,KAAK,SAASC,UAAWV,KAChCvL,EAAAC,EAAAC,cAAC6L,EAAA,EAAD,CAAOC,KAAK,OAAOC,UAAWT,KAC9BxL,EAAAC,EAAAC,cAAC6L,EAAA,EAAD,CAAOC,KAAK,WAAWC,UAAWR,KAClCzL,EAAAC,EAAAC,cAAC6L,EAAA,EAAD,CAAOC,KAAK,WAAWG,OAAQ,SAAA3N,GAAK,OAAGwB,EAAAC,EAAAC,cAAC0M,EAAD,CAASzN,SAAUY,EAAKf,MAAMG,SAAUC,SAAUW,EAAKf,MAAMI,cACpGY,EAAAC,EAAAC,cAAC6L,EAAA,EAAD,CAAOC,KAAK,QAAQG,OAAQ,SAAA3N,GAAK,OAAGwB,EAAAC,EAAAC,cAACyF,EAAD,CAAMxG,SAAUY,EAAKf,MAAMG,SAAUC,SAAUW,EAAKf,MAAMI,cAC9FY,EAAAC,EAAAC,cAAC6L,EAAA,EAAD,CAAOC,KAAK,OAAOG,OAAQ,SAAA3N,GAAK,OAAGwB,EAAAC,EAAAC,cAAC2M,EAAD,CAAK1N,SAAUY,EAAKf,MAAMG,SAAUC,SAAUW,EAAKf,MAAMI,cAC5FY,EAAAC,EAAAC,cAAC6L,EAAA,EAAD,CAAOC,KAAK,aAAaG,OAAQ,SAAA3N,GAAK,OAAGwB,EAAAC,EAAAC,cAAC4M,GAAD,CAAW3N,SAAUY,EAAKf,MAAMG,SAAUC,SAAUW,EAAKf,MAAMI,cACxGY,EAAAC,EAAAC,cAAC6L,EAAA,EAAD,CAAOE,UAAWnH,KAEpB9E,EAAAC,EAAAC,cAAC6M,EAAD,eAzDY9I,aCtBE+I,QACW,cAA7BzD,OAAO0D,SAASC,UAEe,UAA7B3D,OAAO0D,SAASC,UAEhB3D,OAAO0D,SAASC,SAASrE,MACvB,2DCTNsE,IAAShB,OAAOnM,EAAAC,EAAAC,cAACkN,GAAD,MAAShJ,SAASC,eAAe,SDkH3C,kBAAmBgJ,WACrBA,UAAUC,cAAcC,MAAMzH,KAAK,SAAA0H,GACjCA,EAAaC","file":"static/js/main.8aec78b8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.569b8f1f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mountain.97927ff4.png\";","module.exports = __webpack_public_path__ + \"static/media/info.99950a0d.png\";","module.exports = __webpack_public_path__ + \"static/media/contact.6d911ade.jpg\";","import React, { Component } from 'react'\nimport { NavLink } from 'react-router-dom';\nimport logo from './logo.jpg';\nimport jsSHA from 'jssha'\nimport axios from 'axios'\n\nclass Login extends Component {\n  // {/* The constructor for a React Component is called before it is mounted. */}\n  constructor(props) {\n   {/* Pass props to the constructor by super. */}\n   super(props);\n   {/* Initalise the local state by assigning objects to this.state. */}\n   this.state = { items: [], text: '' };\n   this.state = {\n     // {/* Passing an empty string as a value for username and password. */}\n     username: \" \",\n     password: \" \",\n     // {/* Passing fasle as a value. */}\n     subbmitted: false,\n     // {/* Passing true as a value. */}\n     showMe:true\n   };\n\n   {/**\n   * Bind the value of the control to the currrent value of the state.\n   * There must be a bound so that if there is a value and something that causes the control to re-render,\n   it gets the correct value out of the state.\n   */}\n   this.handleChange = this.handleChange.bind(this);\n   this.handleSubmit = this.handleSubmit.bind(this);\n   this.forgot = this.forgot.bind(this);\n   this.doLogin = this.doLogin.bind(this);\n }\n\n forgot(e){\n     prompt('Enter you email adress and follow the link ')\n}\n\n\n  render() {\n    return(\n<div>\n<div style = {{display : 'inline-block'}}>\n  <img src={logo} className=\"logo\" />\n</div>\n{\n  this.state.showMe?\n      <div className=\"login-container\" style={this.logStyle}>\n            <input\n              id=\"username\"\n              onChange={e=>(this.setState({username: e.target.value.trim()}))}\n              value={this.state.username}\n              />\n            <input\n              id=\"password\"\n              onChange={e=>(this.setState({password: e.target.value.trim()}))}\n              value={this.state.password} type=\"password\"\n            />\n            <button className=\"button\" onClick={this.doLogin}> Login </button>\n            <div className =\"login-container\" style={{textAlign: 'right' }}>\n              <button className='button' onClick={this.forgot}>Forgot Password</button>\n              <NavLink to=\"/register1\" className=\"button\"> Register </NavLink>\n            </div>\n      </div>\n      :null\n    }\n\n    {\n      !this.state.showMe?\n      <div className =\"login-container\" style={{textAlign: 'right' }}>\n        <NavLink to=\"/\" className=\"button\" onClick={!this.login}> Log Out </NavLink>\n      </div>\n    :null\n  }\n\n    <div className =\"navbar\">\n     <NavLink to=\"/\" className=\"navButton\"> Home </NavLink>\n     <NavLink to=\"/support\" className=\"navButton\"> Online Support </NavLink>\n     {\n       !this.state.showMe?\n       <div>\n         <NavLink to=\"/payments\" className=\"navButton\"> Payments </NavLink>\n         <NavLink to=\"/transfers\" className=\"navButton\"> Transfers </NavLink>\n         <NavLink to=\"/utilities\" className=\"navButton\"> Utilities </NavLink>\n         <NavLink to=\"/MyAccounts\" className=\"navButton\"> Accounts </NavLink>\n        </div>\n        :null\n      }\n    </div>\n  </div>\n    )\n  }\n\n\n  // {/** Login method. */}\n  doLogin(e){\n    {/* Props is used to pass the username and password down the component tree from the parent (App.js) to child (MyAccounts.js) */}\n    const user = this.state.username;\n    const password = this.state.password;\n    const hmac = new jsSHA('SHA-256', 'TEXT');\n    hmac.setHMACKey(password, 'TEXT');\n    hmac.update(user);\n    hmac.update(Date.now().toString(36).substring(0, 4));\n    const token = `${hmac.getHMAC('HEX')}%${user}`;\n    const api = axios.create({\n      // {/** Instantiate the network request. */}\n      baseURL: 'http://45.77.58.134:8080',\n      headers: { 'Authorization': 'Bearer ' + token }\n    });\n    (async () => {\n\n      let res;\n      try {\n        // {/* Retrieve clients for authenticated user. */}\n        res = await api.get('/clients');\n        // {/* Stores the username and password. */}\n        this.props.store({username: this.state.username, password: this.state.password})\n\n    } catch {\n        res = false;\n    }\n      console.log(res);\n\n      if(res != false) {\n        this.setToken();\n        this.refresh = setInterval(()=> this.setToken(),1000);\n            this.setState({showMe:false});\n        alert('Welcome ' + user  );\n\n      }\n      else{\n        alert('Incorrect username or Password. Please try again')\n      }\n      return(\n        <div> </div>\n      )\n\n    })();\n  }\n\n  setToken(){\n    const hmac = new jsSHA('SHA-256', 'TEXT');\n    hmac.setHMACKey(this.state.password, 'TEXT');\n    hmac.update(this.state.username);\n    hmac.update(Date.now().toString(36).substring(0, 4));\n    const token = `${hmac.getHMAC('HEX')}%${this.state.usrename}`;\n    if(this.state.token !==token){\n      this.setState({token: token});\n      console.log('Update Token')\n    }\n  }\n\n  // {/* A function that update text state. */}\n  handleChange(e) {\n    this.setState({ text: e.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (!this.state.text.length) {\n      return;\n    }\n    const newItem = {\n      text: this.state.text,\n\n    };\n    this.setState(state => ({\n      items: state.items.concat(newItem),\n      text: ''\n    }));\n}\n}\n\nexport default Login\n","import React, { Component } from 'react'\nimport background from './mountain.png';\nimport { NavLink } from 'react-router-dom';\nimport icon from './info.png';\nimport contact from './contact.jpg';\nimport Login from'./login';\nimport Popup from 'react-popup';\n\n\nclass Welcome extends Component {\n  constructor(props){\n    super(props)\n    this.popUp = this.popUp.bind(this);\n  }\n\n  popUp(e) {\n    var popup = document.getElementById(\"myPopup\");\n        popup.classList.toggle(\"show\");\n    }\n\n  // {/* Render method returns the background image, welcome message and two icons on the screen. */}\n  render () {\n    return (\n      <div>\n\n        <div>\n          <img  src={background} className=\"img\"/>\n          <div className=\"center\">\n            <center>\n              <h1 >WELCOME TO THE BANK OF THE SUN</h1><br/>\n              <p> - bringing sunshine to you - </p>\n            </center><br/>\n            <center>\n            <div className=\"popup\" onClick={this.popUp}><img id=\"contact\" className=\"icon\" src={contact}/>\n              <span className=\"popuptext\" id=\"myPopup\">Land-line: (021) 590 6625<br/><br/>E-mail: bankofthesun@sunny.com<br/><br/>Facebook: facebook</span>\n            </div>\n          <NavLink to=\"/support\"><img className=\"icon \" id=\"info\" src={icon}/></NavLink>\n            </center>\n\n          </div>\n        </div>\n      </div>\n\n);\n\n}\n}\n\nexport default Welcome;\n","import React, { Component } from 'react'\nimport Welcome from './welcome';\nimport Login from './login';\n\nimport Fpassword from './forgotpassword';\n\nclass Home extends Component {\n  // {/* Render method returns the home page on the screen. */}\n  render () {\n    return (\n      <div>\n      <Welcome/>\n      </div>\n    )\n  }\n}\n\nexport default Home\n","import React, { Component } from 'react'\n\nclass Fpassword extends Component {\n  forgotStyle ={\n    position: 'relative',\n    top:'22px',\n    right:'2px'\n  }\n\n  // {/* Render method returns a forgot password button on the screen. */}\n  render () {\n    return(\n      <div className=\"login-container\">\n      <button style ={this.forgotStyle}>Forgot Password</button>\n      </div>\n    )\n  }\n}\n\nexport default Fpassword\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nclass Support extends Component {\n  // {/* Render method returns a second navbar and the bank's regulations the screen. */}\n  render () {\n    return (\n      <div>\n      <div className='navbar2'>\n      <NavLink to=\"/support\" className=\"navButton\"> Banking Regulations </NavLink>\n      <NavLink to=\"/legal\" className=\"navButton\"> Legal </NavLink>\n      <NavLink to=\"/faq\" className=\"navButton\"> FAQ </NavLink>\n      <NavLink to=\"/contact\" className=\"navButton\"> Contact US </NavLink>\n      </div>\n            <div className=\"content\">\n              <div className=\"Once-off Payments w3-container city\">\n                <h1>Banking Regulations</h1>\n                1. What is the legal framework for banking regulation?<br/><br/>\n                South Africa has a well-established banking regulatory framework. The banking capital requirements in the Banks Act, 1990 (Banks Act) and its<br/>\n                subordinate legislation, together with the exchange control regulation enforced in South Africa by the national treasury, meant that South <br/>\n                African banks were largely shielded from the 2008 global financial crises.<br/>\n                The Financial Sector Regulation Act, 2017 (FSR Act) was signed into law on 21 August 2017, giving effect to the implementation of the <br/>\n                \"Twin Peaks\" model of regulation in the South African financial sector. The Minister of Finance determined that the FSR Act (with the exception<br/>\n                of a few transitional periods) would commence on 1 April 2018. As a result of the commencement of the FSR Act, and in particular of section<br/>\n                290, read with Schedule 4, of the FSR Act, the Banks Act has been amended to replace references to the Registrar of Banks at the Bank <br/>\n                Supervision Department of the South African Reserve Bank (SARB) with the newly established Prudential Authority (PA). Accordingly, the <br/>\n                PA is responsible for supervising the operation of banks in South Africa, and ensuring compliance by banks with the Banks Act.<br/>\n                Regulatory authorities<br/><br/>\n                2. What are the regulatory authorities for banking regulation in your jurisdiction? What is the role of the central bank in banking regulation?<br/><br/>\n                Lead bank regulators<br/>\n                The SARB as the central bank of South Africa is primarily responsible for overseeing banks. The PA, as a juristic person operating within<br/>\n                the administration of the SARB, supervises the domestic activities of all banks, representative offices and branches of foreign banks, and <br/>\n                the foreign activities of South African banks. A key objective of the PA is to promote the soundness of the domestic banking system, throug<br/>\n                h effective and efficient application of international regulatory and supervisory standards and best practice. To keep informed of <br/>\n                international regulatory and supervisory developments, the PA participates in, and contributes to, various international forums.<br/>\n                Other authorities<br/>\n                The Financial Intelligence Centre monitors and gives guidance to banks as accountable institutions, in relation to their know-your-client<br/>\n                duties and compliance with the Financial Intelligence Centre Act, 2001.<br/>\n                The Financial Services Board which was established under the Financial Services Board Act, 1990, has now been replaced with the Financial<br/>\n                Service Conduct Authority (FSCA), as established on 1 April 2018 under the FSR Act. The FSCA is a dedicated market conduct regulator for <br/>\n                the financial services sector. The Financial Advisory and Intermediary Services Act, 2002 (FAIS) regulates the provision of financial <br/>\n                services in relation to a number of products, including deposits. For banks to market deposits in South Africa, there is a registration <br/>\n                requirement under FAIS and compliance is overseen by the FSCA.<br/>\n                The National Credit Regulator (NCR) is established under the National Credit Act, 2005 (NCA) and is responsible for the regulation of the<br/>\n                South African credit industry. The NCA requires the NCR to promote the development of an accessible credit market, particularly to address <br/>\n                the needs of historically disadvantaged persons, low income persons and remote, isolated or low density communities. It is also tasked with <br/>\n                the registration of credit providers, credit bureaux and debt counsellors. To the extent that a bank in South Africa wants to advance credit <br/>\n                to natural persons, it must be registered as a credit provider and subject to the oversight of the NCR.<br/>\n                Central bank<br/>\n                The SARB is the central bank of South Africa, and its primary objective is the achievement and maintenance of price stability in the <br/>\n                interest of sustainable economic growth. The relationship between the SARB and the state is that between banker and client, as ordinarily<br/>\n                understood in the law of banking and bills of exchange. The SARB recognises the need to pursue balanced economic development and growth,<br/>\n                based on a market system, private and social initiatives, effective competition and social fairness.<br/>\n                The South African Reserve Bank Act, 1989 (SARB Act), together with the Banks Act, the Mutual Banks Act, 1993 and the FSR Act, assigns <br/>\n                responsibility for the registration and supervision of banks to the SARB. These Acts provide that the powers for bank registration and <br/>\n                supervision are assigned to the PA. Together with the regulations issued under the Banks Act, these Acts provide a comprehensive legal framework<br/>\n                for banking supervision in South Africa. Under the Acts, the PA, as a juristic person under the administration of the SARB, is accountable to <br/>\n                the Governor of the SARB, and also has a direct reporting line to the Minister.<br/>\n                The Governor or a Deputy Governor can instruct the PA to cause the affairs of an unregistered person suspected of carrying on the business of a <br/>\n                bank or mutual bank to be inspected in accordance with the provisions of Part 4 of Chapter 9 of the FSR Act (section 12, SARB Act).<br/>\n                Others<br/>\n                SARB is also a member of and contributor to various international governance bodies such as the G20, the International Monetary Fund (IMF), the <br/>\n                Bank for International Settlements (BIS) and the Committee of Central Bank Governors (CCBG) in the Southern African Development Community (SADC). <br/>\n                SARB can develop the financial sector, in accordance with member commitments to global regulatory regimes.<br/>\n                Bank licences<br/><br/>\n                3. What licence(s) are required to conduct banking services and what activities do they cover?<br/><br/>\n                An entity cannot conduct the business of a bank unless it is a public company registered as a bank under the Banks Act (section 11(1), Banks Act).<br/>\n                To register:<br/>\n              </div>\n            </div>\n            </div>\n          )\n        }\n      }\n\nexport default Support\n","import React, { Component } from 'react'\n\n// {/* Render method returns an error message on the screen. */}\nclass Error extends Component {\n  render () {\n    return(\n      <div>\n      <p>Error: URL path does not exist!!!!!!</p>\n      </div>\n    )\n  }\n}\n\nexport default Error\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport logo from './logo.jpg';\n\nclass Navigation extends Component {\n  // {/* Render method returns a logo and navbar. */}\n  render () {\n    return (\n      <div>\n      <header>\n      <div style ={this.divStyle}>\n        <img src={logo} className=\"logo\" />\n      </div>\n      </header>\n     <div className = \"navbar\">\n     <NavLink to=\"/\" className=\"Button\"> Home </NavLink>\n     <NavLink to=\"/support\" className=\"Button\"> Online Support </NavLink>\n     <NavLink to=\"/payments\" className=\"Button\"> Payments </NavLink>\n     <NavLink to=\"/transfers\" className=\"Button\"> Transfers </NavLink>\n     <NavLink to=\"/utilities\" className=\"Button\"> Utilities </NavLink>\n     <NavLink to=\"/MyAccounts\" className=\"Button\"> Accounts </NavLink>\n      </div>\n      </div>\n    )\n  }\n}\n\nexport default Navigation\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport axios from 'axios';\nimport jsSha from 'jssha';\n\nclass Payments extends Component {\n// {/* The constructor for a React Component is called before it is mounted. */}\nconstructor(props) {\n  // {/* Pass props to the constructor by super. */}\n  super(props);\n  // {/* Initalise the local state by assigning objects to this.state. */}\n  this.state ={\n    // {/* Passing an array as a value for the objects below. */}\n    clients: [],\n    transactions: [],\n    accounts: [],\n    // {/* Passing an empty string as a value for the objects below. */}\n    time: '',\n    type: '',\n    dest: '',\n    amount: '',\n    src: '',\n    ref: '',\n  }\n\n  {/**\n  * Bind the value of the control to the currrent value of the state.\n  * There must be a bound so that if there is a value and something that causes the control to re-render,\n  it gets the correct value out of the state.\n  */}\n  this.componentDidMount=this.componentDidMount.bind(this)\n  this.onChange = this.onChange.bind(this)\n  this.Payment = this.Payment.bind(this)\n}\n\n// {/* Invoked immediately after a component is mounted. */}\ncomponentDidMount() {\n         // /* Props is used to pass the username and password down the component tree from the parent (App.js) to child (MyAccounts.js) */\n         const user = this.props.username; //'blackfish787';\n         const password = this.props.password; //'lestat';\n         const hmac = new jsSha('SHA-256', 'TEXT');\n         hmac.setHMACKey(password, 'TEXT');\n         hmac.update(user);\n         hmac.update(Date.now().toString(36).substring(0, 4));\n         const token = `${hmac.getHMAC('HEX')}%${user}`;\n         const api = axios.create({\n           // {/** Instantiate the network request. */}\n           baseURL: 'http://45.77.58.134:8080',\n           headers: { 'Authorization': 'Bearer ' + token }\n         });\n\n         (async () => {\n           // {/* Retrieve clients for authenticated user. */}}\n           const res = await api.get('/clients');\n           {/* Calls setState() immediately in componentDidMount().\n             * setSate() updates the clients state with client data.\n             * Passing clients object to setState().\n           */}\n           this.setState({clients: res.data});\n           // {/*  Retrieve accounts for specified client UUID. */}\n           const acc = await api.get(`/accounts/` + this.state.clients[0][\"_id\"])\n           {/* Calls setState() immediately in componentDidMount().\n             * setSate() updates the accounts state with account data.\n             * Passing accounts object to setState().\n           */}\n           this.setState({accounts: acc.data})\n            // {/*  Retrieves all( .*) transactions for given accounts based on the clients ID. */}\n           const transactions = await api.get(`/transactions/${acc.data[0]._id}/.*`)\n           {/* Calls setState() immediately in componentDidMount().\n             * setSate() updates the transactions state with transactions data.\n             * Passing transactions object to setState().\n           */}\n           this.setState({transactions: transactions.data});\n           //console.log(acc);\n           //console.log(res);\n\n         })()\n  }\n\n  Payment(){\n      // /* Props is used to pass the username and password down the component tree from the parent (App.js) to child (MyAccounts.js) */\n      const user = this.props.username; //'blackfish787';\n      const password = this.props.password; //'lestat';\n      const hmac = new jsSha('SHA-256', 'TEXT');\n      hmac.setHMACKey(password, 'TEXT');\n      hmac.update(user);\n      hmac.update(Date.now().toString(36).substring(0, 4));\n      const token = `${hmac.getHMAC('HEX')}%${user}`;\n      const api = axios.create({\n        // {/** Instantiate the network request. */}\n        baseURL: 'http://45.77.58.134:8080',\n        headers: { 'Authorization': 'Bearer ' + token }\n      });\n\n        // {/** Post a new transaction, requires a body object as below. */}\n        api.post('/transactions', {\n          \"time\": '',\n          \"type\": 'debit',\n          \"src\": this.state.src,\n          \"dest\": this.state.dest,\n          \"amount\": -(this.state.amount),\n          \"ref\": this.state.ref,\n\n        }).then(function (response){\n          console.log(response);\n        }).catch(function (error){\n          console.log(error);\n        });\n\n\n        }\n\n        onChange (e) {\n          this.setState({[e.target.name]: e.target.value}); // or this.setState({amount: e.target.value})  only works for individual inputs\n          console.log(this.state.src)\n          }\n\n        // {/* Render method returns a second navbar, textboxes and dropdown on the screen for user to perform payments. */}\n        render () {\n          return (\n            <div>\n              <div className=\"navbar2\">\n                <NavLink to=\"/payments\" className=\"navButton\"> Once-off Payments </NavLink>\n                <NavLink to=\"/scheduled\" className=\"navButton\"> Scheduled Payments </NavLink>\n\n                <div className = \"dropdown\">\n                  <button className = \"dropbtn\"> Pay Beneficiary <i className = \"fa fa-caret-down\"></i></button>\n                <div className = \"dropdown-content\">\n                <NavLink to=\"/beneficiary\" className=\"navButton\"> Add New Beneficiary </NavLink>\n                <NavLink to=\"/existing\" className=\"navButton\"> Existing Beneficiaries </NavLink>\n              </div>\n              </div>\n                <NavLink to=\"/history\" className=\"navButton\"> Payment History </NavLink>\n              </div>\n            <div className=\"content\">\n              <div id=\"Once-off Payments\" className=\"w3-container city\">\n                <h1>Once-off Payments</h1>\n                  <div id=\"payments\">\n                    <h2> 1. Who would you like to pay? </h2>\n                    <p> Select Destination Account:\n                      <select className=\"imput\"  onChange={this.onChange} name=\"dest\">\n                        <option value=\"\">Select:</option>\n                        <option value=\"Savings\">Savings</option>\n                        <option value=\"Cheque\">Cheque</option>\n                        <option value=\"Debit\">Debit</option>\n                        <option value=\"Investment\">Special Investment</option>\n                        <option value=\"Credit\">Credit</option>\n                      </select></p>\n                    <h2> 2. Payment Details </h2>\n                     <p>Enter amount to pay: <input className=\"imput\"  onChange={this.onChange} name=\"amount\"/></p>\n                     <p> Select Source Account:\n                       <select className=\"imput\" name=\"src\" onChange={this.onChange}>\n                       {this.state.accounts.map(x =>\n                       <option value={x._id}> {`${x.description}`}</option>\n                       )}\n                       </select></p>\n                     <p> Reference: <input className=\"imput\"  onChange={this.onChange} name=\"ref\"/></p>\n              </div>\n                <div className=\"text\" >\n                  <p><b>Please note</b></p>\n                  <p>Your payment may take up to 24 hours to reflect on Bank of the Sun accounts, and up to 2 business days with other banks. </p>\n                </div>\n                <button className='button' onClick={this.Payment}>Pay</button><br/><br/>\n                  </div>\n                </div>\n            </div>\n          )\n        }\n      }\n\n      export default Payments\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport jsSha from 'jssha';\nimport axios from 'axios';\nimport Login from './login'\n\nclass Transfers extends Component {\n  // {/* The constructor for a React Component is called before it is mounted. */}\n  constructor(props) {\n    // {/* Pass props to the constructor by super. */}\n    super(props);\n    // {/* Initalise the local state by assigning objects to this.state. */}\n    this.state={\n      // {/* Passing an empty string as a value for the objects below. */}\n      amount: '',\n      ref: '',\n      dest: '',\n      src: '',\n      type:'',\n      time: '',\n      // {/* Passing an array as a value for the objects below. */}\n      accounts:[],\n      clients: [],\n      transactions: [],\n    }\n\n    {/**\n    * Bind the value of the control to the currrent value of the state.\n    * There must be a bound so that if there is a value and something that causes the control to re-render,\n    it gets the correct value out of the state.\n    */}\n    this.onChange=this.onChange.bind(this)\n    this.Payment=this.Payment.bind(this)\n  }\n\n\n  // {/* Invoked immediately after a component is mounted. */}\n  componentDidMount() {\n           {/* Props is used to pass the username and password down the component tree from the parent (App.js) to child (MyAccounts.js) */}\n           const user = this.props.username; //'blackfish787';\n           const password = this.props.password; //'lestat';\n           const hmac = new jsSha('SHA-256', 'TEXT');\n           hmac.setHMACKey(password, 'TEXT');\n           hmac.update(user);\n           hmac.update(Date.now().toString(36).substring(0, 4));\n           const token = `${hmac.getHMAC('HEX')}%${user}`;\n           const api = axios.create({\n             // {/** Instantiate the network request. */}\n             baseURL: 'http://45.77.58.134:8080',\n             headers: { 'Authorization': 'Bearer ' + token }\n           });\n\n           (async () => {\n             // {/* Retrieve clients for authenticated user. */}}\n             const res = await api.get('/clients');\n             {/* Calls setState() immediately in componentDidMount().\n               * setSate() updates the clients state with the client data.\n               * Passing clients object to setState().\n             */}\n             this.setState({clients: res.data});\n             // {/*  Retrieve accounts for specified client UUID. */}\n             const acc = await api.get(`/accounts/` + this.state.clients[0][\"_id\"])\n             {/* Calls setState() immediately in componentDidMount().\n               * setSate() updates the accounts state with account data.\n               * Passing accounts object to setState().\n             */}\n             this.setState({accounts: acc.data})\n             // {/*  Retrieves all( .*) transactions for given accounts based on the clients ID. */}\n             const transactions = await api.get(`/transactions/${acc.data[0]._id}/.*`)\n             {/* Calls setState() immediately in componentDidMount().\n               * setSate() updates the transactions state with transactions data.\n               * Passing transactions object to setState().\n             */}\n             this.setState({transactions: transactions.data});\n           })()\n    }\n\n\n    Payment(){\n      {/* Props is used to pass the username and password down the component tree from the parent (App.js) to child (MyAccounts.js) */}\n        const user = this.props.username; //'blackfish787';\n        const password = this.props.password; //'lestat';\n        const hmac = new jsSha('SHA-256', 'TEXT');\n        hmac.setHMACKey(password, 'TEXT');\n        hmac.update(user);\n        hmac.update(Date.now().toString(36).substring(0, 4));\n        const token = `${hmac.getHMAC('HEX')}%${user}`;\n        const api = axios.create({\n          // {/** Instantiate the network request. */}\n          baseURL: 'http://45.77.58.134:8080',\n          headers: { 'Authorization': 'Bearer ' + token }\n        });\n\n         // {/** Post a new transaction, requires a body object as below. */}\n         api.post('/transactions', {\n             time: '',\n             type: 'debit',\n             src: this.state.src,\n             dest: this.state.dest,\n             amount: -(this.state.amount),\n             ref: this.state.ref,\n             });\n\n           // {/** Post a new transaction, requires a body object as below. */}\n           api.post('/transactions', {\n              time: '',\n              type: 'credit',\n              src: this.state.dest,\n              dest: this.state.src,\n              amount: this.state.amount,\n              ref: this.state.ref,\n              })\n         };\n\n\n onChange(e){\n  this.setState({[e.target.name]: e.target.value});\n  console.log(this.state.src);\n}\n\n// {/* Render method returns a second navbar, textboxes and a dropdown on the screen for user to make an inter-account transfer. */}\n  render () {\n    return (\n      <div>\n      <div className=\"navbar2\">\n        <NavLink to=\"/transfers\" className=\"navButton\"> Inter-Account Transfers </NavLink>\n        </div>\n        <div className=\"content\">\n        <div id=\"payments\">\n          <h1 style={this.h1Style}>Inter-Account Transfers</h1>\n            <h2> 1. Accounts </h2>\n            <p> Account From:  </p>\n              <select className=\"imput\" name=\"src\"  onChange={this.onChange}>\n              {this.state.accounts.map(x =>\n                <option value={x._id}>{`${x.description}`}</option>\n              )}\n              </select>\n              <p> Account To:  </p>\n                <select className=\"imput\" name=\"dest\"  onChange={this.onChange}>\n                {this.state.accounts.map(x =>\n                  <option value={x._id}>{`${x.description}`}</option>\n                )}\n                </select>\n            <h2> 2. Amount </h2>\n            <p> Enter amount to transfer: <input className=\"imput\" onChange={this.onChange} name=\"amount\" /></p>\n            <h2> 3. References </h2>\n            <p> To Reference: <input className=\"imput\" onChange={this.onChange} name=\"ref\" /></p>\n            <p><b>Please note</b></p>\n            <p>Your transfer may take up to 24 hours to reflect in your account.</p>\n            <button className='button' onClick={this.Payment}>Transfer</button><br/><br/>\n      </div>\n    </div>\n    </div>\n    )\n  }\n}\n\n export default Transfers\n","import React, { Component } from 'react'\nimport { NavLink } from 'react-router-dom';\n\n\nclass Footer extends Component {\n  // {/* Render method returns a footer on the screen. */}\n  render () {\n    return (\n      <footer >\n        <center>\n          <p><a href ='support.html'>Banking Regulations</a> | <a href ='supportLegal.html'>Legal</a>  | <a href ='supportFaq.html'>FAQ</a>  | <a href ='supportContact.html'>Contact us</a></p>\n          <p> © Copyright. Bank Of The Sun Limited. All rights reserved.</p>\n          <a href=\"https://www.facebook.com\"><i id=\"media\" class=\"fab fa-facebook-f fa-3x\"></i></a>\n          <a href=\"https://twitter.com\"><i id=\"media\"  class=\"fab fa-twitter fa-3x\"></i></a>\n          <a href=\"https://www.instagram.com/?hl=en\"><i id=\"media\"  class=\"fab fa-instagram fa-3x\"></i></a>\n        </center>\n      </footer>\n    )\n  }\n}\nexport default Footer\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Footer from './footer';\nimport Airtime from './Airtime';\nimport Data from './data';\nimport jsSHA from 'jssha';\nimport axios from 'axios';\nimport Utilities from \"./utilities\";\n\nclass SMS  extends Component {\n  // {/* The constructor for a React Component is called before it is mounted. */}\n  constructor(props) {\n    // {/* Pass props to the constructor by super. */}\n    super(props);\n    // {/* Initalise the local state by assigning an object to this.state. */}\n    this.state={\n      // {/* Passing an 0 as a value for account. */}\n      amount: 0,\n    }\n\n    {/**\n    * Bind the value of the control to the currrent value of the state.\n    * There must be a bound so that if there is a value and something that causes the control to re-render,\n    it gets the correct value out of the state.\n    */}\n    this.selectFrom = this.selectFrom.bind(this)\n    this.componentDidMount = this.componentDidMount.bind(this)\n  }\n\n  // {/* Invoked immediately after a component is mounted. */}\n  componentDidMount() {\n         {/* Props is used to pass the username and password down the component tree from the parent (App.js) to child (MyAccounts.js) */}\n         const user = this.props.username; //'blackfish787';\n         const password = this.props.password; //'lestat';\n         const hmac = new jsSHA('SHA-256', 'TEXT');\n         hmac.setHMACKey(password, 'TEXT');\n         hmac.update(user);\n         hmac.update(Date.now().toString(36).substring(0, 4));\n         const token = `${hmac.getHMAC('HEX')}%${user}`;\n         const api = axios.create({\n           // {/** Instantiate the network request. */}\n           baseURL: 'http://45.77.58.134:8080',\n           headers: { 'Authorization': 'Bearer ' + token }\n\n         });\n         (async () => {\n           // {/* Retrieve clients for authenticated user. */}}\n           const res = await api.get('/clients');\n           // {/*  Retrieve accounts for specified client UUID. */}\n           const acc = await api.get(`/accounts/${res.data[0]._id}`)\n           // {/*  Retrieves all( .*) transactions for given accounts based on the clients ID. */}\n           let trans = await api.get(`/transactions/${acc.data[0]._id}/.*`)\n\n          // {/** Post a new transaction, requires a body object as below. */}\n           await api.post(\"/transactions\", {\n             \"type\": \"SMS\",\n             \"src\": acc.data[0]._id,\n             \"dest\": acc.data[0]._id,\n             \"amount\": -(this.state.amount),\n             \"ref\": \"SMS\"\n             });\n\n           // {/*  Retrieves all( .*) transactions for given accounts based on the clients ID. */}\n           trans = await api.get(`/transactions/${acc.data[0]._id}/.*`)\n           console.log(trans);\n         })();\n       }\n\n       selectFrom (event) {\n         this.setState ({\n           amount: event.target.value\n         })\n       }\n\n\nonChange(e){\n  this.setState({[e.target.name]: e.target.value});\n  console.log(this.state.src);\n}\n\n  // {/* Render method returns a second navbar and a dropwdown on the screen so user can choose how manny sms's to purchase. */}\n  render () {\n    return (\n      <div>\n      <Utilities/>\n                <div className=\"content\">\n                <div id=\"payments\">\n                    <div className=\"blue box\">\n                      <p> Choose a Recharge Amount:\n                        <select className=\"imput\" value={this.state.amount} onChange={this.selectFrom}>\n                          <option value=\"\">Select:</option>\n                          <option value=\"10\">30 SMSs at R10.00</option>\n                          <option value=\"17\">50 SMSs at R17.00</option>\n                          <option value=\"50\">100 SMSs at R30.00</option>\n                          <option value=\"50\">200 SMSs at R50.00</option>\n                          <option value=\"75\">300 SMSs at R75.00</option>\n                          <option value=\"114\">500 SMSs at R114.00</option>\n                          <option value=\"420\">2000 SMSs at R420.00</option>\n                        </select>\n                      </p>\n                    </div>\n                    {/* ComponentDidMount() renders user input to API. */}\n                    <button className='button' onClick={this.componentDidMount}>Buy</button><br/><br/>\n                </div>\n              </div>\n          </div>\n    )\n  }\n}\n\nexport default SMS\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Footer from './footer';\nimport Airtime from './Airtime';\nimport SMS from './sms';\nimport jsSHA from 'jssha';\nimport axios from 'axios';\nimport Utilities from \"./utilities\";\n\nclass Data  extends Component {\n  // {/* The constructor for a React Component is called before it is mounted. */}\n  constructor(props) {\n    // {/* Pass props to the constructor by super. */}\n    super(props);\n    // {/* Initalise the local state by assigning an object to this.state. */\n    this.state={\n      // {/* Passing a 0 as a value for amount. */}\n      amount: 0,\n    }\n\n    {/**\n    * Bind the value of the control to the currrent value of the state.\n    * There must be a bound so that if there is a value and something that causes the control to re-render,\n    it gets the correct value out of the state.\n    */}\n    this.selectFrom = this.selectFrom.bind(this)\n    this.componentDidMount = this.componentDidMount.bind(this)\n  }\n\n  // {/* Invoked immediately after a component is mounted. */}\n  componentDidMount() {\n        {/* Props is used to pass the username and password down the component tree from the parent (App.js) to child (MyAccounts.js) */}\n         const user = this.props.username; //'blackfish787';\n         const password = this.props.password; //'lestat';\n         const hmac = new jsSHA('SHA-256', 'TEXT');\n         hmac.setHMACKey(password, 'TEXT');\n         hmac.update(user);\n         hmac.update(Date.now().toString(36).substring(0, 4));\n         const token = `${hmac.getHMAC('HEX')}%${user}`;\n         const api = axios.create({\n           // {/** Instantiate the network request. */}\n           baseURL: 'http://45.77.58.134:8080',\n           headers: { 'Authorization': 'Bearer ' + token }\n\n         });\n         (async () => {\n           // {/* Retrieve clients for authenticated user. */}}\n           const res = await api.get('/clients');\n           // {/*  Retrieve accounts for specified client UUID. */}\n           const acc = await api.get(`/accounts/${res.data[0]._id}`)\n           // {/*  Retrieves all( .*) transactions for given accounts based on the clients ID. */}\n           let trans = await api.get(`/transactions/${acc.data[0]._id}/.*`)\n\n           // {/** P  ost a new transaction, requires a body object as below. */}\n           await api.post(\"/transactions\", {\n             \"type\": \"Data\",\n             \"src\": acc.data[0]._id,\n             \"dest\": acc.data[0]._id,\n             \"amount\": -(this.state.amount),\n             \"ref\": \"Data\"\n             });\n\n           // {/*  Retrieves all( .*) transactions for given accounts based on the clients ID. */}\n           trans = await api.get(`/transactions/${acc.data[0]._id}/.*`)\n           console.log(trans);\n         })();\n       }\n\n       selectFrom (event) {\n         this.setState ({\n           amount: event.target.value\n         })\n       }\n\n       onChange(e){\n        this.setState({[e.target.name]: e.target.value});\n        console.log(this.state.src);\n        }\n\n// {/* Render method returns a second navbar, textboxes and a dropdown on the screen for user to make a scheduled payment. */}\n  render () {\n    return (\n      <div>\n        <Utilities/>\n                <div className=\"content\">\n                  <div id=\"payments\">\n                    <div className=\"green box\">\n                       <p> Choose a Recharge Amount:\n                       <select className=\"imput\" value={this.state.amount} onChange={this.selectFrom}>\n                          <option value=\"\">Select:</option>\n                          <option value=\"30\">30 SMSs at R10.00</option>\n                          <option value=\"17\">50 SMSs at R17.00</option>\n                          <option value=\"30\">100 SMSs at R30.00</option>\n                          <option value=\"50\">200 SMSs at R50.00</option>\n                          <option value=\"75\">300 SMSs at R75.00</option>\n                          <option value=\"114\">500 SMSs at R114.00</option>\n                          <option value=\"420\">2000 SMSs at R420.00</option>\n                        </select>\n                       </p>\n                     </div>\n                     {/* ComponentDidMount() renders user input to API. */}\n                    <button className='button' onClick={this.componentDidMount}>Buy</button><br/><br/>\n                </div>\n              </div>\n          </div>\n    )\n  }\n}\n\nexport default Data\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Footer from './footer'\nimport Data from './data';\nimport SMS from './sms'\nimport jsSHA from 'jssha';\nimport axios from 'axios';\nimport Utilities from \"./utilities\";\n\nclass Airtime  extends Component {\n  // {/* The constructor for a React Component is called before it is mounted. */}\n  constructor(props) {\n    // {/* Pass props to the constructor by super. */}\n    super(props);\n    // {/* Initalise the local state by assigning objects to this.state. */}\n    this.state={\n      // {/* Passing an 0 as a value for the amount object. */}\n      amount: 0,\n    }\n\n    {/**\n    * Bind the value of the control to the currrent value of the state.\n    * There must be a bound so that if there is a value and something that causes the control to re-render,\n    it gets the correct value out of the state.\n    */}\n    this.selectFrom = this.selectFrom.bind(this)\n    this.componentDidMount = this.componentDidMount.bind(this)\n  }\n\n  // {/* Invoked immediately after a component is mounted. */}\n  componentDidMount() {\n         {/* Props is used to pass the username and password down the component tree from the parent (App.js) to child (MyAccounts.js) */}\n         const user = this.props.username; //'blackfish787';\n         const password = this.props.password; //'lestat';\n         const hmac = new jsSHA('SHA-256', 'TEXT');\n         hmac.setHMACKey(password, 'TEXT');\n         hmac.update(user);\n         hmac.update(Date.now().toString(36).substring(0, 4));\n         const token = `${hmac.getHMAC('HEX')}%${user}`;\n         const api = axios.create({\n           // {/** Instantiate the network request. */}\n           baseURL: 'http://45.77.58.134:8080',\n           headers: { 'Authorization': 'Bearer ' + token }\n\n         });\n         (async () => {\n           // {/* Retrieve clients for authenticated user. */}}\n           const res = await api.get('/clients');\n           // {/*  Retrieve accounts for specified client UUID. */}\n           const acc = await api.get(`/accounts/${res.data[0]._id}`)\n           // {/*  Retrieves all( .*) transactions for given accounts based on the clients ID. */}\n           let trans = await api.get(`/transactions/${acc.data[0]._id}/.*`)\n\n           // {/** Post a new transaction, requires a body object as below. */}\n           await api.post(\"/transactions\", {\n             \"type\": \"Airtime\",\n             \"src\": acc.data[0]._id,\n             \"dest\": acc.data[0]._id,\n             \"amount\": -(this.state.amount),\n             \"ref\": \"Airtime\"\n             });\n\n           // {/*  Retrieves all( .*) transactions for given accounts based on the clients ID. */}\n           trans = await api.get(`/transactions/${acc.data[0]._id}/.*`)\n           console.log(trans);\n         })();\n       }\n\n       // {/* Updates the amount state whenever the dropdown changes. */}\n       selectFrom (event) {\n         this.setState ({\n           // {/* e.target.value gets the new value of the dropdown in order to update state. */}\n           amount: event.target.value\n         })\n       }\n\n\n      onChange(e){\n        this.setState({[e.target.name]: e.target.value});\n        console.log(this.state.src);\n      }\n\n      // {/* Render method returns a second navbar and a dropwdown on the screen for user to select the amount of airtome to buy. */}\n      render () {\n        return (\n          <div>\n            <Utilities/>\n            <div className=\"content\">\n              <div id=\"payments\">\n                <div class=\"red box\">\n                    <p> Choose a Recharge Amount:\n                     {/* A function to update the amount state. */}\n                    <select className=\"imput\" value={this.state.amount} onChange={this.selectFrom}>\n                      <option value=\"\">Select:</option>\n                      <option value=\"5\">R5.00</option>\n                      <option value=\"25\">R25.00</option>\n                      <option value=\"30\">R30.00</option>\n                      <option value=\"60\">R60.00</option>\n                      <option value=\"180\">R180.00</option>\n                    </select>\n                    </p>\n                  </div>\n                   {/*  Renders user input to the API. */}\n                  <button className='button' onClick={this.componentDidMount}>Buy</button><br/><br/>\n                </div>\n              </div>\n            </div>\n          )\n      };\n    };\n\n    export default Airtime\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Footer from './footer';\nimport Airtime from './Airtime';\nimport SMS from './sms';\nimport Data from './data';\nimport jsSHA from 'jssha';\nimport axios from 'axios';\n\n\nclass Utilities  extends Component {\n  // {/* The constructor for a React Component is called before it is mounted. */}\n  constructor(props) {\n    // {/* Pass props to the constructor by super. */}\n    super(props);\n    // {/* Initalise the local state by assigning objects to this.state. */}\n    this.state={\n      // {/* Passing an empty string as a value for objects below. */}\n      src:'',\n      dest: '',\n      amount: 0,\n      ref: '',\n      // {/* Passing an array as a value for objects below. */}\n      clients: [],\n      accounts: [],\n      transactions: [],\n      // {/* Passing an empty string as a value for account. */}\n      account: '',\n      type:'',\n    }\n    // {/**\n    // * Bind the value of the control to the currrent value of the state.\n    // * There must be a bound so that if there is a value and something that causes the control to re-render,\n    // it gets the correct value out of the state.\n    // */}\n    this.componentDidMount=this.componentDidMount.bind(this)\n    this.makePayment = this.makePayment.bind(this)\n\n  }\n\n  // {/* Invoked immediately after a component is mounted. */}\n   componentDidMount() {\n         {/* Props is used to pass the username and password down the component tree from the parent (App.js) to child (MyAccounts.js) */}\n\n         const user ='blackfish787'//{this.props.user}\n         const password ='lestat'//{this.props.password}\n         const hmac = new jsSHA('SHA-256', 'TEXT');\n         hmac.setHMACKey(password, 'TEXT');\n         hmac.update(user);\n         hmac.update(Date.now().toString(36).substring(0, 4));\n         const token = `${hmac.getHMAC('HEX')}%${user}`;\n         const api = axios.create({\n           // {/** Instantiate the network request. */}\n           baseURL: 'http://45.77.58.134:8080',\n           headers: { 'Authorization': 'Bearer ' + token }\n         });\n\n         (async () => {\n           // {/* Retrieve clients for authenticated user. */}}\n           const res = await api.get('/clients');\n           this.setState({clients: res.data});\n           // {/*  Retrieve accounts for specified client UUID. */}\n           const acc = await api.get(`/accounts/` + this.state.clients[0][\"_id\"])\n           this.setState({accounts: acc.data})\n         })()\n       }\n\n         makePayment(){\n           const user ='blackfish787'//{this.props.user}\n           const password ='lestat'//{this.props.password}\n           const hmac = new jsSHA('SHA-256', 'TEXT');\n           hmac.setHMACKey(password, 'TEXT');\n           hmac.update(user);\n           hmac.update(Date.now().toString(36).substring(0, 4));\n           const token = `${hmac.getHMAC('HEX')}%${user}`;\n           const api = axios.create({\n             // {/** Instantiate the network request. */}\n             baseURL: 'http://45.77.58.134:8080',\n             headers: { 'Authorization': 'Bearer ' + token }});\n\n\n             (async () => {\n             try {\n               // {/* Retrieve clients for authenticated user. */}}\n               const res = await api.get('/clients');\n               // {/* Calls setState() immediately in componentDidMount().\n               //   * setSate() updates the clients state with client data.\n               //   * Passing clients object to setState().\n               // */}\n               this.setState({clients: res.data});\n               // {/*  Retrieve accounts for specified client UUID. */}\n               const acc = await api.get(`/accounts/` + this.state.clients[0][\"_id\"])\n               // /* Calls setState() immediately in componentDidMount().\n               //   * setSate() updates the accounts state accounts data.\n               //   * Passing accounts object to setState().\n               // */}\n               this.setState({accounts: acc.data})\n               // {/*  Retrieves all( .*) transactions for given accounts based on the clients ID. */}\n               const tras = await api.get('/transactions');\n               // {/* Calls setState() immediately in componentDidMount().\n               //   * setSate() updates the transactions state with the transactions data.\n               //   * Passing transactions object to setState().\n               // */}\n               this.setState({transactions: tras.data})\n\n               // {/** Post a new transaction, requires a body object as below. */}\n             api.post('/transactions', {\n               time: this.state.time,\n               type: 'credit',\n               dest: this.state.src,\n               src: this.state.dest,\n               amount: -(this.state.amount),\n               ref: this.state.ref,\n             }).then(function (response){\n               console.log(response);\n             }).catch(function (error){\n               console.log(error);\n             });\n           }\n\n\n         catch {\n           console.log('error')\n           alert('error')\n         }\n       })()\n\n       }\n\n// {/* Render method returns a second navbar and dropdowns for the account type and utility choice on the screen. */}\n  render () {\n    return (\n      <div>\n\n      <div className=\"navbar2\">\n        <NavLink to=\"/utilities\" className=\"navButton\"> Airtime and Bundles </NavLink>\n        <NavLink to=\"/buyElectricity\" className=\"navButton\"> Electricity </NavLink>\n        </div>\n          <div className=\"content\">\n              <div id=\"payments\">\n                <div id=\"Airtime and Bundles\" className=\"w3-container city\" >\n                  <h1>Airtime and Bundles</h1>\n                    <h2> 1. Accounts </h2>\n                    <p> Select the source account:\n                      <select className ='imput' onChange={this.onChange}>\n                         {this.state.accounts.map(x =>\n                         <option key={x._id}>{`${x.description}`}</option>\n                       )}\n                       </select></p>\n                     <h2> 2. Details </h2>\n                    <NavLink to=\"/airtime\" className=\"button\"> Airtime </NavLink>\n                    <NavLink to=\"/data\" className=\"button\"> Data </NavLink>\n                    <NavLink to=\"/sms\" className=\"button\"> SMS </NavLink> <br/><br/>\n          </div>\n          </div>\n          </div>\n          </div>\n    )\n  }\n  }\nexport default Utilities\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport axios from 'axios';\nimport jsSHA from 'jssha';\n\nclass MyAccounts extends Component {\n  // {/* The constructor for a React Component is called before it is mounted. */}\n  constructor(props) {\n    // {/* Pass props to the constructor by super. */}\n    super()\n    // {/* Initalise the local state by assigning an object to this.state. */}\n    // {/* Passing an array as a value for accounts. */}\n    this.state = { accounts: [] };\n  }\n\n  // {/* Invoked immediately after a component is mounted. */}\n  componentDidMount() {\n    //console.log(this.props)\n    {/* Props is used to pass the username and password down the component tree from the parent (App.js) to child (MyAccounts.js) */}\n    const user = this.props.username; //'blackfish787';\n    const password = this.props.password; //'lestat';\n    const hmac = new jsSHA('SHA-256', 'TEXT');\n    hmac.setHMACKey(password, 'TEXT');\n    hmac.update(user);\n    hmac.update(Date.now().toString(36).substring(0, 4));\n    const token = `${hmac.getHMAC('HEX')}%${user}`;\n    const api = axios.create({\n      // {/** Instantiate the network request. */}\n      baseURL: 'http://45.77.58.134:8080',\n      headers: { 'Authorization': 'Bearer ' + token }\n    });\n\n    (async () => {\n      // {/* Retrieve clients for authenticated user. */}}\n      const res = await api.get('/clients');\n      // {/*  Retrieve accounts for specified client UUID. */}\n      const accounts = await api.get(`/accounts/${res.data[0]._id}`)\n      {/* Calls setState() immediately in componentDidMount().\n        * setSate() updates the accounts state with the account data.\n        * Passing accounts object to setState().\n        */}\n        this.setState({accounts: accounts.data});\n        //console.log(accounts);\n      })();\n    };\n\n    // {/* Render method returns a second navbar and user's account(s) on the screen. */}\n    render () {\n      return (\n        <div>\n        <div className = \"navbar2\">\n        <NavLink to=\"/MyAccounts\" className = \"navButton\"> My Accounts </NavLink>\n        <NavLink to=\"/newAcc\" className = \"navButton\"> New Accounts </NavLink>\n        <NavLink to=\"/accInfo\" className = \"navButton\"> Account Information </NavLink>\n        </div>\n        <div className = \"content\">\n        <div id=\"payments\">\n        <h1>Accounts</h1>\n        {/* Renders the description of the account e.g. cheque by having access to local state by this.state. */}\n        <h2>{this.state.accounts.description}</h2>\n        <table>\n        <thead>\n        <th>Description</th>\n        <th>Type</th>\n        <th>Balance</th>\n        <th></th>\n        </thead>\n        <tbody>\n        {/* Maps the account description, type and balance into a table. */}\n        {this.state.accounts.map(x =>\n          <tr>\n          <td>{x.description}</td>\n          <td>{x.type}</td>\n          {/* Converts the cents to rands. */}\n          <td>{Intl.NumberFormat('en-GB', {\n            style: 'currency',\n            currency: 'ZAR',\n          }).format(x.balance)}</td>\n          {/* Upon clicking the statements button, user is redirected to statements page. */}\n          <td><NavLink to={\"/Statements/\" + x._id} className = \"button\"> Statements </NavLink></td>\n          </tr>\n        )}\n        </tbody>\n        </table><br/><br/>\n        </div>\n        </div>\n        </div>\n      );\n    }\n  }\n\n  export default MyAccounts\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport jsSHA from 'jssha';\nimport axios from 'axios'\n\nclass Newacc extends Component {\n// {/* The constructor for a React Component is called before it is mounted. */}\nconstructor(props) {\n  {/* Pass props to the constructor by super. */}\n  super(props);\n  {/* Initalise the local state by assigning objects to this.state. */}\n  this.state={\n    // {/* Passing an 0 as a value for balance. */}\n    balance: 0,\n    // {/* Passing an empty string as a value for id, client, description and type. */}\n    _id: '',\n    client: '',\n    description: '',\n    type: '',\n  }\n\n  {/**\n  * Bind the value of the control to the currrent value of the state.\n  * There must be a bound so that if there is a value and something that causes the control to re-render,\n  it gets the correct value out of the state.\n  */}\n  this.onChangeAcc=this.onChangeAcc.bind(this)\n  this.componentDidMount=this.componentDidMount.bind(this)\n}\n\n// {/* Invoked immediately after a component is mounted. */}\ncomponentDidMount() {\n          {/* Props is used to pass the username and password down the component tree from the parent (App.js) to child (MyAccounts.js) */}\n          const user = this.props.username //'lazymeercat116';\n          const password = this.props.password //'hottest';\n          const hmac = new jsSHA('SHA-256', 'TEXT');\n          hmac.setHMACKey(password, 'TEXT');\n          hmac.update(user);\n          hmac.update(Date.now().toString(36).substring(0, 4));\n          const token = `${hmac.getHMAC('HEX')}%${user}`;\n          const api = axios.create({\n            // {/** Instantiate the network request. */}\n            baseURL: 'http://45.77.58.134:8080',\n            headers: { 'Authorization': 'Bearer ' + token }\n          });\n\n          (async () => {\n            // {/* Retrieve clients for authenticated user. */}}\n            const res = await api.get('/clients');\n            // {/*  Retrieve accounts for specified client UUID. */}\n            const acc = await api.get(`/accounts/${res.data[0]._id}`)\n\n\n            const newacc = await api.post('/apply', {\n              \"_id\": acc.data[0]._id,\n              \"balance\": acc.data[0].balance,\n              \"client\": acc.data[0].client,\n              \"description\": acc.data[0].description,\n              \"type\": this.state.type,\n            })\n\n            console.log(acc)\n          })();\n        };\n\n// {/* Updates the type state whenever the dropwdown value changes. */}\nonChangeAcc(event) {\n  this.setState({\n    type: event.target.value\n  })\n}\n\n// {/* Updates the bank state whenever the dropwdown value changes. */}\n// onChangeTitle(event) {\n//   this.setState({\n//     title: event.target.value\n//   })\n// }\n\n  // {/* Render method returns a second navbar and a dropdown on the screen for the user to create a new account. */}\n  render () {\n    return (\n      <div>\n      <div className='navbar2'>\n      <NavLink to=\"/MyAccounts\" className = \"navButton\"> My Accounts </NavLink>\n      <NavLink to=\"/newAcc\" className = \"navButton\"> New Account </NavLink>\n      <NavLink to=\"/accInfo\" className = \"navButton\"> Account Information </NavLink>\n      </div>\n      <div className = \"content\">\n        <div id=\"payments\">\n          <h1>Create a New Account</h1>\n          <div className=\"create\">\n            <h2> Accounts </h2>\n            <p>\n              <select className=\"imput\" value={this.state.type} onChange={this.onChangeAcc}>\n                <option value=\"\">Select Account</option>\n                <option value=\"Cheque\">Cheque</option>\n                <option value=\"Savings\">Savings</option>\n                <option value=\"Credit\">Credit</option>\n                <option value=\"Special Investment\">Special Investment</option>\n              </select>\n              </p>\n            <div className=\"register\">\n            </div>\n          </div>\n          <div className=\"text\">\n            {/* ComponentDidMount() renders user input to API. */}\n            <button className=\"button\" onClick={this.componentDidMount}>Submit Application</button><br/><br/>\n          </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Newacc\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nclass AccInfo extends Component {\n  // {/* The constructor for a React Component is called before it is mounted. */}\n  constructor(props) {\n    {/* Pass props to the constructor by super. */}\n    super(props);\n    {/**\n      * Initalise the local state by assigning objects to this.state.\n    */}\n    this.state={\n       // {/* Passing an empty string as a value for cheque, savings, credit and inv. */\n      cheque: '',\n      savings: '',\n      credit: '',\n      inv: '',\n\n    }\n\n    {/**\n    * Bind the value of the control to the currrent value of the state.\n    * There must be a bound so that if there is a value and something that causes the control to re-render,\n    it gets the correct value out of the state.\n    */}\n    this.handleCheque = this.handleCheque.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleCredit = this.handleCredit.bind(this);\n    this.handleSpec = this.handleSpec.bind(this);\n  }\n\n  // {/* A function to update the cheque state. */}\n  handleCheque () {\n   this.setState(state => ({\n          // {/* Popup message provides user with information about the cheque account. */}\n          cheque: alert('This is all the information on the cheque account. '),\n      }))\n  }\n\n  // {/* A function to update the savings state. */}\n  handleSave () {\n   this.setState(state => ({\n          // {/* Popup message provides user with information about the savings account. */}\n          savings: alert('This is all the information on the savings account. '),\n      }))\n  }\n\n  // {/* A function to update the credit state. */}\n  handleCredit () {\n   this.setState(state => ({\n          // {/* Popup message provides user with information about the credit account. */}\n          credit: alert('This is all the information on the credit account. '),\n      }))\n  }\n\n  // {/* A function to update the investment state. */}\n  handleSpec () {\n   this.setState(state => ({\n          // {/* Popup message provides user with information about the investment account. */}\n          inv: alert('This is all the information on the special investment account. '),\n      }))\n  }\n\n  // {/* Render method returns a second navbar and buttons for information on different accounts. */}\n  render () {\n    return (\n      <div>\n      <div className='navbar2'>\n      <NavLink to=\"/MyAccounts\" className = \"navButton\"> My Accounts </NavLink>\n      <NavLink to=\"/newAcc\" className = \"navButton\"> New Account </NavLink>\n      <NavLink to=\"/accInfo\" className = \"navButton\"> Account Information </NavLink>\n      </div>\n        <center>\n          <h1>Account Information</h1>\n          <div className=\"btns\">\n            {/* Calls the handleChange function with the onChange event. */}\n            <button id=\"typebtn\" className =\"button\"type=\"button\" onClick={this.handleCheque}>Cheque</button>\n            <button id=\"typebtn\" className =\"button\"type=\"button\" onClick={this.handleSave}>Savings</button>\n            <button id=\"typebtn\" className =\"button\"type=\"button\" onClick={this.handleCredit}>Credit</button>\n            <button id=\"typebtn\" className =\"button\"type=\"button\" onClick={this.handleSpec}>Special Investment</button><br/><br/>\n          </div>\n        </center>\n      </div>\n    )\n  }\n}\n\nexport default AccInfo\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport axios from 'axios';\nimport jsSHA from 'jssha';\n\nclass Statements extends Component {\n  // {/* The constructor for a React Component is called before it is mounted. */}\n  constructor() {\n    {/* Pass props to the constructor by super. */}\n    super()\n    {/* Initalise the local state by assigning objects to this.state. */}\n    this.state = { account: {}, transactions: [] };\n  }\n\n  // {/* Invoked immediately after a component is mounted. */}\n  componentDidMount() {\n    {/* username and password had to be hard coded in order to view the statements of the individual accounts, if user had 1< accounts an empty table was rendered */}\n    const user = 'blacktiger144';\n    const password = '191919';\n    const hmac = new jsSHA('SHA-256', 'TEXT');\n    hmac.setHMACKey(password, 'TEXT');\n    hmac.update(user);\n    hmac.update(Date.now().toString(36).substring(0, 4));\n    const token = `${hmac.getHMAC('HEX')}%${user}`;\n    const api = axios.create({\n      // {/** Instantiate the network request. */}\n      baseURL: 'http://45.77.58.134:8080',\n      headers: { 'Authorization': 'Bearer ' + token }\n    });\n\n    (async () => {\n      const id = this.props.match.params.accid;\n      //console.log(id);\n      // {/* Retrieve clients for authenticated user. */}}\n      const res = await api.get('/clients');\n      // /*  Retrieve accounts for specified client UUID. */}\n      const accounts = await api.get(`/accounts/${res.data[0]._id}`)\n      // {/*  Retrieves all( .*) transactions for given accounts based on the clients ID. */}\n      const transactions = await api.get(`/transactions/${id}/.*`)\n      for (let x = 0; x < accounts.data.length; x++) {\n        // {/* If the clients ID equals the accounts ID then it calls setSate() to get data from the accounts state to show\n        // the clients statatement. */}\n        if (accounts.data[x]._id === id) {\n          {/* Calls setState() immediately in componentDidMount().\n            * setSate() updates the accounts state with the account data.\n            * Passing accounts object to setState().\n            */}\n            this.setState({account: accounts.data[x]});\n            break;\n          }\n        }\n\n        {/* Calls setState() immediately in componentDidMount().\n          * setSate() updates the transactions state with transactions data.\n          * Passing transactions object to setState().\n          */}\n          this.setState({transactions: transactions.data});\n          // console.log(accounts);\n        })();\n      };\n\n      // {/* Render method returns a second navbar and user's transaction list on the screen. */}\n      render () {\n        return (\n          <div>\n          <div className = \"navbar2\">\n          <NavLink to=\"/MyAccounts\" className = \"navButton\"> My Accounts </NavLink>\n          <NavLink to=\"/newAcc\" className = \"navButton\"> New Accounts </NavLink>\n          <NavLink to=\"/accInfo\" className = \"navButton\"> Account Information </NavLink>\n          </div>\n          <div className = \"content\">\n          <div id=\"payments\">\n          <h1>Statements</h1>\n          {/* Renders the description of the account e.g. cheque, savings by having access to local state by this.state. */}\n          <h2>{this.state.account.description}</h2>\n          <table>\n          <thead>\n          <th>Date</th>\n          <th>Reference</th>\n          <th>Amount</th>\n          <th>Balance</th>\n          <th></th>\n          </thead>\n          <tbody>\n          {/* Maps the transactions into a table. */}\n          {this.state.transactions.map(x =>\n            // {/* Sets the key. */}\n            <tr key = {x._id}>\n            {/*Formats the date from seconds into 'YYYY/MM/D'. */}\n            <td>{Intl.DateTimeFormat('en-GB', {\n              year: 'numeric',\n              month: 'long',\n              day: '2-digit',\n              hour: '2-digit',\n              minute: '2-digit',\n              second: '2-digit'\n            }).format(x.time)}</td>\n            <td>{x.ref}</td>\n            {/* Converts the cents to rands. */}\n            <td>{Intl.NumberFormat('en-GB', {\n              style: 'currency',\n              currency: 'ZAR',\n            }).format(x.amount)}</td>\n            {/* Converts the cents to rands. */}\n            <td>{Intl.NumberFormat('en-GB', {\n              style: 'currency',\n              currency: 'ZAR',\n            }).format(x.balance)}</td>\n            </tr>\n          )}\n          </tbody>\n          </table>\n          {/* Upon clikcing the print button, the print dialog box appears on the screen. */}\n          <button className = \"button\" onClick={() => window.print()}>Print</button>\n          </div>\n          </div>\n          </div>\n        )\n      }\n    }\n\n    export default Statements\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport axios from 'axios';\nimport jsSHA from 'jssha';\n\nclass History extends Component {\n  // {/* The constructor for a React Component is called before it is mounted. */}\n  constructor() {\n  // {/* Pass props to the constructor by super. */}\n  super()\n  // {/* Initalise the local state by assigning objects to this.state. */}\n  this.state = {\n  account: {},\n  // {/* Passing an array as a value for transactions. */}\n  transactions: [] };\n}\n\n  // {/* Invoked immediately after a component is mounted. */}\n  componentDidMount() {\n    {/* Global username and password fetches the payment history only if the user has 1 account, otherwise the table is empty because of an issue with the accounts unique id. */}\n    {/*If the user has more than 1 account, the table is empty but the payment history is rendered in the console*/}\n    const user = this.props.username; //'blackfish787';\n    const password = this.props.password; //'lestat';\n    const hmac = new jsSHA('SHA-256', 'TEXT');\n    hmac.setHMACKey(password, 'TEXT');\n    hmac.update(user);\n    hmac.update(Date.now().toString(36).substring(0, 4));\n    const token = `${hmac.getHMAC('HEX')}%${user}`;\n    const api = axios.create({\n    // {/** Instantiate the network request. */}\n    baseURL: 'http://45.77.58.134:8080',\n    headers: { 'Authorization': 'Bearer ' + token }\n     });\n\n    (async () => {\n      // {/* Retrieve clients for authenticated user. */}}\n      const res = await api.get('/clients');\n      // {/*  Retrieve accounts for specified client UUID. */}\n      const accounts = await api.get(`/accounts/${res.data[0]._id}`)\n      // {/*  Retrieves all( .*) transactions for given accounts based on the clients ID. */}\n      const transactions = await api.get(`/transactions/${accounts.data[0]._id}/.*`)\n      // {/*  Declare a payements array. */}\n      const payments = [];\n      await transactions.data.map(x => {\n      // {/*  If the transaction type is a payment, populate the payements array with it. */}\n      if (x.type === 'payment') {\n         payments.push(x);\n      }\n      });\n\n      {/* Calls setState() immediately in componentDidMount().\n      * setSate() updates the account state with account data.\n      * setSate() updates the transactions state with payments data.\n      * Passing account and transactions objects to setState().\n      */}\n      this.setState({\n        account: accounts.data[0],\n        transactions: payments});\n        console.log(transactions);\n        })();\n        };\n\n      // {/* Render method returns a second navbar and user's payment history on the screen. */}\n      render () {\n       return (\n         <div>\n           <div className=\"navbar2\">\n               <NavLink to=\"/payments\" className=\"navButton\"> Once-off Payments </NavLink>\n               <NavLink to=\"/scheduled\" className=\"navButton\"> Scheduled Payments </NavLink>\n             <div className = \"dropdown\">\n              <button className = \"dropbtn\"> Pay Beneficiary <i className = \"fa fa-caret-down\"></i></button>\n             <div className = \"dropdown-content\">\n               <NavLink to=\"/beneficiary\" className=\"navButton\"> Add New Beneficiary </NavLink>\n               <NavLink to=\"/existing\" className=\"navButton\"> Existing Beneficiaries </NavLink>\n           </div>\n           </div>\n             <NavLink to=\"/history\" className=\"navButton\"> Payment History </NavLink>\n           </div>\n           <div id=\"Payment History\" className=\"w3-container city\">\n            <h1>Payment History</h1>\n              <table>\n                <thead>\n                  <th>Date</th>\n                 <th>Time</th>\n                 <th>Type</th>\n                 <th>Amount</th>\n                 <th>Ref</th>\n               </thead>\n              <tbody>\n                {/* Maps the transactions time, type, amount and reference into a table. */}\n                {this.state.transactions.map(x =>\n                  // {/* Sets the key. */}\n                  <tr key = {x._id}>\n                    {/*Formats the date from seconds into 'YYYY/MM/D'. */}\n                    <td>{Intl.DateTimeFormat('en-GB', {\n                      year: 'numeric',\n                      month: 'long',\n                      day: '2-digit',\n                      }).format(x.time)}</td>\n                    {/*Formats the date from seconds into 'YYYY/MM/D'. */}\n                    <td>{Intl.DateTimeFormat('en-GB', {\n                      hour: '2-digit',\n                      minute: '2-digit',\n                      second: '2-digit'\n                      }).format(x.time)}</td>\n                  <td>{x.type}</td>\n                  {/* Converts the cents to rands. */}\n                  <td>{Intl.NumberFormat('en-GB', {\n                      style: 'currency',\n                      currency: 'ZAR'\n                      }).format(x.amount)}</td>\n                <td>{x.ref}</td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div><br/>\n      </div>\n    )\n  }\n}\n\nexport default History\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport axios from 'axios';\nimport jsSha from 'jssha';\n\n{/*This additional featuer does not work. We tried to add a beneficiary through the api generic callback but could not get it working*/}\n\nclass Beneficiary extends Component {\n  // {/* The constructor for a React Component is called before it is mounted. */}\n  constructor(props) {\n    {/* Pass props to the constructor by super. */}\n    super(props);\n    // {/* Passing an empty string as a value for the objects below. */}\n    this.state ={\n      // {/* Passing an array as a value for the objects below. */}\n      clients: [],\n      transactions: [],\n      accounts: [],\n      // {/* Passing an empty string as a value for the objects below. */}\n      type: '',\n      dest: '',\n      amount: '',\n      src: '',\n      ref: '',\n    }\n\n    {/**\n    * Bind the value of the control to the currrent value of the state.\n    * There must be a bound so that if there is a value and something that causes the control to re-render,\n    it gets the correct value out of the state.\n    */}\n    this.onChange = this.onChange.bind(this)\n    this.Payment = this.Payment.bind(this)\n    }\n\n    onChange (e) {\n      this.setState({[e.target.name]: e.target.value});\n      console.log(this.state.src)\n  }\n\n  // {/* Invoked immediately after a component is mounted. */}\n  componentDidMount() {\n           {/* Props is used to pass the username and password down the component tree from the parent (App.js) to child (MyAccounts.js) */}\n           const user = this.props.username; //'blackfish787';\n           const password = this.props.password; //'lestat';\n           const hmac = new jsSha('SHA-256', 'TEXT');\n           hmac.setHMACKey(password, 'TEXT');\n           hmac.update(user);\n           hmac.update(Date.now().toString(36).substring(0, 4));\n           const token = `${hmac.getHMAC('HEX')}%${user}`;\n           const api = axios.create({\n             // {/** Instantiate the network request. */}\n             baseURL: 'http://45.77.58.134:8080',\n             headers: { 'Authorization': 'Bearer ' + token }\n           });\n\n           (async () => {\n             // {/* Retrieve clients for authenticated user. */}}\n             const res = await api.get('/clients');\n             {/* Calls setState() immediately in componentDidMount().\n               * setSate() updates the clients state with client data.\n               * Passing clients object to setState().\n             */}\n             this.setState({clients: res.data});\n             // {/*  Retrieve accounts for specified client UUID. */}\n             const acc = await api.get(`/accounts/` + this.state.clients[0][\"_id\"])\n             {/* Calls setState() immediately in componentDidMount().\n               * setSate() updates the accounts state with account data.\n               * Passing accounts object to setState().\n             */}\n             this.setState({accounts: acc.data})\n             // {/*  Retrieves all( .*) transactions for given accounts based on the clients ID. */}\n             const transactions = await api.get(`/transactions/${acc.data[0]._id}/.*`)\n             {/* Calls setState() immediately in componentDidMount().\n               * setSate() updates the transactions state with transactions data.\n               * Passing transactions object to setState().\n             */}\n             this.setState({transactions: transactions.data});\n           })()\n    }\n\n\n    Payment(){\n        {/* Props is used to pass the username and password down the component tree from the parent (App.js) to child (MyAccounts.js) */}\n        const user = this.props.username; //'blackfish787';\n        const password = this.props.password; //'lestat';\n        const hmac = new jsSha('SHA-256', 'TEXT');\n        hmac.setHMACKey(password, 'TEXT');\n        hmac.update(user);\n        hmac.update(Date.now().toString(36).substring(0, 4));\n        const token = `${hmac.getHMAC('HEX')}%${user}`;\n        const api = axios.create({\n          // {/** Instantiate the network request. */}\n          baseURL: 'http://45.77.58.134:8080',\n          headers: { 'Authorization': 'Bearer ' + token }\n        });\n\n           // {/** Post a new transaction, requires a body object as below. */}\n          api.post('/transactions', {\n            \"time\": '',\n            \"type\": 'debit',\n            \"src\": this.state.src,\n            \"dest\": this.state.dest,\n            \"amount\": -(this.state.amount),\n            \"ref\": this.state.ref,\n          })};\n\n          // {/* Render method returns a second navbar and textboxes on the screen for user to payment details. */}\n          render () {\n            return (\n              <div>\n              <div className=\"navbar2\">\n                <NavLink to=\"/payments\" className=\"navButton\"> Once-off Payments </NavLink>\n                <NavLink to=\"/scheduled\" className=\"navButton\"> Scheduled Payments </NavLink>\n                <div className = \"dropdown\">\n                  <button className = \"dropbtn\"> Pay Beneficiary <i className = \"fa fa-caret-down\"></i></button>\n                <div className = \"dropdown-content\">\n                <NavLink to=\"/beneficiary\" className=\"navButton\"> Add New Beneficiary </NavLink>\n                <NavLink to=\"/existing\" className=\"navButton\"> Existing Beneficiaries </NavLink>\n              </div>\n              </div>\n                <NavLink to=\"/history\" className=\"navButton\"> Payment History </NavLink>\n              </div>\n                <div className=\"content\">\n                  <div id=\"Pay Beneficiaries\" className=\"w3-container city\">\n                    <h1>Add Beneficiaries</h1>\n                <div>\n                  <div>\n                    <h2> 1. Beneficiary Details </h2>\n                    <p> Select Destination Account:\n                    <select className=\"imput\" name=\"dest\" onChange={this.onChange}>\n                    <option value=\"\">Select:</option>\n                    <option value=\"Savings\">Savings</option>\n                    <option value=\"Cheque\">Cheque</option>\n                    <option value=\"Debit\">Debit</option>\n                    <option value=\"Investment\">Special Investment</option>\n                    <option value=\"Credit\">Credit</option>\n                    </select></p>\n                    <h2> 2. Payment Details </h2>\n                    <p>Enter amount to pay: <input className=\"imput\"  onChange={this.onChange} name=\"amount\"/></p>\n                    <p> Select Source Account:\n                        <select className=\"imput\" name=\"src\" onChange={this.onChange}>\n                        {this.state.accounts.map(x =>\n                        <option value={x._id}> {`${x.description}`}</option>\n                        )}\n                        </select></p>\n                     <p>Reference: <input className=\"imput\" name=\"ref\" onChange={this.onChange} /></p>\n                      <div>\n                    <p><b>Please note</b></p>\n                    <p>Your payment may take up to 24 hours to reflect on Bank of the Sun accounts, and up to 2 business days with other banks. </p>\n                          <button className='button' onClick={this.Payment}>Add</button><br/><br/>\n                  </div>\n                </div>\n              </div>\n              </div>\n          </div>\n          </div>\n            )\n          }\n        }\n\n      export default Beneficiary\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport axios from 'axios';\nimport jsSha from 'jssha';\nimport moment from 'moment';\n\n{/*This is an additionl feature that we could not get working properly, we could not convert normal time to unix time properly*/}\n\nclass Scheduled extends Component {\n  // {/* The constructor for a React Component is called before it is mounted. */}\n  constructor(props) {\n    // {/* Pass props to the constructor by super. */}\n    super(props);\n    // {/* Initalise the local state by assigning objects to this.state. */}\n    this.state ={\n      // {/* Passing an empty string as a value for the objects below. */}\n      payAmount: '',\n      payName: '',\n      dest: '',\n      accNum: '',\n      ref: '',\n      time: '',\n    }\n\n    {/**\n    * Bind the value of the control to the currrent value of the state.\n    * There must be a bound so that if there is a value and something that causes the control to re-render,\n    it gets the correct value out of the state.\n    */}\n    this.onChangeType = this.onChangeType.bind(this)\n  }\n\n  // {/* Updates the type state whenever the dropwdown value changes. */}\n  onChangeType(event) {\n    this.setState ({\n      type: event.target.value\n    })\n  }\n\nupdateTime() {\n  let unixDate = moment(this.props.time, 'YYYY.MM.DD').unix();\n  console.log(unixDate)\n}\n\n  // {/* Invoked immediately after a component is mounted. */}\n  componentDidMount() {\n           {/* Props is used to pass the username and password down the component tree from the parent (App.js) to child (MyAccounts.js) */}\n           const user = 'lazymeercat116';\n           const password = 'hottest';\n           const hmac = new jsSha('SHA-256', 'TEXT');\n           hmac.setHMACKey(password, 'TEXT');\n           hmac.update(user);\n           hmac.update(Date.now().toString(36).substring(0, 4));\n           const token = `${hmac.getHMAC('HEX')}%${user}`;\n           const api = axios.create({\n             // {/** Instantiate the network request. */}\n             baseURL: 'http://45.77.58.134:8080',\n             headers: { 'Authorization': 'Bearer ' + token }\n           })\n\n\n            (async () => {\n              // {/* Retrieve clients for authenticated user. */}}\n             const res = await api.get('/clients');\n             {/* Calls setState() immediately in componentDidMount().\n               * setSate() updates the clients state with the client data.\n               * Passing cleint object to setState().\n             */}\n             this.setState({clients: res.data});\n             // {/*  Retrieve accounts for specified client UUID. */}\n              const accounts = await api.get(`/accounts/` + this.state.clients[0][\"_id\"])\n              {/* Calls setState() immediately in componentDidMount().\n                * setSate() updates the accounts state with the account data.\n                * Passing accounts object to setState().\n              */}\n             this.setState({accounts: accounts.data});\n             const transactions = await api.get(`/transactions/${accounts.data[0]._id}/.*`)\n             {/* Calls setState() immediately in componentDidMount().\n               * setSate() updates the transfers state with transfers data.\n               * Passing transactions object to setState().\n             */}\n             this.setState({transfers: transactions.data});\n             {/* Calls setState() immediately in componentDidMount().\n               * setSate() updates the time state with time data.\n               * Passing time object to setState().\n             */}\n             this.setState({time: moment(this.state.time,\n           )})\n            // console.log(this.state.time)\n        }\n    )}\n\n\n            makePayment () {\n            {/* Props is used to pass the username and password down the component tree from the parent (App.js) to child (MyAccounts.js) */}\n            const user = this.props.username; //'blackfish787';\n            const password = this.props.password; //'lestat';\n            const hmac = new jsSha('SHA-256', 'TEXT');\n            hmac.setHMACKey(password, 'TEXT');\n            hmac.update(user);\n            hmac.update(Date.now().toString(36).substring(0, 4));\n            const token = `${hmac.getHMAC('HEX')}%${user}`;\n            const api = axios.create({\n              // {/** Instantiate the network request. */}\n              baseURL: 'http://45.77.58.134:8080',\n              headers: { 'Authorization': 'Bearer ' + token } });\n\n             // {/** Post a new transaction, requires a body object as below. */}\n             api.post('/transactions', {\n              time: this.state.time,\n               type: this.state.type,\n               // src: accounts.data[0]._id,\n               dest: this.state.dest,\n               amount:this.state.amount,\n               ref:this.state.ref,\n             }).then(function (response) {\n               console.log(response);\n             });\n};\n\n// {/* Render method returns a second navbar, textboxes and a dropdown on the screen for user to make a scheduled payment. */}\n  render () {\n    return (\n      <div>\n        <div className=\"navbar2\">\n          <NavLink to=\"/payments\" className=\"navButton\"> Once-off Payments </NavLink>\n          <NavLink to=\"/scheduled\" className=\"navButton\"> Scheduled Payments </NavLink>\n          <div className = \"dropdown\">\n            <button className = \"dropbtn\"> Pay Beneficiary <i className = \"fa fa-caret-down\"></i></button>\n          <div className = \"dropdown-content\">\n          <NavLink to=\"/beneficiary\" className=\"navButton\"> Add New Beneficiary </NavLink>\n          <NavLink to=\"/existing\" className=\"navButton\"> Existing Beneficiaries </NavLink>\n        </div>\n        </div>\n          <NavLink to=\"/history\" className=\"navButton\"> Payment History </NavLink>\n        </div>\n\n        <div className=\"content\">\n          <div id=\"Scheduled Payments\" className=\"w3-container city\">\n            <h1>Scheduled Payments</h1>\n\n            <div id=\"payments\">\n            <h2> 1. Scheduled Payment Details </h2>\n               Payment Amount: <input className=\"imput\" onChange={e=>{this.setState({payAmount: e.target.value.trim()})}} value={this.state.payAmount} />\n              <p> Scheduled Payment Name: <input className=\"imput\" onChange={e=>{this.setState({payName: e.target.value.trim()})}} value={this.state.payName} /></p>\n            <h2> 2. Beneficiary Details </h2>\n            <p> Enter Name: <input className=\"imput\" onChange={e=>{this.setState({dest: e.target.value.trim()})}} value={this.state.dest} /></p>\n            <p> Account Type:\n              <select className=\"imput\" value={this.state.type} onChange={this.onChangeType}>\n                <option value=\"\">Select:</option>\n                <option value=\"Savings\">Savings</option>\n                <option value=\"Cheque\">Cheque</option>\n                <option value=\"Debit\">Debit</option>\n                <option value=\"Investment\">Special Investment</option>\n                <option value=\"Credit\">Credit</option>\n              </select></p>\n              <p> Account Number: <input className=\"imput\" onChange={e=>{this.setState({accNum: e.target.value.trim()})}} value={this.state.accNum} /></p>\n              <p> Reference: <input className=\"imput\"  onChange={e=>{this.setState({ref: e.target.value.trim()})}} value={this.state.ref} /></p>\n              <h2> 3. Scheduled Payment Dates </h2>\n              <p> To Date: <input className=\"imput\" type=\"date\" onChange={e=>{this.setState({time: e.target.value})}} value={this.state.time} /></p>\n          </div>\n\n            <div className=\"text\">\n              <p><b>Please note</b></p>\n              <p>Your payment may take up to 24 hours to reflect on Bank of the Sun accounts, and up to 2 business days with other banks. </p>\n                    <button className='button' onClick={e=>console.log(this.state)}>Pay</button><br/><br/>\n            </div>\n            </div>\n          </div>\n        </div>\n\n\n    )\n  }\n}\n\nexport default Scheduled\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport axios from 'axios';\nimport jsSha from 'jssha';\n\n{/*This additiona feature does not work. We could not figure out the api callbacks to other users accounts.*/}\n\nclass Existing extends Component {\n        // {/* The constructor for a React Component is called before it is mounted. */}\n        constructor(props) {\n          {/* Pass props to the constructor by super. */}\n          super(props);\n          {/* Initalise the local state by assigning objects to this.state. */}\n          this.state ={\n            // {/* Passing an empty string as a value for the objects below. */}\n            clients: [],\n            transactions: [],\n            accounts: [],\n            src: '',\n            dest: '',\n            amount: '',\n            ref: '',\n            time: '',\n            amount1: '',\n            amount2: '',\n            amount3: '',\n            amount4: '',\n            ref1: '',\n            ref2: '',\n            ref3: '',\n            ref4: '',\n          }\n\n          {/**\n          * Bind the value of the control to the currrent value of the state.\n          * There must be a bound so that if there is a value and something that causes the control to re-render,\n          it gets the correct value out of the state.\n          */}\n\n          this.onChange = this.onChange.bind(this)\n          this.ThomasPay = this.ThomasPay.bind(this)\n          this.HaroldPay = this.HaroldPay.bind(this)\n          this.DarrylPay = this.DarrylPay.bind(this)\n          this.PhoebePay = this.PhoebePay.bind(this)\n        }\n\n        // {/* Invoked immediately after a component is mounted. */}\n        componentDidMount() {\n                 const user = this.props.username; //'blackfish787';\n                 const password = this.props.password; //'lestat';\n                 const hmac = new jsSha('SHA-256', 'TEXT');\n                 hmac.setHMACKey(password, 'TEXT');\n                 hmac.update(user);\n                 hmac.update(Date.now().toString(36).substring(0, 4));\n                 const token = `${hmac.getHMAC('HEX')}%${user}`;\n                 const api = axios.create({\n                   baseURL: 'http://45.77.58.134:8080',\n                   headers: { 'Authorization': 'Bearer ' + token }\n                 });\n\n                 (async () => {\n                   const res = await api.get('/clients');\n                   this.setState({clients: res.data});\n                   const acc = await api.get(`/accounts/` + this.state.clients[0][\"_id\"])\n                   this.setState({accounts: acc.data})\n                   const transactions = await api.get(`/transactions/${acc.data[0]._id}/.*`)\n                   this.setState({transactions: transactions.data});\n                 })()\n          }\n\n          ThomasPay(){\n              const user = this.props.username; //'blackfish787';\n              const password = this.props.password; //'lestat';\n              const hmac = new jsSha('SHA-256', 'TEXT');\n              hmac.setHMACKey(password, 'TEXT');\n              hmac.update(user);\n              hmac.update(Date.now().toString(36).substring(0, 4));\n              const token = `${hmac.getHMAC('HEX')}%${user}`;\n              const api = axios.create({\n                baseURL: 'http://45.77.58.134:8080',\n                headers: { 'Authorization': 'Bearer ' + token }\n              });\n              (async () => {\n                const res = await api.get('/clients');\n                this.setState({clients: res.data});\n                const acc = await api.get(`/accounts/` + this.state.clients[0][\"_id\"])\n                this.setState({accounts: acc.data})\n                const transactions = await api.get(`/transactions/${acc.data[0]._id}/.*`)\n                this.setState({transactions: transactions.data});\n              })()\n\n                api.post('/transactions', {\n\n                  \"time\": '',\n                  \"type\": 'debit',\n                  \"src\": this.state.src,\n                  \"dest\": '1131a1ca-bd63-37af-8eb3-43281cc88067',\n                  \"amount\": -(this.state.amount1),\n                  \"ref\": this.state.ref1,\n            })\n\n            api.post('/transactions', {\n\n              \"time\": '',\n              \"type\": 'credit',\n              \"src\": '1131a1ca-bd63-37af-8eb3-43281cc88067',\n              \"dest\": this.state.src,\n              \"amount\": this.state.amount1,\n              \"ref\": this.state.ref1,\n        })\n\n          }\n\n          HaroldPay(){\n              const user = this.props.username; //'blackfish787';\n              const password = this.props.password; //'lestat';\n              const hmac = new jsSha('SHA-256', 'TEXT');\n              hmac.setHMACKey(password, 'TEXT');\n              hmac.update(user);\n              hmac.update(Date.now().toString(36).substring(0, 4));\n              const token = `${hmac.getHMAC('HEX')}%${user}`;\n              const api = axios.create({\n                baseURL: 'http://45.77.58.134:8080',\n                headers: { 'Authorization': 'Bearer ' + token }\n              });\n\n                api.post('/transactions', {\n\n                  \"time\": '',\n                  \"type\": 'debit',\n                  \"src\": this.state.src,\n                  \"dest\": '4d57aa2f-a0fb-39d7-b6ca-e584a7bc5324',\n                  \"amount\": -(this.state.amount2),\n                  \"ref\": this.state.ref2,\n            })\n\n            api.post('/transactions', {\n\n              \"time\": '',\n              \"type\": 'credit',\n              \"src\": '4d57aa2f-a0fb-39d7-b6ca-e584a7bc5324',\n              \"dest\": this.state.src,\n              \"amount\": this.state.amount1,\n              \"ref\": this.state.ref1,\n        })\n          }\n\n          DarrylPay(){\n              const user = this.props.username; //'blackfish787';\n              const password = this.props.password; //'lestat';\n              const hmac = new jsSha('SHA-256', 'TEXT');\n              hmac.setHMACKey(password, 'TEXT');\n              hmac.update(user);\n              hmac.update(Date.now().toString(36).substring(0, 4));\n              const token = `${hmac.getHMAC('HEX')}%${user}`;\n              const api = axios.create({\n                baseURL: 'http://45.77.58.134:8080',\n                headers: { 'Authorization': 'Bearer ' + token }\n              });\n\n                api.post('/transactions', {\n\n                  \"time\": '',\n                  \"type\": 'debit',\n                  \"src\": this.state.src,\n                  \"dest\": '8106961d-2746-305e-aa5c-fe7c9ef05b1b',\n                  \"amount\": -(this.state.amount3),\n                  \"ref\": this.state.ref3,\n            })\n\n            api.post('/transactions', {\n\n              \"time\": '',\n              \"type\": 'credit',\n              \"src\": '8106961d-2746-305e-aa5c-fe7c9ef05b1b',\n              \"dest\": this.state.src,\n              \"amount\": this.state.amount1,\n              \"ref\": this.state.ref1,\n        })\n          }\n\n          PhoebePay(){\n              const user = this.props.username; //'blackfish787';\n              const password = this.props.password; //'lestat';\n              const hmac = new jsSha('SHA-256', 'TEXT');\n              hmac.setHMACKey(password, 'TEXT');\n              hmac.update(user);\n              hmac.update(Date.now().toString(36).substring(0, 4));\n              const token = `${hmac.getHMAC('HEX')}%${user}`;\n              const api = axios.create({\n                baseURL: 'http://45.77.58.134:8080',\n                headers: { 'Authorization': 'Bearer ' + token }\n              });\n\n                api.post('/transactions', {\n\n                  \"time\": '',\n                  \"type\": 'debit',\n                  \"src\": this.state.src,\n                  \"dest\": 'a1b180d7-e139-3e85-921d-ff2fbedfd147',\n                  \"amount\": -(this.state.amount4),\n                  \"ref\": this.state.ref4,\n            })\n\n            api.post('/transactions', {\n\n              \"time\": '',\n              \"type\": 'credit',\n              \"src\": 'a1b180d7-e139-3e85-921d-ff2fbedfd147',\n              \"dest\": this.state.src,\n              \"amount\": this.state.amount1,\n              \"ref\": this.state.ref1,\n        })\n          }\n\n\n          onChange (e) {\n                      this.setState({[e.target.name]: e.target.value});\n                      console.log(this.state.src)\n          }\n\n\n\n      // {/* Render method returns a second navbar, textboxes and dropwdowns on the screen for user to perform a payment. */}\n      render () {\n        return (\n          <div>\n            <div className=\"navbar2\">\n              <NavLink to=\"/payments\" className=\"navButton\"> Once-off Payments </NavLink>\n              <NavLink to=\"/scheduled\" className=\"navButton\"> Scheduled Payments </NavLink>\n\n              <div className = \"dropdown\">\n                <button className = \"dropbtn\"> Pay Beneficiary <i className = \"fa fa-caret-down\"></i></button>\n              <div className = \"dropdown-content\">\n              <NavLink to=\"/beneficiary\" className=\"navButton\"> Add New Beneficiary </NavLink>\n              <NavLink to=\"/existing\" className=\"navButton\"> Existing Beneficiaries </NavLink>\n            </div>\n            </div>\n              <NavLink to=\"/history\" className=\"navButton\"> Payment History </NavLink>\n            </div>\n                        <h2>Existing Beneficiaries</h2>\n                        <table>\n                            <tr>\n                              <th>Name</th>\n                              <th>Account Type</th>\n                              <th>Pay Amount</th>\n                              <th>Reference</th>\n                              <th>Action</th>\n                            </tr>\n                            <tr>\n                              <td>Thomas</td>\n                              <td>Savings Account</td>\n                              <td><input className=\"imput\" name=\"amount1\" onChange={this.onChange} /></td>\n                              <td><input className=\"imput\" name=\"ref1\" onChange={this.onChange} /></td>\n                              <td><button className='button' onClick={this.ThomasPay}>Pay Again</button></td>\n                            </tr>\n                            <tr>\n                              <td>Harold</td>\n                              <td>Cheque Account</td>\n                              <td><input className=\"imput\" name=\"amount2\" onChange={this.onChange} /></td>\n                              <td><input className=\"imput\" name=\"ref2\" onChange={this.onChange} /></td>\n                              <td><button className='button' onClick={this.HaroldPay}>Pay Again</button></td>\n                            </tr>\n                            <tr>\n                              <td>Darryl</td>\n                              <td>Credit Account</td>\n                              <td><input className=\"imput\" name=\"amount3\" onChange={this.onChange} /></td>\n                              <td><input className=\"imput\" name=\"ref3\" onChange={this.onChange} /></td>\n                              <td><button className='button' onClick={this.DarrylPay}>Pay Again</button></td>\n                            </tr>\n                            <tr>\n                              <td>Phoebe</td>\n                              <td>Savings Account</td>\n                              <td><input className=\"imput\" name=\"amount4\" onChange={this.onChange} /></td>\n                              <td><input className=\"imput\" name=\"ref4\" onChange={this.onChange} /></td>\n                              <td><button className='button' onClick={this.PhoebePay}>Pay Again</button></td>\n                            </tr>\n                      </table>\n                      <br />\n                        </div>\n            )\n      }\n  }\n\nexport default Existing\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport jsSHA from 'jssha';\nimport axios from 'axios'\n\n\n class downloadStatements extends Component {\n   // {/* The constructor for a React Component is called before it is mounted. */}\n   constructor(props) {\n     {/* Pass props to the constructor by super. */}\n     super(props);\n     {/* Initalise the local state by assigning an object to this.state. */}\n     this.state={\n       // {/* Passing an empty string as a value for fromDate and toDate. */}\n       //fromDate: \" \",\n       //toDate: \" \",\n     }\n   }\n\n     // {/* Invoked immediately after a component is mounted. */}\n     componentDidMount() {\n           const user = 'beautifulmouse787';\n           const password = 'yogibear';\n           const hmac = new jsSHA('SHA-256', 'TEXT');\n           hmac.setHMACKey(password, 'TEXT');\n           hmac.update(user);\n           hmac.update(Date.now().toString(36).substring(0, 4));\n           const token = `${hmac.getHMAC('HEX')}%${user}`;\n           const api = axios.create({\n           // {/** Instantiate the network request. */}\n           baseURL: 'http://45.77.58.134:8080',\n           headers: { 'Authorization': 'Bearer ' + token }\n           });\n         }\n\n  // {/* Render method returns a second navbar and date pickers on the screen so user can view a statement based on a specific date period. */}\n   render () {\n     return (\n       <div>\n       <div className=\"navbar2\">\n         <NavLink to=\"/MyAccounts\" className = \"navButton\"> My Accounts </NavLink>\n         <NavLink to=\"/newAcc\" className = \"navButton\"> New Accounts </NavLink>\n         <NavLink to=\"/myCards\" className = \"navButton\"> My Cards </NavLink>\n         <NavLink to=\"/accInfo\" className = \"navButton\"> Account Information </NavLink>\n       </div>\n         <div className=\"content\">\n         <div id=\"payments\">\n           <h1 style={this.h1Style}>Download Statements</h1>\n           {/** Upon clicking the cancel button, user is redirected to the My Accounts page. */}\n           <NavLink to=\"/MyAccounts\" className=\"button\"> Cancel </NavLink>\n           <div>\n           </div>\n           {/** Upon clicking the logout button, user is redirected to the My Accounts page. */}\n           <NavLink to=\"/\" className=\"button\" > Logout </NavLink>\n       </div>\n     </div>\n     </div>\n   );\n   }\n}\n\n export default downloadStatements\n","import React, { Component } from 'react';\nimport ReactToPrint from \"react-to-print\";\nimport { NavLink } from 'react-router-dom';\nimport jsSHA from 'jssha';\nimport axios from 'axios';\n\n\n class printStatements extends Component {\n   // {/* Invoked immediately after a component is mounted. */}\n   componentDidMount() {\n         const user = 'beautifulmouse787';\n         const password = 'yogibear';\n         const hmac = new jsSHA('SHA-256', 'TEXT');\n         hmac.setHMACKey(password, 'TEXT');\n         hmac.update(user);\n         hmac.update(Date.now().toString(36).substring(0, 4));\n         const token = `${hmac.getHMAC('HEX')}%${user}`;\n         const api = axios.create({\n         // {/** Instantiate the network request. */}\n         baseURL: 'http://45.77.58.134:8080',\n         headers: { 'Authorization': 'Bearer ' + token }\n         });\n       }\n\n   // {/* Render method returns a second navbar and date pickers on the screen so user can view a statement based on a specific date period. */}\n   render () {\n     return (\n       <div>\n       <div className=\"navbar2\">\n         <NavLink to=\"/MyAccounts\" className = \"navButton\"> My Accounts </NavLink>\n         <NavLink to=\"/newAcc\" className = \"navButton\"> New Accounts </NavLink>\n         <NavLink to=\"/myCards\" className = \"navButton\"> My Cards </NavLink>\n         <NavLink to=\"/accInfo\" className = \"navButton\"> Account Information </NavLink>\n       </div>\n         <div className=\"content\">\n         <div id=\"payments\">\n           <h1 style={this.h1Style}>Print Statements</h1>\n           <button className = \"button\" onClick={() => window.print()}>Print</button>\n           {/* Upon clicking the cancel button, user is redirceted to the My Accounts page. */}\n           <NavLink to=\"/MyAccounts\" className=\"button\"> Cancel </NavLink>\n           {/* Upon clicking the logout button, user is redirceted to the home page. */}\n           <NavLink to=\"/\" className=\"button\" > Logout </NavLink>\n       </div>\n     </div>\n     </div>\n   );\n   }\n }\n\n export default printStatements\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport jsSHA from 'jssha';\nimport axios from 'axios';\n\nclass Electricity extends Component {\n  // {/* The constructor for a React Component is called before it is mounted. */}\n  constructor(props) {\n    {/* Pass props to the constructor by super. */}\n    super(props);\n    {/* Initalise the local state by assigning an object to this.state. */}\n    this.state={\n      // {/* Passing an 0 as a value for amount. */}\n      amount: 0,\n    }\n\n    {/**\n    * Bind the value of the control to the currrent value of the state.\n    * There must be a bound so that if there is a value and something that causes the control to re-render,\n    it gets the correct value out of the state.\n    */}\n    this.selectFrom = this.selectFrom.bind(this)\n    this.componentDidMount = this.componentDidMount.bind(this)\n  }\n\n  // {/* Invoked immediately after a component is mounted. */}\n  componentDidMount() {\n         const user = this.props.username; //'blackfish787';\n         const password = this.props.password; //'lestat';\n         const hmac = new jsSHA('SHA-256', 'TEXT');\n         hmac.setHMACKey(password, 'TEXT');\n         hmac.update(user);\n         hmac.update(Date.now().toString(36).substring(0, 4));\n         const token = `${hmac.getHMAC('HEX')}%${user}`;\n         const api = axios.create({\n           // {/** Instantiate the network request. */}\n           baseURL: 'http://45.77.58.134:8080',\n           headers: { 'Authorization': 'Bearer ' + token }\n\n         });\n         (async () => {\n           // {/* Retrieve clients for authenticated user. */}}\n           const res = await api.get('/clients');\n           // /*  Retrieve accounts for specified client UUID. */}\n           const acc = await api.get(`/accounts/${res.data[0]._id}`)\n           // {/*  Retrieves all( .*) transactions for given accounts based on the clients ID. */}\n           let trans = await api.get(`/transactions/${acc.data[0]._id}/.*`)\n\n           // {/* Post a new transaction, requires a body object as below. */\n           await api.post(\"/transactions\", {\n             \"type\": 'Electricity',\n             \"src\": acc.data[0]._id,\n             \"dest\": acc.data[0]._id,\n             \"amount\": this.state.amount,\n             \"ref\": 'Electricity'\n             });\n           // {/*  Retrieves all( .*) transactions for given accounts based on the clients ID. */}\n           trans = await api.get(`/transactions/${acc.data[0]._id}/.*`)\n           console.log(trans);\n         })();\n       }\n\n       selectFrom (event) {\n         this.setState ({\n           amount: event.target.value\n         })\n       }\n\n\n\n  // {/* Render method returns a second navbar and a dropwdown on the screen for user to select the amount of electricity to buy. */}\n  render () {\n    return (\n      <div>\n      <div className=\"navbar2\">\n        <NavLink to=\"/utilities\" className=\"navButton\"> Airtime and Bundles </NavLink>\n        <NavLink to=\"/buyElectricity\" className=\"navButton\"> Electricity </NavLink>\n        </div>\n      <div className=\"content\">\n        <div id=\"payments\">\n          <div id=\"Electricity\" className=\"w3-container city\" >\n            <h1>Electricity</h1>\n            <form action=\"/action_page.php\" >\n              <h2> 1. Details </h2>\n              <p> Choose Recharge Amount:\n                <select className=\"imput\" value={this.state.amount} onChange={this.selectFrom}>\n                  <option value=\"\">Select:</option>\n                  <option value=\"Savings Account\">R30.00</option>\n                  <option value=\"Student Account\">R50.00</option>\n                  <option value=\"Savings Account\">R100.00</option>\n                  <option value=\"Business Account\">R150.00</option>\n                  <option value=\"Savings Account\">R300.00</option>\n                  <option value=\"Business Account\">R500.00</option>\n                  <option value=\"Savings Account\">R1000.00</option>\n                </select></p>\n            </form>\n            <button className='button' onClick={this.componentDidMount}>Buy</button><br/><br/>\n          </div>\n        </div>\n      </div>\n      </div>\n    )\n  }\n}\n\nexport default Electricity\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nclass Legal extends Component {\n  // {/* Render method returns a second navbar and the bank's legal information on the screen. */}\n  render () {\n    return (\n      <div>\n      <div className='navbar2'>\n      <NavLink to=\"/Support\" className=\"navButton\"> Banking Regulations </NavLink>\n      <NavLink to=\"/Legal\" className=\"navButton\"> Legal </NavLink>\n      <NavLink to=\"/Faq\" className=\"navButton\"> FAQ </NavLink>\n      <NavLink to=\"/Contact\" className=\"navButton\"> Contact US </NavLink>\n      </div>\n\n      <div className=\"content\">\n        <div  className=\"w3-container city Scheduled Payments\" >\n          <h1 className=\"legal\">Legal</h1>\n          We respect your privacy and personal information!<br/>This Privacy Policy governs the manner in which Bank of the Sun treats your personal information collected<br/>\n          electronically when you use our website (which can be found at www.BankOfTheSun.co.za, apply online for certain products and services, contact us electronically or register<br/>\n          for one of the services offered on the website. We respect your privacy and your personal information and for this reason, we take all reasonable measures, in accordance with this <br/>\n          Policy, to protect your personal information and to keep it confidential, even when you are no longer our customer. We also voluntarily subscribe to the principles, outlined in Section<br/>\n          51 of the Electronic Communications and Transactions Act 2002 ('ECT Act'), which govern your right to having your personal information kept private.<br/><br/>\n        </div>\n      </div><br/>\n      </div>\n    )\n  }\n}\n\nexport default Legal\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nclass Faq extends Component {\n  // {/* Render method returns a second navbar and answers to FAQ on the screen. */}\n  render () {\n    return (\n      <div>\n      <div className='navbar2'>\n      <NavLink to=\"/support\" className=\"navButton\"> Banking Regulations </NavLink>\n      <NavLink to=\"/legal\" className=\"navButton\"> Legal </NavLink>\n      <NavLink to=\"/faq\" className=\"navButton\"> FAQ </NavLink>\n      <NavLink to=\"/contact\" className=\"navButton\"> Contact US </NavLink>\n      </div>\n\n      <div className=\"content\">\n        <div className=\"Pay Beneficiaries w3-container city\">\n          <h1>FAQ</h1>\n          <br/>\n          What is Bank of the Sun?<br/>\n          Bank of the Sun is a bank that offers cheque accounts, credit cards, savings accounts and investment services.<br/>\n          Internet banking is supported through the website.<br/>\n          Our vision is to give everyone in the world the opportunity to enjoy a healthy financial life.<br/><br/>\n\n          What products do you offer?<br/>\n          At the moment, we offer four types of bank accounts: cheque accounts, credit cards, savings accounts and investment accounts.<br/><br/>\n\n          What about my information? Is that safe?<br/>\n          The protection and security of your personal data is of paramount importance to us. We use advanced data<br/>\n          encryption and storing technologies that ensure your personal information and transactions are sent and <br/>\n          stored securely. Our privacy notice provides more information on what data we collect and how it gets used.<br/><br/>\n\n          Can I use my card overseas and will I be charged?<br/>\n          The Bank of the Sun card is the ultimate travel buddy — welcome anywhere you see the Mastercard acceptance logo.<br/>\n\n          Take a look at our pricing policy for more info: www.BankOfThe Sun.com/legal/<br/><br/>\n        </div>\n      </div><br/>\n      </div>\n    )\n  }\n}\n\nexport default Faq\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nclass Contact extends Component {\n  // {/* Render method returns a second navbar and the bank's contact details on the screen. */}\n  render () {\n    return (\n      <div>\n      <div className='navbar2'>\n      <NavLink to=\"/support\" className=\"navButton\"> Banking Regulations </NavLink>\n      <NavLink to=\"/legal\" className=\"navButton\"> Legal </NavLink>\n      <NavLink to=\"/faq\" className=\"navButton\"> FAQ </NavLink>\n      <NavLink to=\"/contact\" className=\"navButton\"> Contact US </NavLink>\n      </div>\n      <div className=\"content\">\n        <div className=\"Payment History w3-container city\">\n          <h1 className=\"call\">Contact Us</h1>\n          Land-line:<div className=\"space\">(021) 590 6625</div>\n          <br/>\n          <br/>\n          E-mail: <div className=\"space\">bankofthesun@something.something</div>\n          <br/>\n          <br/>\n          Facebook:<div className=\"space\"><a href=\"http://www.fabebook.com\">facebook</a></div>\n        </div>\n      </div><br/>\n      </div>\n    )\n  }\n}\n\nexport default Contact\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport jsSHA from 'jssha';\nimport axios from 'axios';\nimport Login from './login'\n\n\nclass Register1 extends Component {\n  // {/* The constructor for a React Component is called before it is mounted. */}\n  constructor(props) {\n    // {/* Pass props to the constructor by super. */}\n    super(props);\n    // {/* Initalise the local state by assigning objects to this.state. */}\n    this.state={\n      // {/* Passing an array as a value for username and password. */}\n      username: '' ,\n      password: '',\n    }\n\n    {/**\n      * Bind the value of the control to the currrent value of the state.\n      * There must be a bound so that if there is a value and something that causes the control to re-render,\n      it gets the correct value out of the state.\n      */}\n      this.componentDidMount=this.componentDidMount.bind(this)\n    }\n\n    // {/* Invoked immediately after a component is mounted. */}\n    componentDidMount() {\n      // /* Props is used to pass the username and password down the component tree from the parent (App.js) to child (MyAccounts.js) */\n      const user = this.state.username;\n      const password =this.state.password;\n      console.log(\"username\", user);\n      console.log(\"password\", password);\n      const hmac = new jsSHA('SHA-256', 'TEXT');\n      hmac.setHMACKey(password, 'TEXT');\n      hmac.update(user);\n      hmac.update(Date.now().toString(36).substring(0, 4));\n      const token = `${hmac.getHMAC('HEX')}%${user}`;\n      const api = axios.create({\n        baseURL: 'http://45.77.58.134:8080',\n        headers: { 'Authorization': 'Bearer ' + token }\n      });\n\n      (async () => {\n        // {/** Post a new user to the API. */}\n        await api.post(\"/user\", {\n          \"username\": this.state.username,\n          \"password\": this.state.password,\n        })\n        console.log(\"post user hit\")\n      })();\n    }\n\n    // {/* Render method returns user registration page on the screen. */}\n    render () {\n      return(\n        <div>\n          <div className=\"content\">\n            <div id=\"payments\">\n              <h1>Registration</h1>\n              <h2> Fill in the Following information </h2>\n            <div id=\"create\">\n              <p> Username: <input className=\"imput\" onChange={e=>{this.setState({username: e.target.value.trim()})}} value={this.state.username} type=\"text\" name=\"amount\" /></p>\n              <p> Password: <input className=\"imput\" onChange={e=>{this.setState({password: e.target.value.trim()})}} value={this.state.password} type=\"text\" name=\"amount\" /></p>\n            </div>\n            <div className=\"text\">\n              <button className=\"button\" onClick={this.componentDidMount}>Submit Registration</button><br/><br/>\n            </div>\n          </div>\n        </div>\n      </div>\n      );\n    }\n  };\n\n  export default Register1\n","import React, { Component } from 'react';\nimport './styleSheet.css';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport Home from './components/home';\nimport Support from './components/support';\nimport Error from './components/error';\nimport Navigation from './components/navigation';\nimport Login from './components/login';\nimport Payments from './components/payments';\nimport Transfers from './components/transfers';\nimport Utilities from './components/utilities';\nimport MyAccounts from './components/MyAccounts';\nimport Newacc from './components/newacc';\nimport AccInfo from './components/accInfo';\nimport Statements from './components/Statements';\nimport History from './components/history';\nimport Beneficiary from './components/beneficiary';\nimport Scheduled from './components/scheduled';\nimport Existing from './components/existing';\nimport downloadStatements from './components/downloadStatements';\nimport printStatements from './components/printStatements';\nimport Electricity from './components/buyElectricity';\nimport Footer from './components/footer';\nimport Legal from './components/legal';\nimport Faq from './components/faq';\nimport Contact from './components/contact';\nimport Airtime from './components/Airtime';\nimport SMS from './components/sms';\nimport Data from './components/data';\nimport Register1 from './components/register1';\n\nclass App extends Component {\n  // {/* The constructor for a React Component is called before it is mounted. */}\n  constructor(props) {\n    // {/* Pass props to the constructor by super. */}\n   super(props);\n   {/**\n   * Bind the value of the control to the currrent value of the state.\n   * There must be a bound so that if there is a value and something that causes the control to re-render,\n   it gets the correct value out of the state.\n   */}\n   this.loginstateimport = this.loginstateimport.bind(this);\n   // {/* Initalise the local state by assigning objects to this.state. */}\n   this.state = {\n     // {/* Passing an empty string as a value for username and password.. */}\n     username: \" \",\n     password: \" \",\n   };\n }\n\n // {/* A function to update the state of username and password.. */}\n loginstateimport(data){\n   this.setState({username: data.username, password: data.password})\n   console.log(data)\n }\n\n // {/* Renders the banking wesbite on the screen. */}\n  render() {\n    return (\n      <BrowserRouter>\n      <div>\n      <Login store={this.loginstateimport}/>\n      <Switch>\n        <Route path=\"/\" component={Home} exact/>\n        <Route path=\"/support\" component={Support}/>\n        <Route path=\"/payments\"  render={props=> <Payments username={this.state.username} password={this.state.password}/>}/> //component={Payments}/>\n        <Route path=\"/transfers\" render={props => <Transfers username={this.state.username} password={this.state.password}/>}/>//component={Transfers}/>\n        <Route path=\"/utilities\" render={props => <Utilities username={this.state.username} password={this.state.password}/>}/> //component={Utilities}\n        <Route path=\"/buyElectricity\" render={props => <Electricity username={this.state.username} password={this.state.password}/>}/> //component={Electricity} />\n        <Route path=\"/MyAccounts\" render={props => <MyAccounts username={this.state.username} password={this.state.password}/>}/>\n        <Route path=\"/newAcc\"   render={props=> <Newacc username={this.state.username} password={this.state.password}/>}/>//component={Newacc}/>\n        <Route path=\"/accInfo\" component={AccInfo}/>\n        <Route path=\"/Statements/:accid\" component={Statements}/>\n        <Route path=\"/beneficiary\" render={props=> <Beneficiary username={this.state.username} password={this.state.password}/>}/>\n        <Route path=\"/scheduled\" render={props=> <Scheduled username={this.state.username} password={this.state.password}/>}/>\n        <Route path=\"/existing\"  render={props=> <Existing username={this.state.username} password={this.state.password}/>}/>\n        <Route path=\"/downloadStatements\" component={downloadStatements}/>\n        <Route path=\"/printStatements\" component={printStatements}/>\n        <Route path=\"/history\" render={props=> <History username={this.state.username} password={this.state.password}/>}/>//component={Newacc}/>\n        <Route path=\"/legal\" component={Legal}/>\n        <Route path=\"/faq\" component={Faq}/>\n        <Route path=\"/contact\" component={Contact}/>\n        <Route path=\"/Airtime\" render={props=> <Airtime username={this.state.username} password={this.state.password}/>}/>\n        <Route path=\"/data\" render={props=> <Data username={this.state.username} password={this.state.password}/>}/>\n        <Route path=\"/sms\" render={props=> <SMS username={this.state.username} password={this.state.password}/>}/>\n        <Route path=\"/register1\" render={props=> <Register1 username={this.state.username} password={this.state.password}/>}/>\n        <Route component={Error}/>\n      </Switch>\n      <Footer/>\n      </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}